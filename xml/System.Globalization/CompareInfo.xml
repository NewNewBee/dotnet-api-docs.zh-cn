<Type Name="CompareInfo" FullName="System.Globalization.CompareInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b99d2d08b086d754f0ffbd51581669097c9c461" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75133890" /></Metadata><TypeSignature Language="C#" Value="public class CompareInfo : System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompareInfo extends System.Object implements class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CompareInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareInfo&#xA;Implements IDeserializationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareInfo : System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type CompareInfo = class&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e2a2c-101">实现一组方法，用于比较需要区分区域性的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-101">Implements a set of methods for culture-sensitive string comparisons.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-102">用于比较和排序数据的约定因区域性而异。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-102">Conventions for comparing and sorting data vary from culture to culture.</span></span> <span data-ttu-id="e2a2c-103">例如，排序顺序可能基于拼音或基于字符的可视表示形式。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-103">For example, sort order may be based on phonetics or on the visual representation of characters.</span></span> <span data-ttu-id="e2a2c-104">在东亚语言中，按文字的笔画和部首对字符进行排序。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-104">In East Asian languages, characters are sorted by the stroke and radical of ideographs.</span></span> <span data-ttu-id="e2a2c-105">排序也取决于字母表使用的排序语言和区域性。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-105">Sorting also depends on the order languages and cultures use for the alphabet.</span></span> <span data-ttu-id="e2a2c-106">例如，丹麦语包含一个 "Æ" 字符，该字符在字母表中的 "Z" 之后排序。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-106">For example, the Danish language has an "Æ" character that it sorts after "Z" in the alphabet.</span></span> <span data-ttu-id="e2a2c-107">此外，比较可以区分大小写或不区分大小写，并且大小写规则也可能因区域性而异。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-107">In addition, comparisons may be case-sensitive or case-insensitive, and casing rules may also differ by culture.</span></span> <span data-ttu-id="e2a2c-108"><xref:System.Globalization.CompareInfo> 类负责维护此区分区域性的字符串比较数据并执行区分区域性的字符串运算。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-108">The <xref:System.Globalization.CompareInfo> class is responsible for maintaining this culture-sensitive string comparison data and for performing culture-sensitive string operations.</span></span>

 <span data-ttu-id="e2a2c-109">通常，您不必直接实例化 <xref:System.Globalization.CompareInfo> 对象，因为所有非序号字符串比较运算会隐式使用一个此对象，包括对 <xref:System.String.Compare%2A?displayProperty=nameWithType> 方法的调用。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-109">Typically, you do not have to instantiate a <xref:System.Globalization.CompareInfo> object directly, because one is used implicitly by all non-ordinal string comparison operations, including calls to the <xref:System.String.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e2a2c-110">但是，若要检索 <xref:System.Globalization.CompareInfo> 对象，您可通过下列方法之一执行此操作：</span><span class="sxs-lookup"><span data-stu-id="e2a2c-110">However, if you do want to retrieve a <xref:System.Globalization.CompareInfo> object, you can do it in one of these ways:</span></span>

-   <span data-ttu-id="e2a2c-111">通过检索特定区域性的 <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-111">By retrieving the value of the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property for a particular culture.</span></span>

-   <span data-ttu-id="e2a2c-112">通过使用区域性名称调用静态 <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-112">By calling the static <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> method with a culture name.</span></span> <span data-ttu-id="e2a2c-113">这允许对 <xref:System.Globalization.CompareInfo> 对象进行后期绑定访问。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-113">This allows for late-bound access to a <xref:System.Globalization.CompareInfo> object.</span></span>

## <a name="ignored-search-values"></a><span data-ttu-id="e2a2c-114">已忽略的搜索值</span><span class="sxs-lookup"><span data-stu-id="e2a2c-114">Ignored search values</span></span>
 <span data-ttu-id="e2a2c-115">字符集包括可忽略字符，在执行语言性的或区分区域性的比较时该字符不被考虑。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-115">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-116">当比较方法（如 <xref:System.Globalization.CompareInfo.IndexOf%2A> 和 <xref:System.Globalization.CompareInfo.LastIndexOf%2A>）执行区分区域性的比较时，它们不会考虑此类字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-116">Comparison methods such as <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> do not consider such characters when they perform a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-117">可忽略的字符包括：</span><span class="sxs-lookup"><span data-stu-id="e2a2c-117">Ignorable characters include:</span></span>

-   <span data-ttu-id="e2a2c-118"><xref:System.String.Empty?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="e2a2c-118"><xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e2a2c-119">区分区域性的比较方法将始终在要搜索的字符串的开头（索引为零）查找空字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-119">Culture-sensitive comparison methods will always find an empty string at the beginning (index zero) of the string being searched.</span></span>

-   <span data-ttu-id="e2a2c-120">字符或由多个字符和运算中未考虑的码位（因为比较选项）构成的字符串，具体而言，<xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> 和 <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> 选项生成忽略符号和非间距组合字符的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-120">A character or string consisting of characters with code points that are not considered in the operation because of comparison options, In particular, the  <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> and <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> options produce searches in which symbols and nonspacing combining characters are ignored.</span></span>

-   <span data-ttu-id="e2a2c-121">带没有语义的码位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-121">A string with code points that have no linguistic significance.</span></span> <span data-ttu-id="e2a2c-122">例如，始终在区分区域性的字符串比较中忽略软连字符 (U+00AD)。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-122">For example, a soft hyphen (U+00AD) is always ignored in a culture-sensitive string comparison.</span></span>

## <a name="security-considerations"></a><span data-ttu-id="e2a2c-123">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="e2a2c-123">Security considerations</span></span>
 <span data-ttu-id="e2a2c-124">如果安全决策取决于字符串比较或大小写更改，则您应使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 属性来确保行为一致，无论操作系统的区域性设置如何。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-124">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent, regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-125">如果可能，应使用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法来指定预期的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-125">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-126">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-126">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-127">下面的示例演示与 <xref:System.Globalization.CultureInfo> 对象关联的 <xref:System.Globalization.CompareInfo> 对象如何影响字符串比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-127">The following example shows how the <xref:System.Globalization.CompareInfo> object associated with a <xref:System.Globalization.CultureInfo> object affects string comparison.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/download/details.aspx?id=10921"><span data-ttu-id="e2a2c-128">为 Windows 操作系统排序权重表</span><span class="sxs-lookup"><span data-stu-id="e2a2c-128">Sorting Weight Tables for Windows operating systems</span></span></related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt"><span data-ttu-id="e2a2c-129">适用于 Linux 和 macOS 的默认 Unicode 排序规则元素表</span><span class="sxs-lookup"><span data-stu-id="e2a2c-129">Default Unicode Collation Element Table, for Linux and macOS</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a2c-130">比较两个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-130">Compares two strings.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int&#xA;override this.Compare : string * string -&gt; int" Usage="compareInfo.Compare (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="e2a2c-131">要比较的第一个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-131">The first string to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="e2a2c-132">要比较的第二个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-132">The second string to compare.</span></span></param>
        <summary><span data-ttu-id="e2a2c-133">比较两个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-133">Compares two strings.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-134">一个 32 位有符号整数，指示两个比较数之间的词法关系。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-134">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="e2a2c-135">值</span><span class="sxs-lookup"><span data-stu-id="e2a2c-135">Value</span></span>

 </term><description> <span data-ttu-id="e2a2c-136">条件</span><span class="sxs-lookup"><span data-stu-id="e2a2c-136">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="e2a2c-137">零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-137">zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-138">这两个字符串相等。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-138">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-139">小于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-139">less than zero</span></span>

 </term><description><span data-ttu-id="e2a2c-140"><paramref name="string1" /> 小于 <paramref name="string2" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-140"><paramref name="string1" /> is less than <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-141">大于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-141">greater than zero</span></span>

 </term><description><span data-ttu-id="e2a2c-142"><paramref name="string1" /> 大于 <paramref name="string2" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-142"><paramref name="string1" /> is greater than <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-143">默认情况下，使用 <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>执行比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-143">By default, the comparison is performed by using <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e2a2c-144">如果安全决策取决于字符串比较或大小写更改，则应使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 属性，以确保无论操作系统的区域性设置如何，行为都保持一致。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-144">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-145">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-145">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-146">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-146">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-147">下面的示例使用不同的 <xref:System.Globalization.CompareInfo> 对象比较两个字符串的各个部分：</span><span class="sxs-lookup"><span data-stu-id="e2a2c-147">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="e2a2c-148">与采用国际排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-148"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="e2a2c-149">与采用传统排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-149"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="e2a2c-150">与 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-150"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]

 <span data-ttu-id="e2a2c-151">下面的示例演示如何调用 <xref:System.Globalization.CompareInfo.Compare%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-151">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-152">字符集包括可忽略字符，在执行语言性的或区分区域性的比较时该字符不被考虑。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-152">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-153">当 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> 方法执行区分区域性的比较时，不考虑此类字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-153">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-154">例如，使用 "ani" （使用软连字符或 U + 00AD）的 "动物" 比较区分区域性的比较表明这两个字符串是等效的，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-154">For instance, a culture-sensitive comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent, as the following example shows.</span></span>

<span data-ttu-id="e2a2c-155">[！ code-vb[CompareInfo # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-155">[!code-vb[System.Globalization.CompareInfo.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]</span></span>

<span data-ttu-id="e2a2c-156">若要识别字符串比较中的可忽略字符，请调用 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> 方法，并为 <paramref name="options" /> 参数提供 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-156">To recognize ignorable characters in a string comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, string2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="e2a2c-157">要比较的第一个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-157">The first string to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="e2a2c-158">要比较的第二个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-158">The second string to compare.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-159">一个值，用于定义应如何比较 <paramref name="string1" /> 和 <paramref name="string2" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-159">A value that defines how <paramref name="string1" /> and <paramref name="string2" /> should be compared.</span></span> <span data-ttu-id="e2a2c-160"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 和 <see cref="F:System.Globalization.CompareOptions.StringSort" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-160"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-161">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值比较两个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-161">Compares two strings using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-162">一个 32 位有符号整数，指示两个比较数之间的词法关系。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-162">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="e2a2c-163">值</span><span class="sxs-lookup"><span data-stu-id="e2a2c-163">Value</span></span>

 </term><description> <span data-ttu-id="e2a2c-164">条件</span><span class="sxs-lookup"><span data-stu-id="e2a2c-164">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="e2a2c-165">零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-165">zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-166">这两个字符串相等。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-166">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-167">小于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-167">less than zero</span></span>

 </term><description><span data-ttu-id="e2a2c-168"><paramref name="string1" /> 小于 <paramref name="string2" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-168"><paramref name="string1" /> is less than <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-169">大于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-169">greater than zero</span></span>

 </term><description><span data-ttu-id="e2a2c-170"><paramref name="string1" /> 大于 <paramref name="string2" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-170"><paramref name="string1" /> is greater than <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-171">如果安全决策取决于字符串比较或大小写更改，则应使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 属性，以确保无论操作系统的区域性设置如何，行为都保持一致。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-171">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-172">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-172">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-173">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-173">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-174">下面的示例使用不同 <xref:System.Globalization.CompareOptions> 设置来比较两个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-174">The following example compares two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CPP/comparestrstropt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CS/comparestrstropt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/VB/comparestrstropt.vb#1)]

 <span data-ttu-id="e2a2c-175">下面的示例演示如何调用 <xref:System.Globalization.CompareInfo.Compare%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-175">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-176"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-176"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-177">字符集包括可忽略字符，在执行语言性的或区分区域性的比较时该字符不被考虑。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-177">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-178">当 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> 方法执行区分区域性的比较时，不考虑此类字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-178">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-179">若要在比较中识别可忽略字符，请为 <paramref name="options" /> 参数提供 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-179">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int -&gt; int&#xA;override this.Compare : string * int * string * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="e2a2c-180">要比较的第一个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-180">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="e2a2c-181"><paramref name="string1" /> 中的字符从零开始的索引，将从此位置开始比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-181">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="string2"><span data-ttu-id="e2a2c-182">要比较的第二个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-182">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="e2a2c-183"><paramref name="string2" /> 中的字符从零开始的索引，将从此位置开始比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-183">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <summary><span data-ttu-id="e2a2c-184">将一个字符串的结尾部分与另一个字符串的结尾部分相比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-184">Compares the end section of a string with the end section of another string.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-185">一个 32 位有符号整数，指示两个比较数之间的词法关系。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-185">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="e2a2c-186">值</span><span class="sxs-lookup"><span data-stu-id="e2a2c-186">Value</span></span>

 </term><description> <span data-ttu-id="e2a2c-187">条件</span><span class="sxs-lookup"><span data-stu-id="e2a2c-187">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="e2a2c-188">零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-188">zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-189">这两个字符串相等。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-189">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-190">小于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-190">less than zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-191"><paramref name="string1" /> 的指定部分小于 <paramref name="string2" /> 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-191">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-192">大于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-192">greater than zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-193"><paramref name="string1" /> 的指定部分大于 <paramref name="string2" /> 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-193">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-194">如果安全决策取决于字符串比较或大小写更改，则应使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 属性，以确保无论操作系统的区域性设置如何，行为都保持一致。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-194">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-195">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-195">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-196">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-196">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-197">下面的示例使用不同的 <xref:System.Globalization.CompareInfo> 对象比较两个字符串的各个部分：</span><span class="sxs-lookup"><span data-stu-id="e2a2c-197">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="e2a2c-198">与采用国际排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-198"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="e2a2c-199">与采用传统排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-199"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="e2a2c-200">与 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-200"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CPP/comparestrintstrint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CS/comparestrintstrint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/VB/comparestrintstrint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-201"><paramref name="offset1" /> 或 <paramref name="offset2" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-201"><paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-202">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-202">-or-</span></span>

 <span data-ttu-id="e2a2c-203"><paramref name="offset1" /> 大于或等于 <paramref name="string1" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-203"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>

<span data-ttu-id="e2a2c-204">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-204">-or-</span></span>

 <span data-ttu-id="e2a2c-205"><paramref name="offset2" /> 大于或等于 <paramref name="string2" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-205"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-206">字符集包括可忽略字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-206">Character sets include ignorable characters.</span></span> <span data-ttu-id="e2a2c-207">在执行语言或区分区域性的比较时，<see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> 方法不考虑这些字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-207">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-208">若要在比较中识别可忽略的字符，请调用 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> 方法，并为 <paramref name="options" /> 参数提供 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-208">To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="e2a2c-209">要比较的第一个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-209">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="e2a2c-210"><paramref name="string1" /> 中的字符从零开始的索引，将从此位置开始比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-210">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="string2"><span data-ttu-id="e2a2c-211">要比较的第二个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-211">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="e2a2c-212"><paramref name="string2" /> 中的字符从零开始的索引，将从此位置开始比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-212">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-213">一个值，用于定义应如何比较 <paramref name="string1" /> 和 <paramref name="string2" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-213">A value that defines how <paramref name="string1" /> and <paramref name="string2" /> should be compared.</span></span> <span data-ttu-id="e2a2c-214"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 和 <see cref="F:System.Globalization.CompareOptions.StringSort" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-214"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-215">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值将一个字符串的结尾部分与另一个字符串的结尾部分相比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-215">Compares the end section of a string with the end section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-216">一个 32 位有符号整数，指示两个比较数之间的词法关系。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-216">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="e2a2c-217">值</span><span class="sxs-lookup"><span data-stu-id="e2a2c-217">Value</span></span>

 </term><description> <span data-ttu-id="e2a2c-218">条件</span><span class="sxs-lookup"><span data-stu-id="e2a2c-218">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="e2a2c-219">零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-219">zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-220">这两个字符串相等。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-220">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-221">小于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-221">less than zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-222"><paramref name="string1" /> 的指定部分小于 <paramref name="string2" /> 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-222">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-223">大于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-223">greater than zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-224"><paramref name="string1" /> 的指定部分大于 <paramref name="string2" /> 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-224">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-225">如果安全决策取决于字符串比较或大小写更改，则应使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 属性，以确保无论操作系统的区域性设置如何，行为都保持一致。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-225">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-226">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-226">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-227">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-227">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-228">下面的示例使用不同 <xref:System.Globalization.CompareOptions> 设置来比较两个字符串的各个部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-228">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CPP/comparestrintstrintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CS/comparestrintstrintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/VB/comparestrintstrintopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-229"><paramref name="offset1" /> 或 <paramref name="offset2" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-229"><paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-230">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-230">-or-</span></span>

 <span data-ttu-id="e2a2c-231"><paramref name="offset1" /> 大于或等于 <paramref name="string1" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-231"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>

<span data-ttu-id="e2a2c-232">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-232">-or-</span></span>

 <span data-ttu-id="e2a2c-233"><paramref name="offset2" /> 大于或等于 <paramref name="string2" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-233"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-234"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-234"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-235">字符集包括可忽略字符，在执行语言性的或区分区域性的比较时该字符不被考虑。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-235">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-236">在执行区分区域性的比较时，<see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> 方法不考虑此类字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-236">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method does not consider such characters when performing a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-237">若要在比较中识别可忽略字符，请为 <paramref name="options" /> 参数提供 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-237">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int -&gt; int&#xA;override this.Compare : string * int * int * string * int * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="e2a2c-238">要比较的第一个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-238">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="e2a2c-239"><paramref name="string1" /> 中的字符从零开始的索引，将从此位置开始比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-239">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="length1"><span data-ttu-id="e2a2c-240"><paramref name="string1" /> 中要比较的连续字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-240">The number of consecutive characters in <paramref name="string1" /> to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="e2a2c-241">要比较的第二个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-241">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="e2a2c-242"><paramref name="string2" /> 中的字符从零开始的索引，将从此位置开始比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-242">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <param name="length2"><span data-ttu-id="e2a2c-243"><paramref name="string2" /> 中要比较的连续字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-243">The number of consecutive characters in <paramref name="string2" /> to compare.</span></span></param>
        <summary><span data-ttu-id="e2a2c-244">将一个字符串的一部分与另一个字符串的一部分相比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-244">Compares a section of one string with a section of another string.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-245">一个 32 位有符号整数，指示两个比较数之间的词法关系。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-245">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="e2a2c-246">值</span><span class="sxs-lookup"><span data-stu-id="e2a2c-246">Value</span></span>

 </term><description> <span data-ttu-id="e2a2c-247">条件</span><span class="sxs-lookup"><span data-stu-id="e2a2c-247">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="e2a2c-248">零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-248">zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-249">这两个字符串相等。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-249">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-250">小于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-250">less than zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-251"><paramref name="string1" /> 的指定部分小于 <paramref name="string2" /> 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-251">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-252">大于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-252">greater than zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-253"><paramref name="string1" /> 的指定部分大于 <paramref name="string2" /> 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-253">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-254">如果安全决策取决于字符串比较或大小写更改，则应使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 属性，以确保无论操作系统的区域性设置如何，行为都保持一致。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-254">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-255">如果可能，应使用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法来指定预期的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-255">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-256">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-256">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-257">下面的示例使用不同的 <xref:System.Globalization.CompareInfo> 对象比较两个字符串的各个部分：</span><span class="sxs-lookup"><span data-stu-id="e2a2c-257">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="e2a2c-258">与采用国际排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-258"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="e2a2c-259">与采用传统排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-259"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="e2a2c-260">与 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-260"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CPP/comparestrintintstrintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CS/comparestrintintstrintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/VB/comparestrintintstrintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-261"><paramref name="offset1" />、<paramref name="length1" />、<paramref name="offset2" /> 或 <paramref name="length2" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-261"><paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-262">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-262">-or-</span></span>

 <span data-ttu-id="e2a2c-263"><paramref name="offset1" /> 大于或等于 <paramref name="string1" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-263"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>

<span data-ttu-id="e2a2c-264">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-264">-or-</span></span>

 <span data-ttu-id="e2a2c-265"><paramref name="offset2" /> 大于或等于 <paramref name="string2" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-265"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span>

<span data-ttu-id="e2a2c-266">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-266">-or-</span></span>

 <span data-ttu-id="e2a2c-267"><paramref name="length1" /> 大于从 <paramref name="offset1" /> 到 <paramref name="string1" /> 末尾的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-267"><paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span></span>

<span data-ttu-id="e2a2c-268">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-268">-or-</span></span>

 <span data-ttu-id="e2a2c-269"><paramref name="length2" /> 大于从 <paramref name="offset2" /> 到 <paramref name="string2" /> 末尾的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-269"><paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-270">字符集包括可忽略字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-270">Character sets include ignorable characters.</span></span> <span data-ttu-id="e2a2c-271">在执行语言或区分区域性的比较时，<see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> 方法不考虑这些字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-271">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-272">若要在比较中识别可忽略的字符，请调用 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法，并为 <paramref name="options" /> 参数提供 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-272">To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="e2a2c-273">要比较的第一个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-273">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="e2a2c-274"><paramref name="string1" /> 中的字符从零开始的索引，将从此位置开始比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-274">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="length1"><span data-ttu-id="e2a2c-275"><paramref name="string1" /> 中要比较的连续字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-275">The number of consecutive characters in <paramref name="string1" /> to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="e2a2c-276">要比较的第二个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-276">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="e2a2c-277"><paramref name="string2" /> 中的字符从零开始的索引，将从此位置开始比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-277">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <param name="length2"><span data-ttu-id="e2a2c-278"><paramref name="string2" /> 中要比较的连续字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-278">The number of consecutive characters in <paramref name="string2" /> to compare.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-279">一个值，用于定义应如何比较 <paramref name="string1" /> 和 <paramref name="string2" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-279">A value that defines how <paramref name="string1" /> and <paramref name="string2" /> should be compared.</span></span> <span data-ttu-id="e2a2c-280"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> 和 <see cref="F:System.Globalization.CompareOptions.StringSort" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-280"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-281">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值将一个字符串的一部分与另一个字符串的一部分相比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-281">Compares a section of one string with a section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-282">一个 32 位有符号整数，指示两个比较数之间的词法关系。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-282">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="e2a2c-283">值</span><span class="sxs-lookup"><span data-stu-id="e2a2c-283">Value</span></span>

 </term><description> <span data-ttu-id="e2a2c-284">条件</span><span class="sxs-lookup"><span data-stu-id="e2a2c-284">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="e2a2c-285">零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-285">zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-286">这两个字符串相等。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-286">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-287">小于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-287">less than zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-288"><paramref name="string1" /> 的指定部分小于 <paramref name="string2" /> 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-288">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="e2a2c-289">大于零</span><span class="sxs-lookup"><span data-stu-id="e2a2c-289">greater than zero</span></span>

 </term><description> <span data-ttu-id="e2a2c-290"><paramref name="string1" /> 的指定部分大于 <paramref name="string2" /> 的指定部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-290">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-291">如果安全决策取决于字符串比较或大小写更改，则应使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 属性，以确保无论操作系统的区域性设置如何，行为都保持一致。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-291">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-292">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-292">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-293">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-293">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-294">下面的示例使用不同 <xref:System.Globalization.CompareOptions> 设置来比较两个字符串的各个部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-294">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CPP/comparestrintintstrintintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CS/comparestrintintstrintintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/VB/comparestrintintstrintintopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-295"><paramref name="offset1" />、<paramref name="length1" />、<paramref name="offset2" /> 或 <paramref name="length2" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-295"><paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-296">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-296">-or-</span></span>

 <span data-ttu-id="e2a2c-297"><paramref name="offset1" /> 大于或等于 <paramref name="string1" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-297"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>

<span data-ttu-id="e2a2c-298">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-298">-or-</span></span>

 <span data-ttu-id="e2a2c-299"><paramref name="offset2" /> 大于或等于 <paramref name="string2" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-299"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span>

<span data-ttu-id="e2a2c-300">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-300">-or-</span></span>

 <span data-ttu-id="e2a2c-301"><paramref name="length1" /> 大于从 <paramref name="offset1" /> 到 <paramref name="string1" /> 末尾的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-301"><paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span></span>

<span data-ttu-id="e2a2c-302">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-302">-or-</span></span>

 <span data-ttu-id="e2a2c-303"><paramref name="length2" /> 大于从 <paramref name="offset2" /> 到 <paramref name="string2" /> 末尾的字符数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-303"><paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-304"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-304"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-305">字符集包括可忽略字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-305">Character sets include ignorable characters.</span></span> <span data-ttu-id="e2a2c-306">当 <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法执行区分区域性的比较时，不会考虑这些字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-306">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method does not consider these characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-307">若要在比较中识别可忽略字符，请为 <paramref name="options" /> 参数提供 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-307">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compareInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e2a2c-308">将与当前 <see cref="T:System.Globalization.CompareInfo" /> 进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-308">The object to compare with the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-309">确定指定的对象是否等于当前 <see cref="T:System.Globalization.CompareInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-309">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-310">如果指定的对象等于当前的 <see langword="true" />，则为 <see cref="T:System.Globalization.CompareInfo" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-310"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-311">如果两个 <xref:System.Globalization.CompareInfo> 对象的 <xref:System.Globalization.CompareInfo.LCID%2A> 和 <xref:System.Globalization.CompareInfo.Name%2A> 属性相等，则相等。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-311">Two <xref:System.Globalization.CompareInfo> objects are equal if their <xref:System.Globalization.CompareInfo.LCID%2A> and <xref:System.Globalization.CompareInfo.Name%2A> properties are equal.</span></span>

 <span data-ttu-id="e2a2c-312">此方法重写 <xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-312">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="e2a2c-313">如果安全决策取决于字符串比较或大小写更改，则应使用 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 属性，以确保无论操作系统的区域性设置如何，行为都保持一致。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-313">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCompareInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a2c-314">初始化新的 <see cref="T:System.Globalization.CompareInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-314">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (culture As Integer) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="e2a2c-315">一个表示区域性标识符的整数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-315">An integer representing the culture identifier.</span></span></param>
        <summary><span data-ttu-id="e2a2c-316">初始化与具有指定标识符的区域性关联的新 <see cref="T:System.Globalization.CompareInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-316">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified identifier.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-317">一个新 <see cref="T:System.Globalization.CompareInfo" /> 对象，它与具有指定标识符的区域性关联，并使用当前 <see cref="T:System.Reflection.Assembly" /> 中的字符串比较方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-317">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="e2a2c-318">下面的示例使用不同的 <xref:System.Globalization.CompareInfo> 对象比较两个字符串的各个部分：</span><span class="sxs-lookup"><span data-stu-id="e2a2c-318">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="e2a2c-319">与采用国际排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-319"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="e2a2c-320">与采用传统排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-320"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="e2a2c-321">与 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-321"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (name As String) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e2a2c-322">表示区域性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-322">A string representing the culture name.</span></span></param>
        <summary><span data-ttu-id="e2a2c-323">初始化与具有指定名称的区域性关联的新 <see cref="T:System.Globalization.CompareInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-323">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified name.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-324">一个新 <see cref="T:System.Globalization.CompareInfo" /> 对象，它与具有指定标识符的区域性关联，并使用当前 <see cref="T:System.Reflection.Assembly" /> 中的字符串比较方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-324">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="e2a2c-325">下面的示例使用不同的 <xref:System.Globalization.CompareInfo> 对象比较两个字符串的各个部分：</span><span class="sxs-lookup"><span data-stu-id="e2a2c-325">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="e2a2c-326">与采用国际排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-326"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="e2a2c-327">与采用传统排序的西班牙语（西班牙）区域性关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-327"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="e2a2c-328">与 <xref:System.Globalization.CultureInfo.InvariantCulture%2A> 关联的 <xref:System.Globalization.CompareInfo> 对象</span><span class="sxs-lookup"><span data-stu-id="e2a2c-328"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-329"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-329"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-330"><paramref name="name" /> 是无效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-330"><paramref name="name" /> is an invalid culture name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (culture, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="e2a2c-331">一个表示区域性标识符的整数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-331">An integer representing the culture identifier.</span></span></param>
        <param name="assembly"><span data-ttu-id="e2a2c-332">一个 <see cref="T:System.Reflection.Assembly" />，它包含将使用的字符串比较方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-332">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span></span></param>
        <summary><span data-ttu-id="e2a2c-333">初始化一个新的 <see cref="T:System.Globalization.CompareInfo" /> 对象，该对象与指定区域性关联，并使用指定 <see cref="T:System.Reflection.Assembly" /> 中的字符串比较方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-333">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-334">一个新 <see cref="T:System.Globalization.CompareInfo" /> 对象，它与具有指定标识符的区域性关联，并使用当前 <see cref="T:System.Reflection.Assembly" /> 中的字符串比较方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-334">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
>  <span data-ttu-id="e2a2c-335">此方法的行为是不可预测的。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-335">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="e2a2c-336">建议应用程序使用不接受程序集输入的此方法版本。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-336">It is recommended for your application to use a version of this method that does not take an assembly input.</span></span>

 <span data-ttu-id="e2a2c-337">`assembly` 参数的类型必须与 <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>相同。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-337">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-338"><paramref name="assembly" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-338"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-339"><paramref name="assembly" /> 属于无效类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-339"><paramref name="assembly" /> is of an invalid type.</span></span></exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (name, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e2a2c-340">表示区域性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-340">A string representing the culture name.</span></span></param>
        <param name="assembly"><span data-ttu-id="e2a2c-341">一个 <see cref="T:System.Reflection.Assembly" />，它包含将使用的字符串比较方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-341">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span></span></param>
        <summary><span data-ttu-id="e2a2c-342">初始化一个新的 <see cref="T:System.Globalization.CompareInfo" /> 对象，该对象与指定区域性关联，并使用指定 <see cref="T:System.Reflection.Assembly" /> 中的字符串比较方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-342">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-343">一个新 <see cref="T:System.Globalization.CompareInfo" /> 对象，它与具有指定标识符的区域性关联，并使用当前 <see cref="T:System.Reflection.Assembly" /> 中的字符串比较方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-343">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
>  <span data-ttu-id="e2a2c-344">此方法的行为是不可预测的。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-344">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="e2a2c-345">建议使用不带程序集输入的此方法的版本。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-345">We recommend that you use a version of this method that does not take an assembly input.</span></span>

 <span data-ttu-id="e2a2c-346">`assembly` 参数的类型必须与 <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>相同。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-346">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-347"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-347"><paramref name="name" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-348">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-348">-or-</span></span>

 <span data-ttu-id="e2a2c-349"><paramref name="assembly" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-349"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-350"><paramref name="name" /> 是无效的区域性名称。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-350"><paramref name="name" /> is an invalid culture name.</span></span>

<span data-ttu-id="e2a2c-351">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-351">-or-</span></span>

 <span data-ttu-id="e2a2c-352"><paramref name="assembly" /> 属于无效类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-352"><paramref name="assembly" /> is of an invalid type.</span></span></exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a2c-353">返回此 <see cref="T:System.Globalization.CompareInfo" /> 实例或特定字符串的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-353">Returns a hash code either for this <see cref="T:System.Globalization.CompareInfo" /> instance or for a particular string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compareInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2a2c-354">用作当前 <see cref="T:System.Globalization.CompareInfo" /> 的哈希函数，适合在哈希算法和数据结构（如哈希表）中使用。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-354">Serves as a hash function for the current <see cref="T:System.Globalization.CompareInfo" /> for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-355">当前 <see cref="T:System.Globalization.CompareInfo" /> 的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-355">A hash code for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-356">此方法重写 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-356">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="e2a2c-357">此方法为根据 <xref:System.Globalization.CompareInfo.Equals%2A> 方法视为相等的两个对象生成相同的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-357">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.CompareInfo.Equals%2A> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (ReadOnlySpan&lt;char&gt; source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHashCode(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.ReadOnlySpan{System.Char},System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (source As ReadOnlySpan(Of Char), options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(ReadOnlySpan&lt;char&gt; source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : ReadOnlySpan&lt;char&gt; * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-358">要返回其哈希代码的字符范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-358">The character span whose hash code is to be returned.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-359">确定如何比较字符串的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-359">A value that determines how strings are compared.</span></span></param>
        <summary><span data-ttu-id="e2a2c-360">根据指定的比较选项获取字符范围的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-360">Gets the hash code for a character span based on specified comparison options.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-361">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-361">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-362">此重载的行为取决于其实现，该实现可能会从一个版本的公共语言运行时更改为另一个版本，或从一个 .NET 实现更改为另一个版本。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-362">The behavior of this overload is dependent on its implementation, which might change from one version of the common language runtime to another, or from one .NET implementation to another.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="e2a2c-363">如果两个字符跨越相等，则此重载返回相同的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-363">If two character spans are equal, this overload returns identical values.</span></span> <span data-ttu-id="e2a2c-364">但是，每个唯一字符跨度值没有唯一的哈希代码值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-364">However, there is not a unique hash code value for each unique character span value.</span></span> <span data-ttu-id="e2a2c-365">不同的字符跨度可以返回相同的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-365">Different character spans can return the same hash code.</span></span>
>
>  <span data-ttu-id="e2a2c-366">哈希代码本身不一定是稳定的。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-366">The hash code itself is not guaranteed to be stable.</span></span> <span data-ttu-id="e2a2c-367">对于单个版本的 .net，相同字符跨度的哈希代码在不同版本的 .NET 实现和各种平台（如32位和64位）之间可能会有所不同。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-367">Hash codes for identical character spans can differ across versions of the .NET implementations and across platforms (such as 32-bit and 64-bit) for a single version of .NET.</span></span>
>
>  <span data-ttu-id="e2a2c-368">因此，哈希代码决不能在创建它们的应用程序域的外部使用，它们永远不应用作集合中的键字段，它们永远不会保留。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-368">As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode (source As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-369">要返回其哈希代码的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-369">The string whose hash code is to be returned.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-370">确定如何比较字符串的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-370">A value that determines how strings are compared.</span></span></param>
        <summary><span data-ttu-id="e2a2c-371">根据指定的比较选项获取字符串的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-371">Gets the hash code for a string based on specified comparison options.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-372">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-372">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-373"><xref:System.Globalization.CompareInfo.GetHashCode%2A> 的行为取决于其实现，该实现可能会从公共语言运行时的一个版本更改为另一个版本，或从一个 .NET Framework 平台更改为另一个版本。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-373">The behavior of <xref:System.Globalization.CompareInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another, or from one .NET Framework platform to another.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="e2a2c-374">如果两个字符串对象相等，则 <xref:System.Globalization.CompareInfo.GetHashCode%2A> 方法返回相同的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-374">If two string objects are equal, the <xref:System.Globalization.CompareInfo.GetHashCode%2A> method returns identical values.</span></span> <span data-ttu-id="e2a2c-375">但是，每个唯一字符串值没有唯一的哈希代码值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-375">However, there is not a unique hash code value for each unique string value.</span></span> <span data-ttu-id="e2a2c-376">不同的字符串可以返回相同的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-376">Different strings can return the same hash code.</span></span>
>
>  <span data-ttu-id="e2a2c-377">哈希代码本身不一定是稳定的。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-377">The hash code itself is not guaranteed to be stable.</span></span> <span data-ttu-id="e2a2c-378">对于同一版本的 .NET Framework，相同字符串的哈希代码可能不同于不同版本的 .NET Framework 和跨平台（例如32位和64位）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-378">Hash codes for identical strings can differ across versions of the .NET Framework and across platforms (such as 32-bit and 64-bit) for a single version of the .NET Framework.</span></span> <span data-ttu-id="e2a2c-379">在某些情况下，它们甚至不同于应用程序域。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-379">In some cases, they can even differ by application domain.</span></span>
>
>  <span data-ttu-id="e2a2c-380">因此，哈希代码决不能在创建它们的应用程序域的外部使用，它们永远不应用作集合中的键字段，它们永远不会保留。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-380">As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-381"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-381"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSortKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a2c-382">获取字符串的 <see cref="T:System.Globalization.SortKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-382">Gets a <see cref="T:System.Globalization.SortKey" /> object for a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-383">获取其 <see cref="T:System.Globalization.SortKey" /> 对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-383">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span></span></param>
        <summary><span data-ttu-id="e2a2c-384">获取指定字符串的排序关键字。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-384">Gets the sort key for the specified string.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-385">包含指定字符串的排序关键字的 <see cref="T:System.Globalization.SortKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-385">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-386">字符串中的每个字符都被给定多个排序权重类别，包括脚本、字母、大小写和音调符号权重。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-386">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="e2a2c-387">排序关键字是特定字符串的这些权重的存储库。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-387">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="e2a2c-388">例如，排序关键字可能包含字母权重的字符串，后跟大小写权重等字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-388">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="e2a2c-389"><xref:System.Globalization.CompareInfo.GetSortKey%2A> 方法等效于带有 LCMAP_SORTKEY 标志的 Windows API 方法 `LCMapString`。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-389">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortKey" />
      </Docs>
    </Member>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String, options As CompareOptions) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-390">获取其 <see cref="T:System.Globalization.SortKey" /> 对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-390">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-391">以下一个或多个定义该排序关键字如何计算的枚举值的按位组合: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、 <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、 <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、 <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />和 <see cref="F:System.Globalization.CompareOptions.StringSort" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-391">A bitwise combination of one or more of the following enumeration values that define how the sort key is calculated: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-392">使用指定的 <see cref="T:System.Globalization.SortKey" /> 值获取指定字符串的 <see cref="T:System.Globalization.CompareOptions" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-392">Gets a <see cref="T:System.Globalization.SortKey" /> object for the specified string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-393">包含指定字符串的排序关键字的 <see cref="T:System.Globalization.SortKey" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-393">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-394">字符串中的每个字符都被给定多个排序权重类别，包括脚本、字母、大小写和音调符号权重。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-394">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="e2a2c-395">排序关键字是特定字符串的这些权重的存储库。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-395">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="e2a2c-396">例如，排序关键字可能包含字母权重的字符串，后跟大小写权重等字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-396">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="e2a2c-397"><xref:System.Globalization.CompareInfo.GetSortKey%2A> 方法等效于带有 LCMAP_SORTKEY 标志的 Windows API 方法 `LCMapString`。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-397">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-398"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-398"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="T:System.Globalization.SortKey" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a2c-399">返回某个值在一个字符串内或该字符串的一部分中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-399">Returns the zero-based index of the first occurrence of a value within a string or within a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char -&gt; int&#xA;override this.IndexOf : string * char -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-400">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-400">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-401">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-401">The character to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-402">搜索指定的字符并返回整个源字符串内第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-402">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-403">如果找到，则为 <paramref name="value" /> 在 <paramref name="source" /> 内的第一个匹配项从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-403">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-404">如果 <paramref name="value" /> 为可忽略字符，则将返回 0（零）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-404">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-405">此方法搜索字符串开头到字符串末尾的源字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-405">This method searches the source string from the beginning of the string to the end of the string.</span></span>

 <span data-ttu-id="e2a2c-406">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-406">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-407">如果 `value` 表示预构成 Unicode 字符（如连字 "Æ" （U + 00C6）），则可能会将其视为等效的顺序（例如 "AE" （U + 0041，U + 0045）），这取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-407">If `value` represents a precomposed Unicode character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-408">若要执行序号（不区分区域性的）搜索，其中，仅当字符的 Unicode 码位相同时，才将字符视为等效于另一个字符，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载，并使用 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-408">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode code points are the same, you should call an overload that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="e2a2c-409">与执行区分区域性的比较的 <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>不同，搜索字符的 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 方法的重载执行序号比较，而用于搜索字符串的重载执行区分区域性的比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-409">Unlike <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, which performs a culture-sensitive comparison, overloads of the <xref:System.String.IndexOf%2A?displayProperty=nameWithType> method that search for a character perform an ordinal comparison and overloads that search for a string perform a culture-sensitive comparison.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-410">如果可能，应使用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法来指定预期的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-410">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-411">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-411">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-412">下面的示例将确定字符串中第一个字符或子字符串的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-412">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-413"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-413"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-414">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-414">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-415">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-415">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-416">在这种情况下，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> 方法始终返回0（零），表示在 <paramref name="source" />的开头找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-416">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="e2a2c-417">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> 方法用于在两个字符串中查找软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-417">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="e2a2c-418">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-418">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-419">在这两种情况下，因为软连字符为可忽略字符，该方法将返回0（零），指示它已在字符串的开头找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-419">In both cases, because the soft hyphen is an ignorable character, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>

<span data-ttu-id="e2a2c-420">[！ code-csharp[CompareInfo. IndexOf # 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)][！ code-vb[CompareInfo. IndexOf # 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-420">[!code-csharp[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)] [!code-vb[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</span></span></para></block>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string -&gt; int&#xA;override this.IndexOf : string * string -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-421">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-421">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-422">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-422">The string to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-423">搜索指定的子字符串并返回整个源字符串内第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-423">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-424">如果找到，则为 <paramref name="value" /> 在 <paramref name="source" /> 内的第一个匹配项从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-424">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-425">如果 <paramref name="value" /> 为可忽略字符，则将返回 0（零）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-425">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-426">从字符串的开头开始向前搜索源字符串，并在字符串末尾结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-426">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>

 <span data-ttu-id="e2a2c-427">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-427">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-428">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-428">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-429">若要执行序号（不区分区域性）搜索，其中的 Unicode 值将进行比较，应使用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-429">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should use one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-430">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-430">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-431">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-431">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-432">下面的示例将确定字符串中第一个字符或子字符串的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-432">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-433"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-433"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-434">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-434">-or-</span></span>

 <span data-ttu-id="e2a2c-435"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-435"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-436">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-436">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-437">在区分区域性的搜索中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-437">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-438">如果 <paramref name="value" /> 仅包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> 方法始终返回0（零），以指示在 <paramref name="source" />的开头找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-438">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="e2a2c-439">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> 方法用于查找两个字符串中的三个子字符串（软连字符（U + 00AD）、软连字符后跟 "n" 和软连字符后跟 "m"。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-439">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="e2a2c-440">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-440">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-441">在每种情况下，因为软连字符为可忽略字符，所以结果与 <paramref name="value" />中未包含软连字符的结果相同。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-441">In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />.</span></span> <span data-ttu-id="e2a2c-442">仅搜索软连字符时，该方法返回0（零），指示它已在字符串的开头找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-442">When searching for a soft hyphen only, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>

<span data-ttu-id="e2a2c-443">[！ code-csharp[CompareInfo. IndexOf # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)][！ code-vb[CompareInfo. IndexOf # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-443">[!code-csharp[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)] [!code-vb[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-444">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-444">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-445">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-445">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-446">一个值，用于定义应如何比较这些字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-446">A value that defines how the strings should be compared.</span></span> <span data-ttu-id="e2a2c-447"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-447"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-448">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的字符，并返回整个源字符串内第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-448">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-449">如果在 <paramref name="value" /> 中找到 <paramref name="source" /> 的第一个匹配项的从零开始的索引，使用指定的比较选项；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-449">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-450">如果 <paramref name="value" /> 为可忽略字符，则将返回 0（零）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-450">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-451">从字符串的开头开始向前搜索源字符串，并在字符串末尾结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-451">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>

 <span data-ttu-id="e2a2c-452">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-452">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-453">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-453">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-454">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-454">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-455">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性的）搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-455">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="e2a2c-456">仅当 Unicode 值相同时，才将字符视为等效于另一个字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-456">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="e2a2c-457">搜索字符的 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-457">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-458">如果可能，应使用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法来指定预期的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-458">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-459">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-459">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-460">下面的示例将确定字符串中第一个字符或子字符串的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-460">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-461"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-461"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-462"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-462"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-463">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-463">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-464">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-464">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-465">在这种情况下，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 方法始终返回0（零），表示在 <paramref name="source" />的开头找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-465">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="e2a2c-466">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 方法用于在两个字符串中搜索软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-466">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="e2a2c-467">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-467">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-468">在这两种情况下，因为软连字符为可忽略字符，所以区分区域性的搜索将返回0（零），指示它已在字符串的开头找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-468">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span> <span data-ttu-id="e2a2c-469">不过，序号搜索成功地在一个字符串中查找软连字符，并报告从第二个字符串中缺少它。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-469">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="e2a2c-470">[！ code-csharp[CompareInfo. IndexOf # 4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)][！ code-vb[CompareInfo. IndexOf # 4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-470">[!code-csharp[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)] [!code-vb[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int -&gt; int&#xA;override this.IndexOf : string * char * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-471">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-471">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-472">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-472">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-473">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-473">The zero-based starting index of the search.</span></span></param>
        <summary><span data-ttu-id="e2a2c-474">搜索指定的字符，并返回源字符串内从指定的索引位置到字符串结尾这一部分中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-474">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-475">如果在部分 <paramref name="value" />（从 <paramref name="source" /> 到 <paramref name="startIndex" /> 的结尾这一部分）中找到 <paramref name="source" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-475">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-476">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-476">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-477">从源字符串向前搜索，从 `startIndex` 开始，到字符串末尾结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-477">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>

 <span data-ttu-id="e2a2c-478">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-478">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-479">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-479">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-480">若要执行序号（不区分区域性的）搜索，其中，仅当 Unicode 值相同时，才将字符视为等效于另一个字符，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-480">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="e2a2c-481">搜索字符的 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-481">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-482">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-482">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-483">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-483">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-484">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-484">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="e2a2c-485">请注意，<xref:System.Globalization.CompareInfo.IndexOf%2A> 和 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 是在字符串的不同部分中搜索，即使具有相同的 `startIndex` 参数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-485">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-486"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-486"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-487"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-487"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-488">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-488">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-489">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-489">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-490">在这种情况下，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> 方法始终返回 <paramref name="startIndex" />，即搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-490">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="e2a2c-491">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> 方法用于查找两个字符串中 "n" 后的软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-491">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="e2a2c-492">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-492">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-493">在这两种情况下，因为软连字符为可忽略字符，所以该方法返回1，指示它在 "n" 的位置找到了匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-493">In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".</span></span>

<span data-ttu-id="e2a2c-494">[！ code-csharp[CompareInfo. IndexOf # 5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)][！ code-vb[CompareInfo. IndexOf # 5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-494">[!code-csharp[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)] [!code-vb[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-495">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-495">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-496">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-496">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-497">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-497">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-498"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-498"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-499">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的子字符串，并返回整个源字符串内第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-499">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-500">如果在 <paramref name="value" /> 中找到 <paramref name="source" /> 的第一个匹配项的从零开始的索引，使用指定的比较选项；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-500">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-501">如果 <paramref name="value" /> 为可忽略字符，则将返回 0（零）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-501">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-502">从字符串的开头开始向前搜索源字符串，并在字符串末尾结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-502">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>

 <span data-ttu-id="e2a2c-503">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-503">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-504">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-504">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-505">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-505">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-506">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性）搜索，其中 Unicode 值将进行比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-506">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-507">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-507">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-508">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-508">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-509">下面的示例将确定字符串中第一个字符或子字符串的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-509">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-510"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-510"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-511">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-511">-or-</span></span>

 <span data-ttu-id="e2a2c-512"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-512"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-513"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-513"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-514">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-514">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-515">在区分区域性的搜索 (即，如果 <paramref name="options" /> 不是 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) 中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-515">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-516">如果 <paramref name="value" /> 仅包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 方法始终返回0（零），以指示在 <paramref name="source" />的开头找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-516">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="e2a2c-517">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 方法用于查找两个字符串中的三个子字符串（软连字符（U + 00AD）、软连字符后跟 "n" 和软连字符后跟 "m"。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-517">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="e2a2c-518">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-518">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-519">由于软连字符是可忽略字符，因此，区分区域性的搜索将返回在搜索字符串中未包含软连字符时返回的相同值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-519">Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="e2a2c-520">不过，序号搜索成功地在一个字符串中查找软连字符，并报告从第二个字符串中缺少它。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-520">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="e2a2c-521">[！ code-csharp[CompareInfo. IndexOf # 6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)][！ code-vb[CompareInfo. IndexOf # 6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-521">[!code-csharp[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)] [!code-vb[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int -&gt; int&#xA;override this.IndexOf : string * string * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-522">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-522">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-523">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-523">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-524">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-524">The zero-based starting index of the search.</span></span></param>
        <summary><span data-ttu-id="e2a2c-525">搜索指定的子字符串，并返回源字符串内从指定的索引位置到字符串结尾这一部分中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-525">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-526">如果在部分 <paramref name="value" />（从 <paramref name="source" /> 到 <paramref name="startIndex" /> 的结尾这一部分）中找到 <paramref name="source" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-526">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-527">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-527">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-528">从源字符串向前搜索，从 `startIndex` 开始，到字符串末尾结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-528">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>

 <span data-ttu-id="e2a2c-529">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-529">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-530">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-530">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-531">若要执行序号（不区分区域性）搜索，其中 Unicode 值比较，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-531">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-532">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-532">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-533">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-533">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-534">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-534">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="e2a2c-535">请注意，<xref:System.Globalization.CompareInfo.IndexOf%2A> 和 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 是在字符串的不同部分中搜索，即使具有相同的 `startIndex` 参数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-535">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-536"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-536"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-537">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-537">-or-</span></span>

 <span data-ttu-id="e2a2c-538"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-538"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-539"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-539"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-540">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-540">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-541">在区分区域性的搜索中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-541">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-542">如果 <paramref name="value" /> 只包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> 方法始终返回 <paramref name="startIndex" />，这是搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-542">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="e2a2c-543">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> 方法用于查找软连字符的位置（U + 00AD），后跟两个字符串中的 "m"。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-543">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in two strings.</span></span> <span data-ttu-id="e2a2c-544">只有一个字符串包含必需的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-544">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="e2a2c-545">在这两种情况下，因为软连字符为可忽略字符，该方法将返回字符串中的 "m" 的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-545">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string.</span></span> <span data-ttu-id="e2a2c-546">注意对于第一个字符串，包含软连字符后跟“m”，该方法无法返回该软连字符的索引，而是返回“m”的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-546">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>

<span data-ttu-id="e2a2c-547">[！ code-csharp[CompareInfo. IndexOf # 14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)][！ code-vb[CompareInfo. IndexOf # 14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-547">[!code-csharp[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)] [!code-vb[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-548">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-548">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-549">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-549">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-550">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-550">The zero-based starting index of the search.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-551">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-551">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-552"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-552"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-553">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的字符，并返回源字符串中从指定的索引位置到字符串结尾这一部分中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-553">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-554">使用指定的比较选项，如果在 <paramref name="value" /> 中从 <paramref name="source" /> 一直到 <paramref name="startIndex" /> 的结尾这部分找到 <paramref name="source" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-554">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-555">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-555">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-556">从源字符串向前搜索，从 `startIndex` 开始，到字符串末尾结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-556">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>

 <span data-ttu-id="e2a2c-557">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-557">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-558">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-558">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-559">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-559">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-560">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性的）搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-560">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="e2a2c-561">仅当 Unicode 值相同时，才将字符视为等效于另一个字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-561">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="e2a2c-562">搜索字符的 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-562">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-563">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-563">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-564">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-564">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-565">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-565">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="e2a2c-566">请注意，<xref:System.Globalization.CompareInfo.IndexOf%2A> 和 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 是在字符串的不同部分中搜索，即使具有相同的 `startIndex` 参数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-566">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-567"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-567"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-568"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-568"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-569"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-569"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-570">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-570">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-571">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-571">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-572">在这种情况下，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="startIndex" />，即搜索第一次开始的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-572">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, the character position at which the search first began.</span></span> <span data-ttu-id="e2a2c-573">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 方法用于查找两个字符串中 "n" 后的软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-573">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="e2a2c-574">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-574">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-575">在这两种情况下，因为软连字符为可忽略字符，所以区分区域性的搜索将返回1，指示它在 "n" 的位置找到了匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-575">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n".</span></span> <span data-ttu-id="e2a2c-576">不过，序号搜索成功地在一个字符串中查找软连字符，并报告从第二个字符串中缺少它。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-576">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="e2a2c-577">[！ code-csharp[CompareInfo. IndexOf # 8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)][！ code-vb[CompareInfo. IndexOf # 8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-577">[!code-csharp[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)] [!code-vb[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int -&gt; int&#xA;override this.IndexOf : string * char * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-578">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-578">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-579">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-579">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-580">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-580">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="e2a2c-581">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-581">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="e2a2c-582">搜索指定的字符，并返回源字符串内从指定的索引位置开始、包含指定的元素数的部分中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-582">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-583">如果在 <paramref name="value" /> 的从 <paramref name="source" /> 开始、包含 <paramref name="startIndex" /> 所指定的元素数的部分中，找到 <paramref name="count" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-583">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-584">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-584">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-585">将从 `startIndex` 开始向前搜索源字符串，并在 `startIndex` + `count`-1 结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-585">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>

 <span data-ttu-id="e2a2c-586">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-586">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-587">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-587">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-588">若要执行序号（不区分区域性的）搜索，其中，仅当 Unicode 值相同时，才将字符视为等效于另一个字符，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-588">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="e2a2c-589">搜索字符的 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-589">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-590">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-590">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-591">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-591">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-592">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-592">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-593"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-593"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-594"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-594"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="e2a2c-595">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-595">-or-</span></span>

 <span data-ttu-id="e2a2c-596"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-596"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-597">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-597">-or-</span></span>

 <span data-ttu-id="e2a2c-598"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <paramref name="source" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-598"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-599">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-599">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-600">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-600">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-601">在这种情况下，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 方法始终返回 <paramref name="startIndex" />，即搜索第一次开始的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-601">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began.</span></span> <span data-ttu-id="e2a2c-602">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 方法用于查找两个字符串中 "n" 后的软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-602">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="e2a2c-603">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-603">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-604">在这两种情况下，因为软连字符为可忽略字符，所以该方法返回1，指示它在 "n" 的位置找到了匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-604">In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".</span></span>

<span data-ttu-id="e2a2c-605">[！ code-csharp[CompareInfo. IndexOf # 9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)][！ code-vb[CompareInfo. IndexOf # 9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-605">[!code-csharp[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)] [!code-vb[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-606">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-606">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-607">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-607">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-608">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-608">The zero-based starting index of the search.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-609">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-609">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-610"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-610"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-611">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的子字符串，并返回源字符串内从指定的索引位置到字符串结尾这一部分中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-611">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-612">使用指定的比较选项，如果在 <paramref name="value" /> 中从 <paramref name="source" /> 一直到 <paramref name="startIndex" /> 的结尾这部分找到 <paramref name="source" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-612">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-613">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-613">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-614">从源字符串向前搜索，从 `startIndex` 开始，到字符串末尾结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-614">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>

 <span data-ttu-id="e2a2c-615">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-615">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-616">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-616">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-617">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-617">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-618">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性）搜索，其中 Unicode 值将进行比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-618">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-619">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-619">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-620">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-620">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-621">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-621">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="e2a2c-622">请注意，<xref:System.Globalization.CompareInfo.IndexOf%2A> 和 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 是在字符串的不同部分中搜索，即使具有相同的 `startIndex` 参数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-622">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-623"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-623"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-624">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-624">-or-</span></span>

 <span data-ttu-id="e2a2c-625"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-625"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-626"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-626"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-627"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-627"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-628">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-628">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-629">在区分区域性的搜索 (即，如果 <paramref name="options" /> 不是 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) 中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-629">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-630">如果 <paramref name="value" /> 只包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="startIndex" />，这是搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-630">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="e2a2c-631">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 方法用于查找软连字符（U + 00AD）后跟 "m" 的位置（从两个字符串中的第三个字符位置开始）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-631">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting with the third character position in two strings.</span></span> <span data-ttu-id="e2a2c-632">只有一个字符串包含必需的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-632">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="e2a2c-633">在这两种情况下，因为软连字符是可忽略字符，因此，在执行区分区域性的比较时，该方法在字符串中返回索引“m”。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-633">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-634">注意对于第一个字符串，包含软连字符后跟“m”，该方法无法返回该软连字符的索引，而是返回“m”的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-634">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="e2a2c-635">只有当此方法执行序号比较时，它才会在第一个字符串中返回软连字符的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-635">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>

<span data-ttu-id="e2a2c-636">[！ code-csharp[CompareInfo. IndexOf # 15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)][！ code-vb[CompareInfo. IndexOf # 15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-636">[!code-csharp[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)] [!code-vb[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int -&gt; int&#xA;override this.IndexOf : string * string * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-637">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-637">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-638">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-638">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-639">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-639">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="e2a2c-640">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-640">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="e2a2c-641">搜索指定的子字符串，并返回源字符串内从指定的索引位置开始、包含指定的元素数的部分中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-641">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-642">如果在 <paramref name="value" /> 的从 <paramref name="source" /> 开始、包含 <paramref name="startIndex" /> 所指定的元素数的部分中，找到 <paramref name="count" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-642">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-643">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-643">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-644">将从 `startIndex` 开始向前搜索源字符串，并在 `startIndex` + `count`-1 结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-644">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>

 <span data-ttu-id="e2a2c-645">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-645">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-646">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-646">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-647">若要执行序号（不区分区域性）搜索，其中 Unicode 值比较，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-647">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-648">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-648">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-649">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-649">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-650">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-650">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-651"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-651"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-652">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-652">-or-</span></span>

 <span data-ttu-id="e2a2c-653"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-653"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-654"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-654"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="e2a2c-655">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-655">-or-</span></span>

 <span data-ttu-id="e2a2c-656"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-656"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-657">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-657">-or-</span></span>

 <span data-ttu-id="e2a2c-658"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <paramref name="source" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-658"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-659">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-659">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-660">在区分区域性的搜索中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-660">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-661">如果 <paramref name="value" /> 只包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> 方法始终返回 <paramref name="startIndex" />，这是搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-661">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="e2a2c-662">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> 方法用于查找软连字符（U + 00AD）后跟 "m" 的位置，该位置从两个字符串中的第三个到第六个字符位置开始。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-662">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="e2a2c-663">只有一个字符串包含必需的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-663">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="e2a2c-664">在这两种情况下，因为软连字符是可忽略字符，因此，在执行区分区域性的比较时，该方法在字符串中返回索引“m”。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-664">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-665">注意对于第一个字符串，包含软连字符后跟“m”，该方法无法返回该软连字符的索引，而是返回“m”的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-665">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>

<span data-ttu-id="e2a2c-666">[！ code-csharp[CompareInfo. IndexOf # 17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)][！ code-vb[CompareInfo. IndexOf # 17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-666">[!code-csharp[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)] [!code-vb[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-667">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-667">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-668">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-668">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-669">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-669">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="e2a2c-670">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-670">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-671">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-671">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-672"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-672"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-673">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的字符，并返回源字符串内从指定的索引位置开始、包含所指定元素数的部分中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-673">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-674">使用指定的比较选项，如果在 <paramref name="value" /> 中从 <paramref name="source" /> 开始、包含 <paramref name="startIndex" /> 指定的元素数的部分找到 <paramref name="count" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-674">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-675">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-675">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-676">将从 `startIndex` 开始向前搜索源字符串，并在 `startIndex` + `count`-1 结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-676">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>

 <span data-ttu-id="e2a2c-677">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-677">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-678">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-678">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-679">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-679">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-680">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性的）搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-680">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="e2a2c-681">仅当 Unicode 值相同时，才将字符视为等效于另一个字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-681">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="e2a2c-682">搜索字符的 <xref:System.String.IndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-682">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-683">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-683">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-684">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-684">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-685">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-685">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-686"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-686"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-687"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-687"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="e2a2c-688">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-688">-or-</span></span>

 <span data-ttu-id="e2a2c-689"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-689"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-690">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-690">-or-</span></span>

 <span data-ttu-id="e2a2c-691"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <paramref name="source" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-691"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-692"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-692"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-693">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-693">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-694">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-694">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-695">在这种情况下，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="startIndex" />，即搜索第一次开始的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-695">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began.</span></span> <span data-ttu-id="e2a2c-696">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法用于查找两个字符串中 "n" 后的软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-696">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="e2a2c-697">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-697">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-698">在这两种情况下，因为软连字符为可忽略字符，所以区分区域性的搜索将返回1，指示它在 "n" 的位置找到了匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-698">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n".</span></span> <span data-ttu-id="e2a2c-699">不过，序号搜索成功地在一个字符串中查找软连字符，并报告从第二个字符串中缺少它。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-699">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="e2a2c-700">[！ code-csharp[CompareInfo. IndexOf # 12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)][！ code-vb[CompareInfo. IndexOf # 12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-700">[!code-csharp[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)] [!code-vb[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-701">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-701">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-702">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-702">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-703">从零开始的搜索的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-703">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="e2a2c-704">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-704">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-705">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-705">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-706"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-706"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-707">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的子字符串，并返回源字符串内从指定的索引位置开始、包含所指定元素数的部分中第一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-707">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-708">使用指定的比较选项，如果在 <paramref name="value" /> 中从 <paramref name="source" /> 开始、包含 <paramref name="startIndex" /> 指定的元素数的部分找到 <paramref name="count" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-708">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-709">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-709">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-710">将从 `startIndex` 开始向前搜索源字符串，并在 `startIndex` + `count`-1 结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-710">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>

 <span data-ttu-id="e2a2c-711">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-711">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-712">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-712">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-713">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-713">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-714">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性）搜索，其中 Unicode 值将进行比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-714">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-715">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-715">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-716">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-716">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-717">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-717">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-718"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-718"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-719">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-719">-or-</span></span>

 <span data-ttu-id="e2a2c-720"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-720"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-721"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-721"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="e2a2c-722">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-722">-or-</span></span>

 <span data-ttu-id="e2a2c-723"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-723"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-724">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-724">-or-</span></span>

 <span data-ttu-id="e2a2c-725"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <paramref name="source" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-725"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-726"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-726"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-727">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-727">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-728">在区分区域性的搜索 (即，如果 <paramref name="options" /> 不是 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) 中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-728">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-729">如果 <paramref name="value" /> 只包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="startIndex" />，这是搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-729">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="e2a2c-730">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法用于查找软连字符（U + 00AD）后跟 "m" 的位置，该位置从两个字符串中的第三个到第六个字符位置开始。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-730">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="e2a2c-731">只有一个字符串包含必需的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-731">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="e2a2c-732">在这两种情况下，因为软连字符是可忽略字符，因此，在执行区分区域性的比较时，该方法在字符串中返回索引“m”。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-732">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-733">但当它执行序号比较时，它只查找第一个字符串中的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-733">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="e2a2c-734">请注意，对于包含软连字符后跟 "m" 的软连字符的第一个字符串，该方法将无法返回软连字符的索引，而是在执行区分区域性的比较时返回 "m" 的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-734">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-735">只有当此方法执行序号比较时，它才会在第一个字符串中返回软连字符的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-735">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>

<span data-ttu-id="e2a2c-736">[！ code-csharp[CompareInfo. IndexOf # 16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)][！ code-vb[CompareInfo. IndexOf # 16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-736">[!code-csharp[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)] [!code-vb[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPrefix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a2c-737">确定字符串是否以指定的前缀开头。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-737">Determines whether a string starts with a specific prefix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string -&gt; bool&#xA;override this.IsPrefix : string * string -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-738">要在其中搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-738">The string to search in.</span></span></param>
        <param name="prefix"><span data-ttu-id="e2a2c-739">要与 <paramref name="source" /> 的开头进行比较的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-739">The string to compare with the beginning of <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-740">确定指定的源字符串是否以指定的前缀开头。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-740">Determines whether the specified source string starts with the specified prefix.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-741">如果 <see langword="true" /> 的长度小于或等于 <paramref name="prefix" /> 的长度，并且 <paramref name="source" /> 以 <paramref name="source" /> 开始，则为 <paramref name="prefix" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-741"><see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-742">每个字符串的开头和结尾均为空子字符串（""）;因此，如果 `prefix` 为空字符串，则此方法返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-742">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-743">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-743">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-744">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-744">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-745">下面的示例确定字符串是另一个字符串的前缀还是后缀。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-745">The following example determines whether a string is the prefix or suffix of another string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-746"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-746"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-747">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-747">-or-</span></span>

 <span data-ttu-id="e2a2c-748"><paramref name="prefix" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-748"><paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-749">要在其中搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-749">The string to search in.</span></span></param>
        <param name="prefix"><span data-ttu-id="e2a2c-750">要与 <paramref name="source" /> 的开头进行比较的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-750">The string to compare with the beginning of <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-751">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="prefix" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-751">A value that defines how <paramref name="source" /> and <paramref name="prefix" /> should be compared.</span></span> <span data-ttu-id="e2a2c-752"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-752"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-753">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值确定指定的源字符串是否以指定的前缀开头。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-753">Determines whether the specified source string starts with the specified prefix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-754">如果 <see langword="true" /> 的长度小于或等于 <paramref name="prefix" /> 的长度，并且 <paramref name="source" /> 以 <paramref name="source" /> 开始，则为 <paramref name="prefix" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-754"><see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-755">每个字符串的开头和结尾均为空子字符串（""）;因此，如果 `prefix` 为空字符串，则此方法返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-755">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>

 <span data-ttu-id="e2a2c-756">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-756">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-757">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-757">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-758">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-758">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-759">下面的示例使用 <xref:System.Globalization.CompareOptions>确定字符串是另一个字符串的前缀还是后缀。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-759">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-760"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-760"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-761">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-761">-or-</span></span>

 <span data-ttu-id="e2a2c-762"><paramref name="prefix" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-762"><paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-763"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-763"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSortable">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a2c-764">指示指定的 Unicode 字符或字符串是否可排序。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-764">Indicates whether a specified Unicode character or string is sortable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(char ch);" />
      <MemberSignature Language="F#" Value="static member IsSortable : char -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="e2a2c-765">一个 Unicode 字符</span><span class="sxs-lookup"><span data-stu-id="e2a2c-765">A Unicode character.</span></span></param>
        <summary><span data-ttu-id="e2a2c-766">指示指定的 Unicode 字符是否可排序。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-766">Indicates whether a specified Unicode character is sortable.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-767">如果 <see langword="true" /> 参数可排序，则为 <paramref name="ch" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-767"><see langword="true" /> if the <paramref name="ch" /> parameter is sortable; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-768">如果 `ch` 参数是在内部 <xref:System.Globalization.CompareInfo> 类排序表中定义的 Unicode 字符，并且不是 private use 或不成对的高或低代理项字符，则该参数是可排序的。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-768">The `ch` parameter is sortable if it is a Unicode character that is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsSortable : string -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e2a2c-769">由 0 或更多 Unicode 字符组成的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-769">A string of zero or more Unicode characters.</span></span></param>
        <summary><span data-ttu-id="e2a2c-770">指示指定的 Unicode 字符串是否可排序。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-770">Indicates whether a specified Unicode string is sortable.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-771">如果 <see langword="true" /> 参数不是空字符串 ("") 且 <paramref name="str" /> 中的所有 Unicode 字符都是可排序的，则为 <paramref name="str" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-771"><see langword="true" /> if the <paramref name="str" /> parameter is not an empty string ("") and all the Unicode characters in <paramref name="str" /> are sortable; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-772">`str` 参数中的每个 Unicode 字符都由一个或多个 UTF-16 编码 <xref:System.Char> 对象表示。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-772">Each Unicode character in the `str` parameter is represented by one or more UTF-16 encoded <xref:System.Char> objects.</span></span> <span data-ttu-id="e2a2c-773">如果每个 Unicode 字符都是在内部 <xref:System.Globalization.CompareInfo> 类排序表中定义的，并且不是私用或不成对的高或低代理项字符，则 `str` 参数是可排序的。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-773">The `str` parameter is sortable if each Unicode character is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-774"><paramref name="str" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-774"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSuffix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a2c-775">确定字符串是否以特定的后缀结尾。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-775">Determines whether a string ends with a specific suffix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string -&gt; bool&#xA;override this.IsSuffix : string * string -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-776">要在其中搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-776">The string to search in.</span></span></param>
        <param name="suffix"><span data-ttu-id="e2a2c-777">要与 <paramref name="source" /> 的结尾进行比较的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-777">The string to compare with the end of <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-778">确定指定的源字符串是否以指定的后缀结尾。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-778">Determines whether the specified source string ends with the specified suffix.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-779">如果 <see langword="true" /> 的长度小于或等于 <paramref name="suffix" /> 的长度，并且 <paramref name="source" /> 以 <paramref name="source" /> 结尾，则为 <paramref name="suffix" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-779"><see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-780">每个字符串的开头和结尾均为空子字符串（""）;因此，如果 `suffix` 为空字符串，则此方法返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-780">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-781">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-781">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-782">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-782">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-783">下面的示例确定字符串是另一个字符串的前缀还是后缀。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-783">The following example determines whether a string is the prefix or suffix of another string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-784"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-784"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-785">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-785">-or-</span></span>

 <span data-ttu-id="e2a2c-786"><paramref name="suffix" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-786"><paramref name="suffix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-787">要在其中搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-787">The string to search in.</span></span></param>
        <param name="suffix"><span data-ttu-id="e2a2c-788">要与 <paramref name="source" /> 的结尾进行比较的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-788">The string to compare with the end of <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-789">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="suffix" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-789">A value that defines how <paramref name="source" /> and <paramref name="suffix" /> should be compared.</span></span> <span data-ttu-id="e2a2c-790"><paramref name="options" /> 可以为其自身使用的枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-790"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" /> used by itself, or the bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-791">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值确定指定的源字符串是否以指定的后缀结尾。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-791">Determines whether the specified source string ends with the specified suffix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-792">如果 <see langword="true" /> 的长度小于或等于 <paramref name="suffix" /> 的长度，并且 <paramref name="source" /> 以 <paramref name="source" /> 结尾，则为 <paramref name="suffix" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-792"><see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-793">每个字符串的开头和结尾均为空子字符串（""）;因此，如果 `suffix` 为空字符串，则此方法返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-793">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>

 <span data-ttu-id="e2a2c-794">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-794">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-795">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-795">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-796">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-796">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-797">下面的示例使用 <xref:System.Globalization.CompareOptions>确定字符串是另一个字符串的前缀还是后缀。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-797">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-798"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-798"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-799">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-799">-or-</span></span>

 <span data-ttu-id="e2a2c-800"><paramref name="suffix" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-800"><paramref name="suffix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-801"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-801"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e2a2c-802">返回某个值在一个字符串内或该字符串的一部分中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-802">Returns the zero-based index of the last occurrence of a value within a string or within a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char -&gt; int&#xA;override this.LastIndexOf : string * char -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-803">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-803">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-804">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-804">The character to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-805">搜索指定的字符，并返回整个源字符串内最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-805">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-806">如果找到，则为 <paramref name="value" /> 在 <paramref name="source" /> 内的最后一个匹配项从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-806">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-807">从源字符串向后搜索，从字符串末尾开始，到字符串的开头处结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-807">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>

 <span data-ttu-id="e2a2c-808">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-808">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-809">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-809">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-810">若要执行序号（不区分区域性的）搜索，其中，仅当 Unicode 值相同时，才将字符视为等效于另一个字符，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-810">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="e2a2c-811">搜索字符的 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-811">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-812">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-812">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-813">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-813">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-814">下面的示例将确定字符串中第一个字符或子字符串的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-814">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-815"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-815"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-816">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-816">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-817">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-817">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-818">在这种情况下，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> 方法始终返回 <paramref name="source" /> 中的最后一个索引位置，以指示在 <paramref name="source" />末尾找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-818">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method always returns the last index position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />.</span></span> <span data-ttu-id="e2a2c-819">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> 方法用于在两个字符串中查找软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-819">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="e2a2c-820">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-820">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-821">在这两种情况下，由于软连字符为可忽略字符，该方法将返回字符串中的最后一个索引位置，以指示它已在字符串末尾找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-821">In both cases, because the soft hyphen is an ignorable character, the method returns the last index position in the string to indicate that it has found a match at the end of the string.</span></span>

<span data-ttu-id="e2a2c-822">[！ code-csharp[CompareInfo. LastIndexOf # 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)][！ code-vb[CompareInfo. LastIndexOf # 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-822">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string -&gt; int&#xA;override this.LastIndexOf : string * string -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-823">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-823">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-824">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-824">The string to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-825">搜索指定的子字符串，并返回整个源字符串内最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-825">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-826">如果找到，则为 <paramref name="value" /> 在 <paramref name="source" /> 内的最后一个匹配项从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-826">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-827">从源字符串向后搜索，从字符串末尾开始，到字符串的开头处结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-827">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>

 <span data-ttu-id="e2a2c-828">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-828">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-829">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-829">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-830">若要执行序号（不区分区域性）搜索，其中 Unicode 值比较，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-830">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-831">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-831">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-832">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-832">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-833">下面的示例将确定字符串中第一个字符或子字符串的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-833">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-834"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-834"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-835">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-835">-or-</span></span>

 <span data-ttu-id="e2a2c-836"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-836"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-837">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-837">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-838">在区分区域性的搜索中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-838">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-839">如果 <paramref name="value" /> 仅包含一个或多个忽略字符，则 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> 方法始终返回 <paramref name="source" />。<see cref="P:System.String.Length" /></span><span class="sxs-lookup"><span data-stu-id="e2a2c-839">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /></span></span> <span data-ttu-id="e2a2c-840">-1，表示 <paramref name="source" />中的最后一个索引位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-840">- 1, which represents the last index position in <paramref name="source" />.</span></span> <span data-ttu-id="e2a2c-841">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> 方法用于查找两个字符串中的三个子字符串（软连字符（U + 00AD）、软连字符后跟 "n" 和软连字符后跟 "m"。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-841">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="e2a2c-842">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-842">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-843">在每种情况下，因为软连字符为可忽略字符，所以结果与 <paramref name="value" />中未包含软连字符的结果相同。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-843">In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />.</span></span> <span data-ttu-id="e2a2c-844">仅搜索软连字符时，该方法返回6和5。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-844">When searching for a soft hyphen only, the method returns 6 and 5.</span></span> <span data-ttu-id="e2a2c-845">这些值对应于两个字符串中最后一个字符的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-845">These values correspond to the index of the last character in the two strings.</span></span>

<span data-ttu-id="e2a2c-846">[！ code-csharp[CompareInfo. LastIndexOf # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)][！ code-vb[CompareInfo. LastIndexOf # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-846">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-847">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-847">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-848">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-848">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-849">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-849">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-850"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-850"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-851">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的字符，并返回整个源字符串内最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-851">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-852">使用指定的比较选项，如果在<paramref name="value" /> 中找到 <paramref name="source" /> 的最后一个匹配项，则为从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-852">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-853">从源字符串向后搜索，从字符串末尾开始，到字符串的开头处结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-853">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>

 <span data-ttu-id="e2a2c-854">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-854">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-855">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-855">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-856">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-856">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-857">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性的）搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-857">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="e2a2c-858">仅当 Unicode 值相同时，才将字符视为等效于另一个字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-858">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="e2a2c-859">搜索字符的 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-859">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-860">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-860">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-861">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-861">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-862">下面的示例将确定字符串中第一个字符或子字符串的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-862">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-863"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-863"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-864"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-864"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-865">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-865">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-866">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-866">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-867">在这种情况下，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="source" /> 中的最后一个字符位置，以指示在 <paramref name="source" />末尾找到匹配项。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-867">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns the last character position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />.</span></span> <span data-ttu-id="e2a2c-868">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> 方法用于在两个字符串中搜索软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-868">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="e2a2c-869">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-869">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-870">在这两种情况下，因为软连字符是可忽略字符，所以区分区域性的搜索将返回源字符串中的最后一个索引位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-870">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the last index position in the source string.</span></span> <span data-ttu-id="e2a2c-871">与此相反，序号搜索成功地在一个字符串中查找软连字符，并报告它在第二个字符串中不存在。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-871">In contrast, an ordinal search successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="e2a2c-872">[！ code-csharp[CompareInfo. LastIndexOf # 4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)][！ code-vb[CompareInfo. LastIndexOf # 4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-872">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int -&gt; int&#xA;override this.LastIndexOf : string * char * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-873">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-873">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-874">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-874">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-875">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-875">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="e2a2c-876">搜索指定的字符，并返回源字符串内从字符串开头到指定的索引位置这一部分中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-876">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-877">如果在部分 <paramref name="value" />（从 <paramref name="source" /> 的开头到 <paramref name="source" /> 这一部分）中找到 <paramref name="startIndex" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-877">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-878">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-878">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-879">将从 `startIndex` 开始向后搜索源字符串，并在字符串的开头处结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-879">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>

 <span data-ttu-id="e2a2c-880">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-880">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-881">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-881">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-882">若要执行序号（不区分区域性的）搜索，其中，仅当 Unicode 值相同时，才将字符视为等效于另一个字符，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-882">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="e2a2c-883">搜索字符的 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-883">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-884">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-884">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-885">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-885">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-886">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-886">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="e2a2c-887">请注意，<xref:System.Globalization.CompareInfo.IndexOf%2A> 和 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 是在字符串的不同部分中搜索，即使具有相同的 `startIndex` 参数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-887">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-888"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-888"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-889"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-889"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-890">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-890">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-891">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-891">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-892">在这种情况下，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> 方法始终返回 <paramref name="startIndex" />，即搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-892">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="e2a2c-893">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> 方法用于查找两个字符串中位于最后一个 "m" 之前的软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-893">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="e2a2c-894">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-894">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-895">在这两种情况下，由于软连字符为可忽略字符，该方法将返回 "m" 的索引位置，这是 <paramref name="startIndex" />的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-895">In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span>

<span data-ttu-id="e2a2c-896">[！ code-csharp[CompareInfo. LastIndexOf # 5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)][！ code-vb[CompareInfo. LastIndexOf # 5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-896">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-897">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-897">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-898">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-898">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-899">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-899">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-900"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-900"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-901">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的子字符串，并返回整个源字符串内最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-901">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-902">使用指定的比较选项，如果在<paramref name="value" /> 中找到 <paramref name="source" /> 的最后一个匹配项，则为从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-902">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-903">从源字符串向后搜索，从字符串末尾开始，到字符串的开头处结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-903">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>

 <span data-ttu-id="e2a2c-904">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-904">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-905">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-905">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-906">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-906">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-907">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性）搜索，其中 Unicode 值将进行比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-907">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-908">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-908">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-909">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-909">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-910">下面的示例将确定字符串中第一个字符或子字符串的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-910">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-911"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-911"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-912">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-912">-or-</span></span>

 <span data-ttu-id="e2a2c-913"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-913"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-914"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-914"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-915">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-915">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-916">在区分区域性的搜索 (即，如果 <paramref name="options" /> 不是 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) 中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-916">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-917">如果 <paramref name="value" /> 仅包含一个或多个忽略字符，则 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="source" />。<see cref="P:System.String.Length" /></span><span class="sxs-lookup"><span data-stu-id="e2a2c-917">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /></span></span> <span data-ttu-id="e2a2c-918">-1，表示 <paramref name="source" />中的最后一个索引位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-918">- 1, which represents the last index position in <paramref name="source" />.</span></span> <span data-ttu-id="e2a2c-919">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> 方法用于查找两个字符串中的三个子字符串（软连字符（U + 00AD）、软连字符后跟 "n" 和软连字符后跟 "m"。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-919">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="e2a2c-920">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-920">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-921">由于软连字符是可忽略字符，因此，区分区域性的搜索将返回在搜索字符串中未包含软连字符时返回的相同值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-921">Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="e2a2c-922">不过，序号搜索成功地在一个字符串中查找软连字符，并报告从第二个字符串中缺少它。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-922">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="e2a2c-923">[！ code-csharp[CompareInfo. LastIndexOf # 6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)][！ code-vb[CompareInfo. LastIndexOf # 6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-923">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int -&gt; int&#xA;override this.LastIndexOf : string * string * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-924">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-924">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-925">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-925">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-926">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-926">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="e2a2c-927">搜索指定的子字符串，并返回源字符串内从字符串开头到指定的索引位置这一部分中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-927">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-928">如果在部分 <paramref name="value" />（从 <paramref name="source" /> 的开头到 <paramref name="source" /> 这一部分）中找到 <paramref name="startIndex" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-928">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-929">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-929">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-930">将从 `startIndex` 开始向后搜索源字符串，并在字符串的开头处结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-930">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>

 <span data-ttu-id="e2a2c-931">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-931">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-932">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-932">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-933">若要执行序号（不区分区域性）搜索，其中 Unicode 值比较，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-933">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-934">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-934">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-935">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-935">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-936">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-936">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="e2a2c-937">请注意，<xref:System.Globalization.CompareInfo.IndexOf%2A> 和 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 是在字符串的不同部分中搜索，即使具有相同的 `startIndex` 参数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-937">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-938"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-938"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-939">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-939">-or-</span></span>

 <span data-ttu-id="e2a2c-940"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-940"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-941"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-941"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-942">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-942">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-943">在区分区域性的搜索中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-943">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-944">如果 <paramref name="value" /> 只包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> 方法始终返回 <paramref name="startIndex" />，这是搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-944">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="e2a2c-945">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> 方法用于查找包含软连字符（U + 00AD）并且在字符串中之前或包含最终 "m" 的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-945">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method is used to find a substring that includes a soft hyphen (U+00AD) and that precedes or includes the final "m" in a string.</span></span> <span data-ttu-id="e2a2c-946">由于搜索字符串中的软连字符被忽略，因此调用方法查找包含软连字符的子字符串，并将 "m" 返回到字符串中的 "m" 的位置，而调用它可查找包含软连字符的子字符串，"n" 将返回 "n" 的位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-946">Because the soft hyphen in the search string is ignored, calling the method to find a substring that consists of the soft hyphen and "m" returns the position of the "m" in the string, whereas calling it to find a substring that consists of the soft hyphen and "n" returns the position of the "n".</span></span> <span data-ttu-id="e2a2c-947">如果搜索字符串只包含软连字符，则方法返回 "m" 的索引，它表示 <paramref name="startIndex" />的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-947">When the search string contains only the soft hyphen, the method returns the index of the "m", which represents the value of <paramref name="startIndex" />.</span></span>

<span data-ttu-id="e2a2c-948">[！ code-csharp[CompareInfo. LastIndexOf # 7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)][！ code-vb[CompareInfo. LastIndexOf # 7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-948">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-949">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-949">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-950">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-950">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-951">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-951">The zero-based starting index of the backward search.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-952">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-952">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-953"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-953"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-954">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的字符，并返回源字符串内从字符串开头到指定的索引位置这一部分中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-954">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-955">使用指定的比较选项，如果在 <paramref name="value" /> 中从 <paramref name="source" /> 一直到 <paramref name="source" /> 的开始这部分找到 <paramref name="startIndex" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-955">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-956">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-956">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-957">将从 `startIndex` 开始向后搜索源字符串，并在字符串的开头处结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-957">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>

 <span data-ttu-id="e2a2c-958">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-958">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-959">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-959">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-960">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-960">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-961">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性的）搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-961">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="e2a2c-962">仅当 Unicode 值相同时，才将字符视为等效于另一个字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-962">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="e2a2c-963">搜索字符的 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-963">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-964">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-964">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-965">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-965">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-966">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-966">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="e2a2c-967">请注意，<xref:System.Globalization.CompareInfo.IndexOf%2A> 和 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 是在字符串的不同部分中搜索，即使具有相同的 `startIndex` 参数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-967">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-968"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-968"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-969"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-969"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-970"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-970"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-971">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-971">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-972">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-972">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-973">在这种情况下，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="startIndex" />，即搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-973">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="e2a2c-974">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> 方法用于查找两个字符串中位于最后一个 "m" 之前的软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-974">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="e2a2c-975">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-975">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-976">在这两种情况下，因为软连字符是可忽略字符，所以区分区域性的搜索将返回 "m" 的索引位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-976">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m".</span></span> <span data-ttu-id="e2a2c-977">不过，序号搜索成功地在一个字符串中查找软连字符，并报告从第二个字符串中缺少它。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-977">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="e2a2c-978">[！ code-csharp[CompareInfo. LastIndexOf # 8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)][！ code-vb[CompareInfo. LastIndexOf # 8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-978">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int -&gt; int&#xA;override this.LastIndexOf : string * char * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-979">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-979">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-980">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-980">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-981">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-981">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="e2a2c-982">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-982">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="e2a2c-983">搜索指定的字符，并返回源字符串内包含指定的元素数、以指定的索引位置结尾的部分中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-983">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-984">在包含 <paramref name="value" /> 所指定的元素数并以 <paramref name="source" /> 结尾的这部分 <paramref name="count" /> 中，如果找到 <paramref name="startIndex" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-984">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-985">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-985">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-986">将从 `startIndex` 开始向后搜索源字符串，并在 `startIndex` - `count` + 1 结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-986">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>

 <span data-ttu-id="e2a2c-987">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-987">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-988">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-988">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-989">若要执行序号（不区分区域性的）搜索，其中，仅当 Unicode 值相同时，才将字符视为等效于另一个字符，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-989">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="e2a2c-990">搜索字符的 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-990">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-991">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-991">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-992">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-992">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-993">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-993">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-994"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-994"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-995"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-995"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="e2a2c-996">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-996">-or-</span></span>

 <span data-ttu-id="e2a2c-997"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-997"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-998">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-998">-or-</span></span>

 <span data-ttu-id="e2a2c-999"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <paramref name="source" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-999"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-1000">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1000">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-1001">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1001">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-1002">在这种情况下，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 方法始终返回 <paramref name="startIndex" />，即搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1002">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="e2a2c-1003">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> 方法用于查找两个字符串中位于最后一个 "m" 之前的软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1003">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="e2a2c-1004">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1004">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-1005">在这两种情况下，由于软连字符为可忽略字符，该方法将返回 "m" 的索引位置，这是 <paramref name="startIndex" />的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1005">In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span>

<span data-ttu-id="e2a2c-1006">[！ code-csharp[CompareInfo. LastIndexOf # 9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)][！ code-vb[CompareInfo. LastIndexOf # 9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1006">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-1007">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1007">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-1008">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1008">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-1009">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1009">The zero-based starting index of the backward search.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-1010">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1010">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-1011"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1011"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-1012">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的子字符串，并返回源字符串内从字符串开头到指定的索引位置这一部分中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1012">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-1013">使用指定的比较选项，如果在 <paramref name="value" /> 中从 <paramref name="source" /> 一直到 <paramref name="source" /> 的开始这部分找到 <paramref name="startIndex" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1013">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-1014">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1014">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-1015">将从 `startIndex` 开始向后搜索源字符串，并在字符串的开头处结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1015">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>

 <span data-ttu-id="e2a2c-1016">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1016">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-1017">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1017">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-1018">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1018">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-1019">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性）搜索，其中 Unicode 值将进行比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1019">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-1020">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1020">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-1021">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1021">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-1022">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1022">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="e2a2c-1023">请注意，<xref:System.Globalization.CompareInfo.IndexOf%2A> 和 <xref:System.Globalization.CompareInfo.LastIndexOf%2A> 是在字符串的不同部分中搜索，即使具有相同的 `startIndex` 参数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1023">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-1024"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1024"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-1025">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1025">-or-</span></span>

 <span data-ttu-id="e2a2c-1026"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1026"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-1027"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1027"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-1028"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1028"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-1029">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1029">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-1030">在区分区域性的搜索 (即，如果 <paramref name="options" /> 不是 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) 中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1030">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-1031">如果 <paramref name="value" /> 只包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="startIndex" />，这是搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1031">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="e2a2c-1032">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> 方法用于查找软连字符（U + 00AD）后跟 "m" 的位置，以两个字符串中的最后一个 "m" 开头。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1032">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m", starting with the final "m" in two strings.</span></span> <span data-ttu-id="e2a2c-1033">只有一个字符串包含必需的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1033">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="e2a2c-1034">在这两种情况下，因为软连字符是可忽略字符，因此，在执行区分区域性的比较时，该方法在字符串中返回索引“m”。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1034">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-1035">注意对于第一个字符串，包含软连字符后跟“m”，该方法无法返回该软连字符的索引，而是返回“m”的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1035">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="e2a2c-1036">只有当此方法执行序号比较时，它才会在第一个字符串中返回软连字符的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1036">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>

<span data-ttu-id="e2a2c-1037">[！ code-csharp[CompareInfo. LastIndexOf # 15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)][！ code-vb[CompareInfo. LastIndexOf # 15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1037">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int -&gt; int&#xA;override this.LastIndexOf : string * string * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-1038">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1038">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-1039">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1039">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-1040">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1040">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="e2a2c-1041">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1041">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="e2a2c-1042">搜索指定的子字符串，并返回源字符串内包含指定的元素数、以指定的索引位置结尾的部分中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1042">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-1043">在包含 <paramref name="value" /> 所指定的元素数并以 <paramref name="source" /> 结尾的这部分 <paramref name="count" /> 中，如果找到 <paramref name="startIndex" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1043">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-1044">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1044">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-1045">将从 `startIndex` 开始向后搜索源字符串，并在 `startIndex` - `count` + 1 结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1045">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>

 <span data-ttu-id="e2a2c-1046">此重载执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1046">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-1047">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1047">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-1048">若要执行序号（不区分区域性）搜索，其中 Unicode 值比较，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的重载之一，并使用 <xref:System.Globalization.CompareOptions.Ordinal> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1048">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-1049">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1049">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-1050">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1050">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons .</span></span>



## Examples
 <span data-ttu-id="e2a2c-1051">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1051">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-1052"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1052"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-1053">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1053">-or-</span></span>

 <span data-ttu-id="e2a2c-1054"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1054"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-1055"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1055"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="e2a2c-1056">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1056">-or-</span></span>

 <span data-ttu-id="e2a2c-1057"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1057"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-1058">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1058">-or-</span></span>

 <span data-ttu-id="e2a2c-1059"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <paramref name="source" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1059"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-1060">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1060">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-1061">在区分区域性的搜索中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1061">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-1062">如果 <paramref name="value" /> 只包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> 方法始终返回 <paramref name="startIndex" />，这是搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1062">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="e2a2c-1063">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> 方法用于查找软连字符的位置（U + 00AD），后跟在两个字符串的最后 "m" 前面的三个字符中的 "m"。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1063">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in the three characters that precede the final "m" of two strings.</span></span> <span data-ttu-id="e2a2c-1064">只有一个字符串包含必需的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1064">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="e2a2c-1065">在这两种情况下，因为软连字符是可忽略字符，因此，在执行区分区域性的比较时，该方法在字符串中返回索引“m”。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1065">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-1066">注意对于第一个字符串，包含软连字符后跟“m”，该方法无法返回该软连字符的索引，而是返回“m”的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1066">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>

<span data-ttu-id="e2a2c-1067">[！ code-csharp[CompareInfo. LastIndexOf # 17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)][！ code-vb[CompareInfo. LastIndexOf # 17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1067">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-1068">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1068">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-1069">要在 <paramref name="source" /> 中定位的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1069">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-1070">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1070">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="e2a2c-1071">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1071">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-1072">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1072">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-1073"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1073"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-1074">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的字符，并返回源字符串内包含所指定元素数、以指定的索引位置结尾的部分中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1074">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-1075">使用指定的比较选项，如果在 <paramref name="value" /> 中结束于 <paramref name="source" /> 、包含 <paramref name="count" /> 指定的元素数的部分找到 <paramref name="startIndex" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1075">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-1076">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1076">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-1077">将从 `startIndex` 开始向后搜索源字符串，并在 `startIndex` - `count` + 1 结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1077">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>

 <span data-ttu-id="e2a2c-1078">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1078">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-1079">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1079">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-1080">如果该字符是表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6）），则它可能被视为等效于正确序列中出现的任何组件（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1080">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-1081">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性的）搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1081">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="e2a2c-1082">仅当 Unicode 值相同时，才将字符视为等效于另一个字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1082">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="e2a2c-1083">搜索字符的 <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> 的重载执行序号搜索，而搜索字符串的则执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1083">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-1084">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1084">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-1085">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1085">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-1086">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1086">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-1087"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1087"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-1088"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1088"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="e2a2c-1089">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1089">-or-</span></span>

 <span data-ttu-id="e2a2c-1090"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1090"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-1091">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1091">-or-</span></span>

 <span data-ttu-id="e2a2c-1092"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <paramref name="source" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1092"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-1093"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1093"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-1094">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1094">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-1095">在区分区域性的搜索中，如果 <paramref name="value" /> 为可忽略字符，则结果等效于删除该字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1095">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-1096">在这种情况下，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="startIndex" />，即搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1096">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="e2a2c-1097">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法用于查找两个字符串中位于最后一个 "m" 之前的软连字符（U + 00AD）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1097">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="e2a2c-1098">只有一个字符串包含软连字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1098">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="e2a2c-1099">在这两种情况下，因为软连字符为可忽略字符，所以区分区域性的搜索将返回 "m" 的索引位置，这是 <paramref name="startIndex" />的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1099">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span> <span data-ttu-id="e2a2c-1100">不过，序号搜索成功地在一个字符串中查找软连字符，并报告从第二个字符串中缺少它。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1100">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="e2a2c-1101">[！ code-csharp[CompareInfo. LastIndexOf # 12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)][！ code-vb[CompareInfo. LastIndexOf # 12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1101">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e2a2c-1102">要搜索的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1102">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="e2a2c-1103">要在 <paramref name="source" /> 中定位的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1103">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="e2a2c-1104">向后搜索的从零开始的起始索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1104">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="e2a2c-1105">要搜索的部分中的元素数。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1105">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="e2a2c-1106">一个值，用于定义应如何比较 <paramref name="source" /> 和 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1106">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="e2a2c-1107"><paramref name="options" /> 可以为枚举值 <see cref="F:System.Globalization.CompareOptions.Ordinal" />，或为以下一个或多个值的按位组合：<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" /> 和 <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1107"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="e2a2c-1108">使用指定的 <see cref="T:System.Globalization.CompareOptions" /> 值，搜索指定的子字符串，并返回源字符串内包含所指定元素数、以指定的索引位置结尾的部分中最后一个匹配项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1108">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-1109">使用指定的比较选项，如果在 <paramref name="value" /> 中结束于 <paramref name="source" /> 、包含 <paramref name="count" /> 指定的元素数的部分找到 <paramref name="startIndex" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1109">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="e2a2c-1110">如果 <paramref name="startIndex" /> 为可忽略字符，则将返回 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1110">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-1111">将从 `startIndex` 开始向后搜索源字符串，并在 `startIndex` - `count` + 1 结束。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1111">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>

 <span data-ttu-id="e2a2c-1112">此方法的 <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 值无效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1112">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="e2a2c-1113">如果 `options` 不包含 <xref:System.Globalization.CompareOptions.Ordinal> 值，此重载将执行区分区域性的搜索。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1113">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="e2a2c-1114">表示预构成字符的 Unicode 值（如连字 "Æ" （U + 00C6））可能被视为等效于正确序列中任何字符的组成部分（例如，"AE" （U + 0041，U + 0045），具体取决于区域性）。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1114">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="e2a2c-1115">如果 `options` 包括 <xref:System.Globalization.CompareOptions.Ordinal> 值，则此重载执行序号（不区分区域性）搜索，其中 Unicode 值将进行比较。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1115">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="e2a2c-1116">如果可能，应调用具有类型 <xref:System.Globalization.CompareOptions> 的参数的字符串比较方法，以指定所需的比较类型。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1116">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="e2a2c-1117">作为一般规则，请使用语言选项（使用当前区域性）比较用户界面中显示的字符串，并为安全比较指定 <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1117">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="e2a2c-1118">下面的示例确定字符或字符串的一部分中的第一个和最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1118">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e2a2c-1119"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1119"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="e2a2c-1120">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1120">-or-</span></span>

 <span data-ttu-id="e2a2c-1121"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1121"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e2a2c-1122"><paramref name="startIndex" /> 超出了 <paramref name="source" /> 的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1122"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="e2a2c-1123">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1123">-or-</span></span>

 <span data-ttu-id="e2a2c-1124"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1124"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="e2a2c-1125">- 或 -</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1125">-or-</span></span>

 <span data-ttu-id="e2a2c-1126"><paramref name="startIndex" /> 和 <paramref name="count" /> 未在 <paramref name="source" /> 中指定有效部分。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1126"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e2a2c-1127"><paramref name="options" /> 包含无效的 <see cref="T:System.Globalization.CompareOptions" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1127"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-1128">字符集包括可忽略字符，这是在执行语言或区分区域性的排序时不考虑的字符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1128">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="e2a2c-1129">在区分区域性的搜索 (即，如果 <paramref name="options" /> 不是 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> 或 <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />) 中，如果 <paramref name="value" /> 包含一个可忽略字符，则结果与移除了该字符的搜索等效。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1129">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="e2a2c-1130">如果 <paramref name="value" /> 只包含一个或多个可忽略字符，则 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法始终返回 <paramref name="startIndex" />，这是搜索开始处的字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1130">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="e2a2c-1131">在下面的示例中，<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 方法用于查找软连字符（U + 00AD）后跟 "m" 的位置，而不是在两个字符串中的最后一个字符位置之前的第一个字符位置。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1131">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in all but the first character position before the final "m" in two strings.</span></span> <span data-ttu-id="e2a2c-1132">只有一个字符串包含必需的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1132">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="e2a2c-1133">在这两种情况下，因为软连字符是可忽略字符，因此，在执行区分区域性的比较时，该方法在字符串中返回索引“m”。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1133">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-1134">但当它执行序号比较时，它只查找第一个字符串中的子字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1134">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="e2a2c-1135">请注意，对于包含软连字符后跟 "m" 的软连字符的第一个字符串，该方法将无法返回软连字符的索引，而是在执行区分区域性的比较时返回 "m" 的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1135">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="e2a2c-1136">只有当此方法执行序号比较时，它才会在第一个字符串中返回软连字符的索引。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1136">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>

<span data-ttu-id="e2a2c-1137">[！ code-vb[CompareInfo. LastIndexOf # 16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1137">[!code-vb[System.Globalization.CompareInfo.LastIndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CompareInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2a2c-1138">获取当前 <see cref="T:System.Globalization.CompareInfo" /> 的格式正确的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1138">Gets the properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></summary>
        <value><span data-ttu-id="e2a2c-1139">当前 <see cref="T:System.Globalization.CompareInfo" /> 的格式正确的区域性标识符。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1139">The properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="e2a2c-1140">下面的示例演示了 <xref:System.Globalization.CompareInfo.LCID%2A> 的属性。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1140">The following example demonstrates the <xref:System.Globalization.CompareInfo.LCID%2A> property.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CompareInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2a2c-1141">获取用于通过 <see cref="T:System.Globalization.CompareInfo" /> 对象执行排序操作的区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1141">Gets the name of the culture used for sorting operations by this <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="e2a2c-1142">区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1142">The name of a culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-1143"><xref:System.Globalization.CompareInfo.Name%2A> 和 <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> 属性可以具有不同的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1143">The <xref:System.Globalization.CompareInfo.Name%2A> and <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> properties can have different values.</span></span> <span data-ttu-id="e2a2c-1144">例如，十六进制0x10407 的 <xref:System.Globalization.CompareInfo.LCID%2A> 属性值标识一种替换排序区域性，该区域性对姓名的排序方式在德语电话簿中出现。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1144">For example, an <xref:System.Globalization.CompareInfo.LCID%2A> property value of hexadecimal 0x10407 identifies an alternate sort culture that sorts names as they might appear in a German telephone book.</span></span> <span data-ttu-id="e2a2c-1145"><xref:System.Globalization.CompareInfo.Name%2A> 属性的值为 "de_phoneb"，而关联德语（德国）区域性的 <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> 属性的值为 "de"。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1145">The <xref:System.Globalization.CompareInfo.Name%2A> property has a value of "de-de_phoneb", whereas the <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> property of the associated German (Germany) culture has a value of "de-DE".</span></span>



## Examples
 <span data-ttu-id="e2a2c-1146">下面的示例使用 fr-fr 和 ja-jp 区域性比较三个字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1146">The following example compares three strings using the fr-FR and ja-JP cultures.</span></span> <span data-ttu-id="e2a2c-1147"><xref:System.Globalization.CultureInfo.Name%2A> 属性用于显示每个区域性的名称。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1147">The <xref:System.Globalization.CultureInfo.Name%2A> property is used to display the name of each culture.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="e2a2c-1148">启动回调的对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1148">The object that initiated the callback.</span></span></param>
        <summary><span data-ttu-id="e2a2c-1149">当已开始对整个对象图形进行反序列化时运行。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1149">Runs when the entire object graph has been deserialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-1150">此成员是显式接口成员实现，只能在当前 <xref:System.Globalization.CompareInfo> 对象强制转换为 <xref:System.Runtime.Serialization.IDeserializationCallback> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1150">This member is an explicit interface member implementation that can be used only when the current <xref:System.Globalization.CompareInfo> object is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.</span></span> <span data-ttu-id="e2a2c-1151">有关更多信息，请参见 <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1151">For more information, see the <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="compareInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e2a2c-1152">返回表示当前 <see cref="T:System.Globalization.CompareInfo" /> 对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1152">Returns a string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="e2a2c-1153">表示当前 <see cref="T:System.Globalization.CompareInfo" /> 对象的字符串。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1153">A string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-1154">此方法将重写 <xref:System.Object.ToString%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1154">This method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e2a2c-1155">它将返回一个字符串，其中包含类名称和实例 <xref:System.Globalization.CompareInfo.Name%2A> 属性的值，由连字符分隔。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1155">It returns a string that consists of the class name and the value of the instance <xref:System.Globalization.CompareInfo.Name%2A> property, separated by a hyphen.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="e2a2c-1156">从 .NET Framework 4 开始，<see cref="M:System.Globalization.CompareInfo.ToString" /> 方法返回类名，后跟空格、连字符、空格和 <see cref="P:System.Globalization.CompareInfo.Name" /> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1156">Staring with the .NET Framework 4, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.Name" /> property.</span></span> <span data-ttu-id="e2a2c-1157">例如，对于表示 en-US 区域性的 <see cref="T:System.Globalization.CompareInfo" /> 对象，<see cref="M:System.Globalization.CompareInfo.ToString" /> 方法返回“CompareInfo - en-US”。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1157">For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - en-US".</span></span> <span data-ttu-id="e2a2c-1158">在 .NET Framework 的早期版本中，它返回后跟空格、连字符、空格和 <see cref="P:System.Globalization.CompareInfo.LCID" /> 属性的值的类名。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1158">In previous versions of the .NET Framework, it returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.LCID" /> property.</span></span> <span data-ttu-id="e2a2c-1159">例如，对于表示 en-US 区域性的 <see cref="T:System.Globalization.CompareInfo" /> 对象，<see cref="M:System.Globalization.CompareInfo.ToString" /> 方法返回“CompareInfo - 1033”。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1159">For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - 1033".</span></span></para></block>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public System.Globalization.SortVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.SortVersion Version" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As SortVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::SortVersion ^ Version { System::Globalization::SortVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : System.Globalization.SortVersion" Usage="System.Globalization.CompareInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.SortVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2a2c-1160">获取用于比较和排序字符串的 Unicode 版本的相关信息。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1160">Gets information about the version of Unicode used for comparing and sorting strings.</span></span></summary>
        <value><span data-ttu-id="e2a2c-1161">包含用于比较和排序字符串的 Unicode 版本的相关信息的对象。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1161">An object that contains information about the Unicode version used for comparing and sorting strings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="e2a2c-1162">各个字符的权重，因此，比较或排序特定字符串的方式取决于特定版本的 .NET Framework 所实现的 Unicode 规范的版本。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1162">The weight of individual characters, and therefore the way in which particular strings are compared or ordered, depends on the version of the Unicode specification that a particular version of the .NET Framework implements.</span></span> <span data-ttu-id="e2a2c-1163">在 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] 中，这也取决于主机操作系统，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1163">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], this also depends on the host operating system, as the following table shows.</span></span> <span data-ttu-id="e2a2c-1164">请注意，受支持的 Unicode 版本的列表仅适用于字符比较和排序；不适用于 Unicode 字符串按类别分类。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1164">Note that this list of supported Unicode versions applies to character comparison and sorting only; it does not apply to classification of Unicode characters by category.</span></span>

|<span data-ttu-id="e2a2c-1165">.NET Framework 版本</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1165">.NET Framework version</span></span>|<span data-ttu-id="e2a2c-1166">操作系统</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1166">Operating system</span></span>|<span data-ttu-id="e2a2c-1167">Unicode 版本</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1167">Unicode version</span></span>|
|----------------------------|----------------------|---------------------|
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|<span data-ttu-id="e2a2c-1168">所有操作系统</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1168">All operating systems</span></span>|<span data-ttu-id="e2a2c-1169">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1169">Unicode 5.0</span></span>|
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] <span data-ttu-id="e2a2c-1170">及更高版本</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1170">and later versions</span></span>|[!INCLUDE[win7](~/includes/win7-md.md)]|<span data-ttu-id="e2a2c-1171">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1171">Unicode 5.0</span></span>|
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] <span data-ttu-id="e2a2c-1172">及更高版本</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1172">and later versions</span></span>|[!INCLUDE[win8](~/includes/win8-md.md)] <span data-ttu-id="e2a2c-1173">和更高版本的 Windows 操作系统版本</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1173">and later Windows operating system versions</span></span>|<span data-ttu-id="e2a2c-1174">Unicode 6。3</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1174">Unicode 6.3</span></span>|

 <span data-ttu-id="e2a2c-1175">由 <xref:System.Globalization.SortVersion> 属性返回的 <xref:System.Globalization.CompareInfo.Version%2A> 对象不标识用于比较字符串的准确 Unicode 版本。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1175">The <xref:System.Globalization.SortVersion> object returned by the <xref:System.Globalization.CompareInfo.Version%2A> property doesn't identify the precise Unicode version used to compare strings.</span></span> <span data-ttu-id="e2a2c-1176">仅在比较两个 <xref:System.Globalization.SortVersion> 对象来确定它们是否使用相同版本的 Unicode 版本和区域性来比较字符串时很有用。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1176">It is useful only when comparing two <xref:System.Globalization.SortVersion> objects to determine whether they use the same Unicode version and culture to compare strings.</span></span> <span data-ttu-id="e2a2c-1177">有关详细信息和示例，请参见 <xref:System.Globalization.SortVersion> 引用页。</span><span class="sxs-lookup"><span data-stu-id="e2a2c-1177">For more information and an example, see the <xref:System.Globalization.SortVersion> reference page.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortVersion" />
      </Docs>
    </Member>
  </Members>
</Type>
