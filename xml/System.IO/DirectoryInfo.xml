<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2107888b693bbacf44a711dd076bac17b89a5e06" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73388229" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="97971-101">公开用于通过目录和子目录进行创建、移动和枚举的实例方法。</span><span class="sxs-lookup"><span data-stu-id="97971-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="97971-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="97971-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-103">使用 <xref:System.IO.DirectoryInfo> 类执行典型操作，例如复制、移动、重命名、创建和删除目录。</span><span class="sxs-lookup"><span data-stu-id="97971-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="97971-104">如果要多次重用某个对象，请考虑使用 <xref:System.IO.DirectoryInfo> 的实例方法而不是 <xref:System.IO.Directory> 类的相应静态方法，因为不一定需要安全检查。</span><span class="sxs-lookup"><span data-stu-id="97971-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97971-105">在接受路径作为输入字符串的成员中，该路径必须格式正确，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="97971-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="97971-106">例如，如果路径是完全限定的，但以空格开头，则不会在类的方法中剪裁路径。</span><span class="sxs-lookup"><span data-stu-id="97971-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="97971-107">因此，路径格式不正确，并引发异常。</span><span class="sxs-lookup"><span data-stu-id="97971-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="97971-108">同样，路径或路径的组合不能完全限定两次。</span><span class="sxs-lookup"><span data-stu-id="97971-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="97971-109">例如，在大多数情况下，"c：\temp c：\windows" 也会引发异常。</span><span class="sxs-lookup"><span data-stu-id="97971-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="97971-110">使用接受路径字符串的方法时，请确保路径格式正确。</span><span class="sxs-lookup"><span data-stu-id="97971-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="97971-111">在接受路径的成员中，路径可以引用文件或只引用目录。</span><span class="sxs-lookup"><span data-stu-id="97971-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="97971-112">指定的路径还可以引用服务器和共享名称的相对路径或通用命名约定（UNC）路径。</span><span class="sxs-lookup"><span data-stu-id="97971-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="97971-113">例如，以下所有内容都是可接受的路径：</span><span class="sxs-lookup"><span data-stu-id="97971-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="97971-114">"c：\\\MyDir\\" 中C#的 "\MyFile.txt" 或 "c:\MyDir\MyFile.txt" 中的 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="97971-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="97971-115">Visual Basic 中的 "c：\\C#\MyDir" 或 "c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="97971-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="97971-116">Visual Basic 中的 "MyDir\\C#\MySubdir" 或 "MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="97971-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="97971-117">\\中的 "\\\\\\\MyServer\\C#\MyShare" 或 "Visual Basic \MyServer\MyShare"。</span><span class="sxs-lookup"><span data-stu-id="97971-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="97971-118">默认情况下，将向所有用户授予对新目录的完全读/写访问权限。</span><span class="sxs-lookup"><span data-stu-id="97971-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="97971-119">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-120">下面的示例演示了 `DirectoryInfo` 类的一些主要成员。</span><span class="sxs-lookup"><span data-stu-id="97971-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="97971-121">下面的示例演示如何复制目录及其内容。</span><span class="sxs-lookup"><span data-stu-id="97971-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-122">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-122">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-123">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-124">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="97971-125">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="97971-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="97971-126">一个字符串，它指定要在其中创建 <see langword="DirectoryInfo" /> 的路径。</span><span class="sxs-lookup"><span data-stu-id="97971-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="97971-127">初始化指定路径上的 <see cref="T:System.IO.DirectoryInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="97971-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-128">此构造函数不检查目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="97971-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="97971-129">此构造函数是用于在后续操作中访问磁盘的字符串的占位符。</span><span class="sxs-lookup"><span data-stu-id="97971-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="97971-130">`path` 参数可以是文件名，包括通用命名约定（UNC）共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="97971-131">使用特定的区域性设置编译一组字符并使用不同的区域性设置检索这些相同的字符时，这些字符可能不是可解释，并且可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="97971-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="97971-132">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-132">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-133">下面的示例使用此构造函数创建指定的目录和子目录，并演示不能删除包含子目录的目录。</span><span class="sxs-lookup"><span data-stu-id="97971-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-134"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-135">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-136"><paramref name="path" /> 包含无效字符，例如 "、&lt;、&gt; 或 |。</span><span class="sxs-lookup"><span data-stu-id="97971-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="97971-137">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="97971-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-138">用于读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="97971-138">for reading from files and directories.</span></span> <span data-ttu-id="97971-139">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="97971-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-140">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-140">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-141">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-141">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-142">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-142">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-143">创建目录。</span><span class="sxs-lookup"><span data-stu-id="97971-143">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-144">创建目录。</span><span class="sxs-lookup"><span data-stu-id="97971-144">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-145">如果该目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="97971-145">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="97971-146">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-147">下面的示例检查指定的目录是否存在，如果该目录不存在，则创建该目录，并删除该目录。</span><span class="sxs-lookup"><span data-stu-id="97971-147">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="97971-148">无法创建目录。</span><span class="sxs-lookup"><span data-stu-id="97971-148">The directory cannot be created.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-149">用于写入文件。</span><span class="sxs-lookup"><span data-stu-id="97971-149">for writing files.</span></span> <span data-ttu-id="97971-150">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="97971-150">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-151">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-151">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-152">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-152">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-153">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-153">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="97971-154">要应用于此目录的访问控制。</span><span class="sxs-lookup"><span data-stu-id="97971-154">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="97971-155">使用 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象创建目录。</span><span class="sxs-lookup"><span data-stu-id="97971-155">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-156">使用此方法重载来创建具有访问控制的目录，因此在应用安全之前，无法访问该目录。</span><span class="sxs-lookup"><span data-stu-id="97971-156">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="97971-157">如果该目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="97971-157">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="97971-158">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="97971-159"><paramref name="path" /> 指定的目录为只读或为非空。</span><span class="sxs-lookup"><span data-stu-id="97971-159">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="97971-160">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-160">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-161"><paramref name="path" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="97971-161"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-162"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="97971-163">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="97971-163">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-164">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="97971-164">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="97971-165">试图创建只带冒号 (:) 字符的目录。</span><span class="sxs-lookup"><span data-stu-id="97971-165">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-166">用于创建目录的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-166">for permission to create a directory.</span></span> <span data-ttu-id="97971-167">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="97971-167">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="97971-168">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="97971-168">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-169">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="97971-170">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="97971-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="97971-171">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="97971-171">The specified path.</span></span> <span data-ttu-id="97971-172">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="97971-172">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="97971-173">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-173">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="97971-174">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="97971-174">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="97971-175">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="97971-175">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-176">将创建 `path` 中指定的任何和所有目录，除非 `path` 的某个部分无效。</span><span class="sxs-lookup"><span data-stu-id="97971-176">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="97971-177">`path` 参数指定目录路径而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="97971-177">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="97971-178">如果子目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="97971-178">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="97971-179">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-179">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-180">下面的示例演示如何创建子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-180">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="97971-181">在此示例中，创建的目录在创建后将被删除。</span><span class="sxs-lookup"><span data-stu-id="97971-181">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="97971-182">因此，若要测试此示例，请在代码中注释掉删除行。</span><span class="sxs-lookup"><span data-stu-id="97971-182">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-183"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="97971-183"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-184"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-184"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-185">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="97971-185">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="97971-186">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-186">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="97971-187">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-187">-or-</span></span> 
<span data-ttu-id="97971-188">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="97971-188">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="97971-189">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="97971-189">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-190">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="97971-190">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="97971-191">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-191">-or-</span></span> 
<span data-ttu-id="97971-192">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="97971-192">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="97971-193">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="97971-193">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="97971-194"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="97971-194"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-195">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="97971-195">for reading and writing files.</span></span> <span data-ttu-id="97971-196">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="97971-196">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-197">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-197">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-198">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-198">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-199">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-199">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="97971-200">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="97971-200">The specified path.</span></span> <span data-ttu-id="97971-201">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="97971-201">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="97971-202">要应用的安全性。</span><span class="sxs-lookup"><span data-stu-id="97971-202">The security to apply.</span></span></param>
        <summary><span data-ttu-id="97971-203">使用指定的安全性在指定的路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-203">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="97971-204">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="97971-204">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="97971-205">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="97971-205">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-206">将创建 `path` 中指定的任何和所有目录，除非 `path` 的某个部分无效。</span><span class="sxs-lookup"><span data-stu-id="97971-206">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="97971-207">`path` 参数指定目录路径而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="97971-207">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="97971-208">如果子目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="97971-208">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="97971-209">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-210"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="97971-210"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-211"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-211"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-212">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="97971-212">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="97971-213">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-213">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="97971-214">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-214">-or-</span></span> 
<span data-ttu-id="97971-215">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="97971-215">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="97971-216">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="97971-216">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-217">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="97971-217">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="97971-218">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-218">-or-</span></span> 
<span data-ttu-id="97971-219">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="97971-219">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="97971-220">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="97971-220">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="97971-221"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="97971-221"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-222">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="97971-222">for reading and writing files.</span></span> <span data-ttu-id="97971-223">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="97971-223">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-224">从路径中删除 <see cref="T:System.IO.DirectoryInfo" /> 及其内容。</span><span class="sxs-lookup"><span data-stu-id="97971-224">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-225">如果此 <see cref="T:System.IO.DirectoryInfo" /> 为空则将其删除。</span><span class="sxs-lookup"><span data-stu-id="97971-225">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-226">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-226">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-227">如果尝试删除不为空的目录，下面的示例将引发异常。</span><span class="sxs-lookup"><span data-stu-id="97971-227">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="97971-228">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="97971-228">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-229">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="97971-229">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="97971-230">目录不为空。</span><span class="sxs-lookup"><span data-stu-id="97971-230">The directory is not empty.</span></span>  
  
<span data-ttu-id="97971-231">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-231">-or-</span></span> 
<span data-ttu-id="97971-232">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="97971-232">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="97971-233">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-233">-or-</span></span> 
<span data-ttu-id="97971-234">目录中存在开放句柄，并且操作系统是 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="97971-234">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="97971-235">开放句柄可能产生自枚举目录。</span><span class="sxs-lookup"><span data-stu-id="97971-235">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="97971-236">有关详细信息，请参阅[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-237">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-237">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-238">用于写入目录。</span><span class="sxs-lookup"><span data-stu-id="97971-238">for writing directories.</span></span> <span data-ttu-id="97971-239">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="97971-239">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-240">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-240">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-241">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-241">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-242">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-242">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="97971-243">如果要删除此目录，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97971-243"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="97971-244">删除 <see cref="T:System.IO.DirectoryInfo" /> 的此实例，指定是否删除子目录和文件。</span><span class="sxs-lookup"><span data-stu-id="97971-244">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-245">如果 `DirectoryInfo` 没有文件或子目录，则即使 `recursive` `false`，此方法也会删除 `DirectoryInfo`。</span><span class="sxs-lookup"><span data-stu-id="97971-245">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="97971-246">当 `recursive` `false` 时，尝试删除不为空的 `DirectoryInfo` 将引发 <xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="97971-246">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="97971-247">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-247">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-248">下面的示例演示如何删除目录。</span><span class="sxs-lookup"><span data-stu-id="97971-248">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="97971-249">由于已删除该目录，因此请先注释掉 `Delete` 行，以测试该目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="97971-249">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="97971-250">然后取消注释同一代码行，以测试目录是否已成功删除。</span><span class="sxs-lookup"><span data-stu-id="97971-250">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="97971-251">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="97971-251">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-252">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="97971-252">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="97971-253">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="97971-253">The directory is read-only.</span></span>  
  
<span data-ttu-id="97971-254">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-254">-or-</span></span> 
<span data-ttu-id="97971-255">该目录包含一个或多个文件或子目录，且 <paramref name="recursive" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97971-255">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="97971-256">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-256">-or-</span></span> 
<span data-ttu-id="97971-257">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="97971-257">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="97971-258">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-258">-or-</span></span> 
<span data-ttu-id="97971-259">目录或目录的一个文件存在开放句柄，并且操作系统为 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="97971-259">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="97971-260">枚举目录和文件可能会导致此开放句柄出现。</span><span class="sxs-lookup"><span data-stu-id="97971-260">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="97971-261">有关详细信息，请参阅[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-261">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-262">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-262">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess"><span data-ttu-id="97971-263">写入要删除的 <see langword="DirectoryInfo" /> 和子目录的权限需要写入标志。</span><span class="sxs-lookup"><span data-stu-id="97971-263">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-264">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-264">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-265">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-265">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-266">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-266">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-267">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-267">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-268">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-268">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="97971-269">当前目录中目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-269">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-270"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-271">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-272">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-273">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-274">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97971-275">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="97971-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-276">下面的示例枚举 C:\Program Files 目录下的子目录，并使用 LINQ 查询返回在2009之前创建的所有目录的名称，方法是检查 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="97971-276">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="97971-277">如果只需要子目录的名称，请使用静态 <xref:System.IO.Directory> 类以提高性能。</span><span class="sxs-lookup"><span data-stu-id="97971-277">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="97971-278">有关示例，请参阅 <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="97971-278">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-279">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-279">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-280">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-280">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-281">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-281">The search string to match against the names of directories.</span></span>  <span data-ttu-id="97971-282">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-282">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="97971-283">返回与指定的搜索模式匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-283">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="97971-284">与 <paramref name="searchPattern" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-284">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-285">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-286">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-287">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-287">Wildcard specifier</span></span>|<span data-ttu-id="97971-288">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-289">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-289">\* (asterisk)</span></span>|<span data-ttu-id="97971-290">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-291">?</span><span class="sxs-lookup"><span data-stu-id="97971-291">?</span></span> <span data-ttu-id="97971-292">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-292">(question mark)</span></span>|<span data-ttu-id="97971-293">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-294">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-295">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-295">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-296">".</span><span class="sxs-lookup"><span data-stu-id="97971-296">".</span></span> <span data-ttu-id="97971-297">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-298"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-299">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-300">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-301">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-302">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97971-303">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="97971-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-304"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-304"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-305">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-305">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-306">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-306">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-307">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-307">The search string to match against the names of directories.</span></span>  <span data-ttu-id="97971-308">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-308">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="97971-309">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="97971-309">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="97971-310">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="97971-310">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="97971-311">返回与指定的搜索模式和搜索子目录选项匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-311">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="97971-312">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-312">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-313">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-313">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-314">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-314">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-315">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-315">Wildcard specifier</span></span>|<span data-ttu-id="97971-316">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-316">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-317">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-317">\* (asterisk)</span></span>|<span data-ttu-id="97971-318">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-318">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-319">?</span><span class="sxs-lookup"><span data-stu-id="97971-319">?</span></span> <span data-ttu-id="97971-320">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-320">(question mark)</span></span>|<span data-ttu-id="97971-321">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-321">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-322">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-322">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-323">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-323">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-324">".</span><span class="sxs-lookup"><span data-stu-id="97971-324">".</span></span> <span data-ttu-id="97971-325">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-325">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-326"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-326">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-327">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-327">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-328">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-328">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-329">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-329">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-330">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-330">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97971-331">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="97971-331">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-332">下面的示例从指定目录开始，使用此方法和 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 方法来枚举开始目录内的文件和目录，并显示大小超过 10 MB 的任何文件的详细信息。</span><span class="sxs-lookup"><span data-stu-id="97971-332">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-333"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-333"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="97971-334"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="97971-334"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-335">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-335">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-336">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-336">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-337">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-337">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-338">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-338">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="97971-339">当前目录中的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-339">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-340"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-340">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-341">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-341">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-342">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-342">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-343">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-343">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-344">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-344">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="97971-345">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="97971-345">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-346">下面的示例将枚举指定目录下的文件，并使用 LINQ 查询返回在2009之前创建的所有文件的名称，方法是检查 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="97971-346">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="97971-347">如果只需要这些文件的名称，请使用静态 <xref:System.IO.Directory> 类以获得更好的性能。</span><span class="sxs-lookup"><span data-stu-id="97971-347">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="97971-348">有关示例，请参阅 <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="97971-348">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="97971-349">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-349">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="97971-350">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-350">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-351">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-351">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-352">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-352">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-353">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-353">The search string to match against the names of files.</span></span>  <span data-ttu-id="97971-354">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-354">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="97971-355">返回与搜索模式匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-355">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="97971-356">与 <paramref name="searchPattern" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-356">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-357">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-357">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-358">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-358">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-359">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-359">Wildcard specifier</span></span>|<span data-ttu-id="97971-360">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-360">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-361">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-361">\* (asterisk)</span></span>|<span data-ttu-id="97971-362">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-362">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-363">?</span><span class="sxs-lookup"><span data-stu-id="97971-363">?</span></span> <span data-ttu-id="97971-364">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-364">(question mark)</span></span>|<span data-ttu-id="97971-365">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-365">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-366">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-366">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-367">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-367">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-368">".</span><span class="sxs-lookup"><span data-stu-id="97971-368">".</span></span> <span data-ttu-id="97971-369">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-369">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-370"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-370">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-371">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-371">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-372">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-372">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-373">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-373">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-374">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-374">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="97971-375">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="97971-375">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-376">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-376">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="97971-377">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-377">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-378"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-378"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-379">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-379">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-380">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-380">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-381">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-381">The search string to match against the names of files.</span></span>  <span data-ttu-id="97971-382">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-382">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="97971-383">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="97971-383">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="97971-384">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="97971-384">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="97971-385">返回与指定的搜索模式和搜索子目录选项匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-385">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="97971-386">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-386">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-387">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-387">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-388">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-388">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-389">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-389">Wildcard specifier</span></span>|<span data-ttu-id="97971-390">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-390">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-391">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-391">\* (asterisk)</span></span>|<span data-ttu-id="97971-392">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-392">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-393">?</span><span class="sxs-lookup"><span data-stu-id="97971-393">?</span></span> <span data-ttu-id="97971-394">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-394">(question mark)</span></span>|<span data-ttu-id="97971-395">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-395">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-396">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-396">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-397">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-397">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-398">".</span><span class="sxs-lookup"><span data-stu-id="97971-398">".</span></span> <span data-ttu-id="97971-399">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-399">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-400"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-400">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-401">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-401">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-402">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-402">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-403">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-403">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-404">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-404">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="97971-405">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="97971-405">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-406">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-406">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="97971-407">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-407">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-408"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-408"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="97971-409"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="97971-409"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-410">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-410">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-411">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-411">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-412">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-412">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-413">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-413">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="97971-414">当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-414">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-415"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-415">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-416">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-416">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-417">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-417">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-418">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-418">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-419">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-419">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97971-420">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="97971-420">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-421">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-421">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-422">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-422">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-423">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-423">The search string to match against the names of directories.</span></span>  <span data-ttu-id="97971-424">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-424">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="97971-425">返回与指定的搜索模式匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-425">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="97971-426">与 <paramref name="searchPattern" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-426">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-427">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-427">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-428">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-428">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-429">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-429">Wildcard specifier</span></span>|<span data-ttu-id="97971-430">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-430">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-431">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-431">\* (asterisk)</span></span>|<span data-ttu-id="97971-432">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-432">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-433">?</span><span class="sxs-lookup"><span data-stu-id="97971-433">?</span></span> <span data-ttu-id="97971-434">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-434">(question mark)</span></span>|<span data-ttu-id="97971-435">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-435">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-436">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-436">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-437">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-437">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-438">".</span><span class="sxs-lookup"><span data-stu-id="97971-438">".</span></span> <span data-ttu-id="97971-439">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-439">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-440"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-440">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-441">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-441">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-442">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-442">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-443">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-443">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-444">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-444">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97971-445">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="97971-445">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-446"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-446"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-447">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-447">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-448">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-448">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-449">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-449">The search string to match against the names of directories.</span></span>  <span data-ttu-id="97971-450">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-450">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="97971-451">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="97971-451">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="97971-452">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="97971-452">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="97971-453">返回与指定的搜索模式和搜索子目录选项匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-453">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="97971-454">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="97971-454">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-455">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-455">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-456">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-456">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-457">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-457">Wildcard specifier</span></span>|<span data-ttu-id="97971-458">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-458">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-459">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-459">\* (asterisk)</span></span>|<span data-ttu-id="97971-460">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-460">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-461">?</span><span class="sxs-lookup"><span data-stu-id="97971-461">?</span></span> <span data-ttu-id="97971-462">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-462">(question mark)</span></span>|<span data-ttu-id="97971-463">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-463">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-464">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-464">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-465">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-465">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-466">".</span><span class="sxs-lookup"><span data-stu-id="97971-466">".</span></span> <span data-ttu-id="97971-467">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-467">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-468"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-468">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-469">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-469">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-470">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-470">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-471">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-471">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-472">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-472">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="97971-473">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="97971-473">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-474"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-474"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="97971-475"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="97971-475"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-476">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-476">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-477">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-477">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97971-478">获取指示目录是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="97971-478">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="97971-479">如果目录存在，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="97971-479"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-480">如果在尝试确定指定文件是否存在时出现任何错误，则 <xref:System.IO.DirectoryInfo.Exists%2A> 属性返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="97971-480">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="97971-481">这种情况可能发生在引发异常的情况，例如，传递包含无效字符或太多字符的文件名、出现故障或缺失的磁盘，或者如果调用方没有读取文件的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-481">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-482">下面的示例演示在将源目录复制到目标目录的上下文中 `Exists` 属性的用法。</span><span class="sxs-lookup"><span data-stu-id="97971-482">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-483">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-483">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-484">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-484">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-485">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-485">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97971-486">获取目录的完整路径。</span><span class="sxs-lookup"><span data-stu-id="97971-486">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="97971-487">包含完整目录的字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-487">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-488">获取当前目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="97971-488">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-489">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="97971-489">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="97971-490">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-490">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-491">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="97971-491">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="97971-492">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装此目录的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="97971-492">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-493">调用此方法重载等效于调用 <xref:System.IO.Directory.GetAccessControl%2A> 方法重载，并 <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> 中指定访问控制部分（<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>）。</span><span class="sxs-lookup"><span data-stu-id="97971-493">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="97971-494">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="97971-494">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="97971-495">ACL 描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="97971-495">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="97971-496">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-496">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-497">下面的示例使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 和 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法在目录中添加并删除访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="97971-497">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="97971-498">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="97971-498">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="97971-499">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="97971-499">The directory is read-only.</span></span>  
  
 <span data-ttu-id="97971-500">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-500">-or-</span></span>  
  
 <span data-ttu-id="97971-501">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="97971-501">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="97971-502">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-502">-or-</span></span>  
  
 <span data-ttu-id="97971-503">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-503">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="97971-504">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="97971-504">An I/O error occurred while opening the directory.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="97971-505">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="97971-505">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-506">用于枚举目录的访问控制列表（ACL）的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-506">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="97971-507">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="97971-507">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="97971-508">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="97971-508">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="97971-509"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，它指定要接收的访问控制列表 (ACL) 信息的类型。</span><span class="sxs-lookup"><span data-stu-id="97971-509">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="97971-510">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的指定类型的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="97971-510">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="97971-511">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，它封装由 <paramref name="path" /> 参数描述的文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="97971-511">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="97971-512">异常</span><span class="sxs-lookup"><span data-stu-id="97971-512">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="97971-513">异常类型</span><span class="sxs-lookup"><span data-stu-id="97971-513">Exception type</span></span> 
 </term><description> <span data-ttu-id="97971-514">条件</span><span class="sxs-lookup"><span data-stu-id="97971-514">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="97971-515">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="97971-515">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="97971-516">当前进程不具有打开该目录的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-516">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="97971-517">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="97971-517">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> <span data-ttu-id="97971-518">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="97971-518">The current operating system is not Microsoft Windows 2000 or later.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="97971-519">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="97971-519">The directory is read-only.</span></span>  
  
<span data-ttu-id="97971-520">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-520">-or-</span></span> 
<span data-ttu-id="97971-521">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="97971-521">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="97971-522">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-522">-or-</span></span> 
<span data-ttu-id="97971-523">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-523">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-524">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="97971-524">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="97971-525">ACL 描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="97971-525">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="97971-526">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-526">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-527">用于枚举目录的访问控制列表（ACL）的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-527">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="97971-528">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="97971-528">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="97971-529">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="97971-529">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-530">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-530">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-531">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-531">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="97971-532">一个 <see cref="T:System.IO.DirectoryInfo" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="97971-532">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-533">如果没有子目录，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="97971-533">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="97971-534">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="97971-534">This method is not recursive.</span></span>  
  
 <span data-ttu-id="97971-535">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-535">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97971-536">下面的示例检索根目录中的所有目录，并显示目录名称。</span><span class="sxs-lookup"><span data-stu-id="97971-536">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-537">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效，例如，在未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="97971-537">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-538">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-538">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="97971-539">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-539">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-540">用于读取目录。</span><span class="sxs-lookup"><span data-stu-id="97971-540">for reading directories.</span></span> <span data-ttu-id="97971-541">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="97971-541">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-542">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-542">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-543">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-543">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-544">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-544">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-545">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-545">The search string to match against the names of directories.</span></span>  <span data-ttu-id="97971-546">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-546">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="97971-547">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与给定搜索条件匹配的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-547">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="97971-548">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-548">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-549">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-549">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-550">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-550">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-551">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-551">Wildcard specifier</span></span>|<span data-ttu-id="97971-552">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-552">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-553">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-553">\* (asterisk)</span></span>|<span data-ttu-id="97971-554">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-554">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-555">?</span><span class="sxs-lookup"><span data-stu-id="97971-555">?</span></span> <span data-ttu-id="97971-556">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-556">(question mark)</span></span>|<span data-ttu-id="97971-557">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-557">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-558">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-558">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-559">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-559">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-560">".</span><span class="sxs-lookup"><span data-stu-id="97971-560">".</span></span> <span data-ttu-id="97971-561">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-561">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-562">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-562">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97971-563">下面的示例统计包含指定字母的路径中的目录。</span><span class="sxs-lookup"><span data-stu-id="97971-563">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-564"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="97971-564"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-565"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-565"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-566">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-566">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="97971-567">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-567">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-568">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="97971-568">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="97971-569">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="97971-569">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-570">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-570">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-571">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-571">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-572">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-572">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-573">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-573">The search string to match against the names of directories.</span></span>  <span data-ttu-id="97971-574">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-574">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="97971-575">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="97971-575">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="97971-576">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中目录的数组，该数组与给定的搜索条件匹配并使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-576">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="97971-577">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-577">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-578">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-578">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-579">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-579">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-580">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-580">Wildcard specifier</span></span>|<span data-ttu-id="97971-581">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-581">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-582">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-582">\* (asterisk)</span></span>|<span data-ttu-id="97971-583">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-583">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-584">?</span><span class="sxs-lookup"><span data-stu-id="97971-584">?</span></span> <span data-ttu-id="97971-585">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-585">(question mark)</span></span>|<span data-ttu-id="97971-586">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-586">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-587">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-587">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-588">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-588">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-589">".</span><span class="sxs-lookup"><span data-stu-id="97971-589">".</span></span> <span data-ttu-id="97971-590">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-590">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-591">如果没有子目录，或者没有与 `searchPattern` 参数匹配的子目录，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="97971-591">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97971-592">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-592">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97971-593">下面的示例列出了 "c：\\" 中以字母 "c" 开头的所有目录和文件。</span><span class="sxs-lookup"><span data-stu-id="97971-593">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-594"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="97971-594"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-595"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-595"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="97971-596"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="97971-596"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-597">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-597">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="97971-598">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-598">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-599">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="97971-599">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="97971-600">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="97971-600">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-601">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-601">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-602">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-602">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-603">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-603">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-604">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="97971-604">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-605">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="97971-605">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="97971-606"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-606">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-607"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-607">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-608">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-608">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-609">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-609">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-610">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-610">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-611">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="97971-611">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97971-612">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="97971-612">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="97971-613">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-613">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97971-614">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="97971-614">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="97971-615">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-615">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-616">路径无效（例如，路径位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-616">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-617">用于读取目录。</span><span class="sxs-lookup"><span data-stu-id="97971-617">for reading directories.</span></span> <span data-ttu-id="97971-618">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="97971-618">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-619">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-619">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-620">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-620">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-621">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-621">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-622">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-622">The search string to match against the names of files.</span></span>  <span data-ttu-id="97971-623">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-623">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="97971-624">返回当前目录中与给定的搜索模式匹配的文件列表。</span><span class="sxs-lookup"><span data-stu-id="97971-624">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="97971-625"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-625">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-626">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-626">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-627">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-627">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-628">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-628">Wildcard specifier</span></span>|<span data-ttu-id="97971-629">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-629">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-630">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-630">\* (asterisk)</span></span>|<span data-ttu-id="97971-631">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-631">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-632">?</span><span class="sxs-lookup"><span data-stu-id="97971-632">?</span></span> <span data-ttu-id="97971-633">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-633">(question mark)</span></span>|<span data-ttu-id="97971-634">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-634">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-635">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-635">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-636">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-636">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-637">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-637">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-638"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-638">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-639">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-639">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-640">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-640">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-641">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-641">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-642">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="97971-642">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97971-643">`searchPattern` 参数中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-643">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="97971-644">通配符</span><span class="sxs-lookup"><span data-stu-id="97971-644">Wildcard character</span></span>|<span data-ttu-id="97971-645">描述</span><span class="sxs-lookup"><span data-stu-id="97971-645">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="97971-646">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-646">Zero or more characters.</span></span>|  
|<span data-ttu-id="97971-647">?</span><span class="sxs-lookup"><span data-stu-id="97971-647">?</span></span>|<span data-ttu-id="97971-648">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-648">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="97971-649">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="97971-649">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="97971-650">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="97971-650">Wildcards are permitted.</span></span> <span data-ttu-id="97971-651">例如，`searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="97971-651">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="97971-652">`searchPattern` 字符串 "s\*" 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="97971-652">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="97971-653">如果没有文件，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="97971-653">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97971-654">在 `searchPattern` 中使用星号通配符（例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="97971-654">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="97971-655">文件扩展名正好为三个字符的 `searchPattern` 返回扩展名为三个或更多字符的文件，其中前三个字符与 `searchPattern`中指定的文件扩展名相匹配。</span><span class="sxs-lookup"><span data-stu-id="97971-655">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="97971-656">文件扩展名为一个、两个或三个以上的字符的 `searchPattern` 仅返回扩展名正好与 `searchPattern`中指定的文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-656">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="97971-657">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-657">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="97971-658">例如，如果一个目录中有两个文件，"file1" 和 "txtother"，则为 "file？" 的搜索模式。txt "仅返回第一个文件，而" file\*.txt "的搜索模式返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="97971-658">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97971-659">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1\*.txt" 的搜索模式可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="97971-659">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="97971-660">例如，使用搜索模式 "\*1\*.txt" 将返回 "longfilename"，因为等效的8.3 文件名格式为 "longf ~ 1 .txt"。</span><span class="sxs-lookup"><span data-stu-id="97971-660">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="97971-661">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-661">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97971-662">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="97971-662">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="97971-663">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-663">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-664"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="97971-664"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-665"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-665"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-666">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-666">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-667">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-667">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-668">用于访问路径和读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="97971-668">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="97971-669">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="97971-669">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-670">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-670">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-671">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-671">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-672">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-672">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-673">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-673">The search string to match against the names of files.</span></span>  <span data-ttu-id="97971-674">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-674">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="97971-675">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="97971-675">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="97971-676">返回当前目录的文件列表，该列表与给定的搜索模式匹配并且使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-676">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="97971-677"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-677">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-678"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="97971-678">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="97971-679">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="97971-679">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="97971-680">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="97971-680">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="97971-681">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="97971-681">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="97971-682">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="97971-682">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97971-683">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-683">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-684">通配符</span><span class="sxs-lookup"><span data-stu-id="97971-684">Wildcard character</span></span>|<span data-ttu-id="97971-685">描述</span><span class="sxs-lookup"><span data-stu-id="97971-685">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="97971-686">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-686">\* (asterisk)</span></span>|<span data-ttu-id="97971-687">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-687">Zero or more characters.</span></span>|  
|<span data-ttu-id="97971-688">?</span><span class="sxs-lookup"><span data-stu-id="97971-688">?</span></span> <span data-ttu-id="97971-689">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-689">(question mark)</span></span>|<span data-ttu-id="97971-690">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-690">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="97971-691">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="97971-691">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="97971-692">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="97971-692">Wildcards are permitted.</span></span> <span data-ttu-id="97971-693">例如，`searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="97971-693">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="97971-694">`searchPattern` 字符串 "s\*" 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="97971-694">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="97971-695">如果没有文件，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="97971-695">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97971-696">在 `searchPattern` 中使用星号通配符（例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="97971-696">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="97971-697">文件扩展名正好为三个字符的 `searchPattern` 返回扩展名为三个或更多字符的文件，其中前三个字符与 `searchPattern`中指定的文件扩展名相匹配。</span><span class="sxs-lookup"><span data-stu-id="97971-697">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="97971-698">文件扩展名为一个、两个或三个以上的字符的 `searchPattern` 仅返回扩展名正好与 `searchPattern`中指定的文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-698">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="97971-699">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-699">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="97971-700">例如，如果一个目录中有两个文件，"file1" 和 "txtother"，则为 "file？" 的搜索模式。txt "仅返回第一个文件，而" file\*.txt "的搜索模式返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="97971-700">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="97971-701">以下列表显示 `searchPattern` 参数的不同长度的行为：</span><span class="sxs-lookup"><span data-stu-id="97971-701">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="97971-702">"\* abc" 返回扩展名为 abc、. abcd、. abcde...z、. abcdef 的文件，依此类推。</span><span class="sxs-lookup"><span data-stu-id="97971-702">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="97971-703">"\* abcd" 仅返回扩展名为 abcd 的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-703">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="97971-704">"\* abcde...z" 只返回扩展名为 abcde...z 的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-704">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="97971-705">"\* abcdef" 只返回扩展名为 abcdef 的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-705">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97971-706">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1\*.txt" 的搜索模式可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="97971-706">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="97971-707">例如，使用搜索模式 "\*1\*.txt" 将返回 "longfilename"，因为等效的8.3 文件名格式为 "longf ~ 1 .txt"。</span><span class="sxs-lookup"><span data-stu-id="97971-707">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="97971-708">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-708">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97971-709">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="97971-709">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="97971-710">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-710">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-711"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="97971-711"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-712"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-712"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="97971-713"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="97971-713"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-714">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-714">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-715">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-715">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-716">用于访问路径和读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="97971-716">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="97971-717">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="97971-717">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-718">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-718">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-719">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-719">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-720">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-720">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97971-721">检索表示当前目录的文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-721">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-722">返回表示某个目录中所有文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-722">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="97971-723">强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-723">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-724">如果 <xref:System.IO.DirectoryInfo>中没有文件或目录，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="97971-724">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="97971-725">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="97971-725">This method is not recursive.</span></span>  
  
 <span data-ttu-id="97971-726">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="97971-726">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="97971-727">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="97971-727">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="97971-728">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-728">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97971-729">下面的示例对指定目录下的文件和目录进行计数。</span><span class="sxs-lookup"><span data-stu-id="97971-729">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-730">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-730">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-731">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-731">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-732">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-732">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-733">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-733">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-734">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-734">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="97971-735">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-735">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="97971-736">检索强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-736">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="97971-737">与搜索条件匹配的强类型 <see langword="FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-737">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-738">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-738">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-739">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-739">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-740">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-740">Wildcard specifier</span></span>|<span data-ttu-id="97971-741">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-741">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-742">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-742">\* (asterisk)</span></span>|<span data-ttu-id="97971-743">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-743">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-744">?</span><span class="sxs-lookup"><span data-stu-id="97971-744">?</span></span> <span data-ttu-id="97971-745">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-745">(question mark)</span></span>|<span data-ttu-id="97971-746">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-746">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-747">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-747">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-748">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-748">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-749">".</span><span class="sxs-lookup"><span data-stu-id="97971-749">".</span></span> <span data-ttu-id="97971-750">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-750">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-751">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="97971-751">This method is not recursive.</span></span>  
  
 <span data-ttu-id="97971-752">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="97971-752">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="97971-753">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="97971-753">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="97971-754">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="97971-754">Wild cards are permitted.</span></span> <span data-ttu-id="97971-755">例如，`searchPattern` 字符串 "\* t" 搜索 `path` 以字母 "t" 结尾的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="97971-755">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="97971-756">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="97971-756">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-757">如果将字符串 ".." 指定为有效目录名称的一部分（例如目录名称 "a."），则只能在 `searchPattern` 中使用该字符串。b "。</span><span class="sxs-lookup"><span data-stu-id="97971-757">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="97971-758">它不能用来向上移动目录层次结构。</span><span class="sxs-lookup"><span data-stu-id="97971-758">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="97971-759">如果没有文件或目录，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件或目录，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="97971-759">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="97971-760">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-760">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="97971-761">下面的示例计算与指定的搜索模式匹配的文件和目录。</span><span class="sxs-lookup"><span data-stu-id="97971-761">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-762"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="97971-762"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-763"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-763"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-764">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-764">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-765">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-765">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-766">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="97971-766">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="97971-767">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="97971-767">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-768">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-768">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-769">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-769">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-770">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-770">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern">To be added.</param>
        <param name="enumerationOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="97971-771">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="97971-771">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="97971-772">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-772">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="97971-773">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="97971-773">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="97971-774">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="97971-774">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="97971-775">检索 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="97971-775">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="97971-776">与搜索条件匹配的文件系统项的数组。</span><span class="sxs-lookup"><span data-stu-id="97971-776">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-777">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="97971-777">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="97971-778">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="97971-778">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="97971-779">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="97971-779">Wildcard specifier</span></span>|<span data-ttu-id="97971-780">匹配</span><span class="sxs-lookup"><span data-stu-id="97971-780">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="97971-781">\*（星号）</span><span class="sxs-lookup"><span data-stu-id="97971-781">\* (asterisk)</span></span>|<span data-ttu-id="97971-782">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-782">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="97971-783">?</span><span class="sxs-lookup"><span data-stu-id="97971-783">?</span></span> <span data-ttu-id="97971-784">（问号）</span><span class="sxs-lookup"><span data-stu-id="97971-784">(question mark)</span></span>|<span data-ttu-id="97971-785">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="97971-785">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="97971-786">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="97971-786">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="97971-787">例如，字符串 "\* t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-787">For example, the  string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="97971-788">".</span><span class="sxs-lookup"><span data-stu-id="97971-788">".</span></span> <span data-ttu-id="97971-789">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="97971-789">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="97971-790">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="97971-790">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="97971-791">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="97971-791">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="97971-792">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="97971-792">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-793"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="97971-793"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-794"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-794"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="97971-795"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="97971-795"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-796">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="97971-796">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-797">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-797">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="97971-798">要将此目录移动到的目标位置的名称和路径。</span><span class="sxs-lookup"><span data-stu-id="97971-798">The name and path to which to move this directory.</span></span> <span data-ttu-id="97971-799">目标不能是另一个具有相同名称的磁盘卷或目录。</span><span class="sxs-lookup"><span data-stu-id="97971-799">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="97971-800">它可以是你要将此目录作为子目录添加到某个现有目录。</span><span class="sxs-lookup"><span data-stu-id="97971-800">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="97971-801">将 <see cref="T:System.IO.DirectoryInfo" /> 实例及其内容移动到新路径。</span><span class="sxs-lookup"><span data-stu-id="97971-801">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-802">例如，如果尝试将 c:\mydir 移动到 c:\public，并且 c:\public 已存在，则此方法会引发 <xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="97971-802">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="97971-803">必须将 "c：\\\ 公用\\\mydir" 指定为 `destDirName` 参数，或指定新目录名称，如 "c：\\\newdir"。</span><span class="sxs-lookup"><span data-stu-id="97971-803">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="97971-804">此方法允许将目录移动到只读目录。</span><span class="sxs-lookup"><span data-stu-id="97971-804">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="97971-805">不会影响两个目录的读/写属性。</span><span class="sxs-lookup"><span data-stu-id="97971-805">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="97971-806">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-806">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-807">下面的示例演示如何移动目录。</span><span class="sxs-lookup"><span data-stu-id="97971-807">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-808"><paramref name="destDirName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-808"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97971-809"><paramref name="destDirName" /> 是一个空字符串 (''")。</span><span class="sxs-lookup"><span data-stu-id="97971-809"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="97971-810">尝试将目录移动到不同的卷。</span><span class="sxs-lookup"><span data-stu-id="97971-810">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="97971-811">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-811">-or-</span></span> 
 <span data-ttu-id="97971-812"><paramref name="destDirName" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="97971-812"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="97971-813">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-813">-or-</span></span> 
<span data-ttu-id="97971-814">你没有访问此路径的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-814">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="97971-815">- 或 -</span><span class="sxs-lookup"><span data-stu-id="97971-815">-or-</span></span> 
<span data-ttu-id="97971-816">要移动的目录和目标目录具有相同的名称。</span><span class="sxs-lookup"><span data-stu-id="97971-816">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-817">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-817">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="97971-818">找不到目标目录。</span><span class="sxs-lookup"><span data-stu-id="97971-818">The destination directory cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-819">用于读取和写入文件和目录以及访问目标目录。</span><span class="sxs-lookup"><span data-stu-id="97971-819">for reading and writing files and directories and for access to the destination directory.</span></span> <span data-ttu-id="97971-820">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="97971-820">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="97971-821">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="97971-821">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-822">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-822">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-823">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-823">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-824">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-824">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97971-825">获取此 <see cref="T:System.IO.DirectoryInfo" /> 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="97971-825">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="97971-826">目录名称。</span><span class="sxs-lookup"><span data-stu-id="97971-826">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-827">此 <xref:System.IO.DirectoryInfo.Name%2A> 属性仅返回目录的名称，如 "Bin"。</span><span class="sxs-lookup"><span data-stu-id="97971-827">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="97971-828">若要获取完整路径（例如 "c:\public\Bin"），请使用 <xref:System.IO.FileSystemInfo.FullName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="97971-828">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="97971-829"><xref:System.IO.DirectoryInfo> 的 <xref:System.IO.DirectoryInfo.Name%2A> 属性无需权限（除了对构造 <xref:System.IO.DirectoryInfo.Exists%2A>所需的目录的读取权限），但可以指定目录名称。</span><span class="sxs-lookup"><span data-stu-id="97971-829">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="97971-830">如果需要使用加密的安全名称将 <xref:System.IO.DirectoryInfo> 分发到受保护的目录，请为不受信任的代码使用创建虚拟目录。</span><span class="sxs-lookup"><span data-stu-id="97971-830">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="97971-831">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-831">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-832">下面的示例仅显示当前 `DirectoryInfo` 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="97971-832">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-833">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-833">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-834">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-834">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-835">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-835">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97971-836">获取指定的子目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="97971-836">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="97971-837">父目录; 如果路径为 null 或文件路径表示根（如 `\`、`C:\`或 `\\server\share`，则 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-837">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as `\`, `C:\`, or `\\server\share`).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="97971-838">在 .NET Framework 中，`Parent` 返回相对路径。</span><span class="sxs-lookup"><span data-stu-id="97971-838">In .NET Framework, `Parent` returns a relative path.</span></span>
> <span data-ttu-id="97971-839">在 .NET Core 中，`Parent` 返回完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="97971-839">In .NET Core, `Parent` returns a fully qualified path.</span></span>

<span data-ttu-id="97971-840">若要确保各个版本之间的行为一致，并使意向明确，请在 `Parent`返回的 <xref:System.IO.DirectoryInfo> 实例上检索以下某个属性的值。</span><span class="sxs-lookup"><span data-stu-id="97971-840">To ensure consistent behavior across versions and to make your intent explicit, retrieve the value of one of the following properties on the <xref:System.IO.DirectoryInfo> instance returned by `Parent`.</span></span>
- <span data-ttu-id="97971-841"><xref:System.IO.DirectoryInfo.Name>，它返回目录的简单名称（如 `bin`）。</span><span class="sxs-lookup"><span data-stu-id="97971-841"><xref:System.IO.DirectoryInfo.Name>, which returns the simple name of the directory (such as `bin`).</span></span>
- <span data-ttu-id="97971-842"><xref:System.IO.DirectoryInfo.FullName>，它返回目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="97971-842"><xref:System.IO.DirectoryInfo.FullName>, which returns the absolute path of the directory.</span></span> 


<span data-ttu-id="97971-843">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-843">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>


## Examples

<span data-ttu-id="97971-844">下面的示例引用指定目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="97971-844">The following example refers to the parent directory of a specified directory.</span></span>

[!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
[!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
[!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]

          ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-845">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-845">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-846">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="97971-846">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="97971-847">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、<see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="97971-847">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-848">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-848">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-849">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-849">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-850">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-850">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="97971-851">获取目录的根部分。</span><span class="sxs-lookup"><span data-stu-id="97971-851">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="97971-852">一个表示目录的根目录的对象。</span><span class="sxs-lookup"><span data-stu-id="97971-852">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97971-853">下面的示例显示指定目录的根位置。</span><span class="sxs-lookup"><span data-stu-id="97971-853">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="97971-854">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-854">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-855">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="97971-855">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="97971-856">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、<see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="97971-856">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-857">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-857">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-858">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-858">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-859">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-859">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="97971-860">一个对象，描述要应用于 <paramref name="path" /> 参数所描述的目录的 ACL 项。</span><span class="sxs-lookup"><span data-stu-id="97971-860">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="97971-861">将 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象所描述的访问控制列表 (ACL) 项应用于当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="97971-861">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97971-862">访问控制列表（ACL）描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="97971-862">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="97971-863">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="97971-863">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="97971-864"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法将 ACL 项应用于表示 noninherited ACL 列表的文件。</span><span class="sxs-lookup"><span data-stu-id="97971-864">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="97971-865">为 `directorySecurity` 指定的 ACL 将替换目录的现有 ACL。</span><span class="sxs-lookup"><span data-stu-id="97971-865">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="97971-866">若要为新用户添加权限，请使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法获取现有 ACL，并修改该 ACL。</span><span class="sxs-lookup"><span data-stu-id="97971-866">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="97971-867"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法仅保留在对象创建后修改的 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="97971-867">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="97971-868">如果 <xref:System.Security.AccessControl.DirectorySecurity> 对象尚未修改，则不会将其保存到文件中。</span><span class="sxs-lookup"><span data-stu-id="97971-868">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="97971-869">因此，无法从一个文件中检索 <xref:System.Security.AccessControl.DirectorySecurity> 的对象，并将相同的对象重新应用到另一个文件。</span><span class="sxs-lookup"><span data-stu-id="97971-869">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="97971-870">若要将 ACL 信息从一个文件复制到另一个文件：</span><span class="sxs-lookup"><span data-stu-id="97971-870">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="97971-871">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法可以从源文件中检索 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="97971-871">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="97971-872">为目标文件创建新的 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="97971-872">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="97971-873">使用源 <xref:System.Security.AccessControl.DirectorySecurity> 对象的 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> 或 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> 方法来检索 ACL 信息。</span><span class="sxs-lookup"><span data-stu-id="97971-873">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="97971-874">使用 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> 或 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> 方法将在步骤3中检索到的信息复制到目标 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="97971-874">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="97971-875">使用 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法将目标 <xref:System.Security.AccessControl.DirectorySecurity> 对象设置为目标文件。</span><span class="sxs-lookup"><span data-stu-id="97971-875">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97971-876">下面的示例使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 和 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法在目录中添加并删除访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="97971-876">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97971-877"><paramref name="directorySecurity" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="97971-877">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="97971-878">未能找到或修改该文件。</span><span class="sxs-lookup"><span data-stu-id="97971-878">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="97971-879">当前进程不具有打开该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-879">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="97971-880">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="97971-880">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="97971-881">用于枚举目录的访问控制列表（ACL）的权限。</span><span class="sxs-lookup"><span data-stu-id="97971-881">for permission to enumerate access control list (ACL) for a directory.</span></span> <span data-ttu-id="97971-882">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="97971-882">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="97971-883">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="97971-883">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97971-884">返回传递给 <see cref="T:System.IO.DirectoryInfo" /> 构造函数的原始路径。</span><span class="sxs-lookup"><span data-stu-id="97971-884">Returns the original path that was passed to the <see cref="T:System.IO.DirectoryInfo" /> constructor.</span></span> <span data-ttu-id="97971-885">使用 <see cref="P:System.IO.DirectoryInfo.FullName" /> 或 <see cref="P:System.IO.DirectoryInfo.Name" /> 属性作为完整路径或文件/目录名，而不是此方法。</span><span class="sxs-lookup"><span data-stu-id="97971-885">Use the <see cref="P:System.IO.DirectoryInfo.FullName" /> or <see cref="P:System.IO.DirectoryInfo.Name" /> properties for the full path or file/directory name instead of this method.</span></span></summary>
        <returns><span data-ttu-id="97971-886">用户所传递的原始路径。</span><span class="sxs-lookup"><span data-stu-id="97971-886">The original path that was passed by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="97971-887"><xref:System.IO.DirectoryInfo.ToString%2A> 方法返回的字符串表示传递到 <xref:System.IO.DirectoryInfo> 构造函数的路径。</span><span class="sxs-lookup"><span data-stu-id="97971-887">The string returned by the <xref:System.IO.DirectoryInfo.ToString%2A> method represents the path that was passed to the <xref:System.IO.DirectoryInfo> constructor.</span></span> <span data-ttu-id="97971-888">你应根据你的意图检索以下任一属性的值，而不是调用 `ToString` 方法：</span><span class="sxs-lookup"><span data-stu-id="97971-888">Instead of calling the `ToString` method, you should retrieve the value of either of the following properties, depending on your intent:</span></span>
> - <span data-ttu-id="97971-889"><xref:System.IO.DirectoryInfo.Name>，获取目录的名称，而不包含任何父路径信息。</span><span class="sxs-lookup"><span data-stu-id="97971-889"><xref:System.IO.DirectoryInfo.Name>, to get the name of the directory, without any parent path information.</span></span>
> - <span data-ttu-id="97971-890"><xref:System.IO.DirectoryInfo.FullName>，获取目录的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="97971-890"><xref:System.IO.DirectoryInfo.FullName>, to get the fully qualified path of the directory.</span></span>

          ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="97971-891">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="97971-891">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="97971-892">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="97971-892">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="97971-893">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="97971-893">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
