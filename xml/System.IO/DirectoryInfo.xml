<Type Name="DirectoryInfo" FullName="System.IO.DirectoryInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5205a327f40e6d4e37c451f4d85bac47f1b7b58" /><Meta Name="ms.sourcegitcommit" Value="81ab118287bf69d10df7204c332592eac20b1b60" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/11/2019" /><Meta Name="ms.locfileid" Value="74320764" /></Metadata><TypeSignature Language="C#" Value="public sealed class DirectoryInfo : System.IO.FileSystemInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DirectoryInfo extends System.IO.FileSystemInfo" />
  <TypeSignature Language="DocId" Value="T:System.IO.DirectoryInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectoryInfo&#xA;Inherits FileSystemInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectoryInfo sealed : System::IO::FileSystemInfo" />
  <TypeSignature Language="F#" Value="type DirectoryInfo = class&#xA;    inherit FileSystemInfo" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileSystemInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="47815-101">公开用于通过目录和子目录进行创建、移动和枚举的实例方法。</span><span class="sxs-lookup"><span data-stu-id="47815-101">Exposes instance methods for creating, moving, and enumerating through directories and subdirectories.</span></span> <span data-ttu-id="47815-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="47815-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-103">使用 <xref:System.IO.DirectoryInfo> 类执行典型操作，例如复制、移动、重命名、创建和删除目录。</span><span class="sxs-lookup"><span data-stu-id="47815-103">Use the <xref:System.IO.DirectoryInfo> class for typical operations such as copying, moving, renaming, creating, and deleting directories.</span></span>  
  
 <span data-ttu-id="47815-104">如果要多次重用某个对象，请考虑使用 <xref:System.IO.DirectoryInfo> 的实例方法而不是 <xref:System.IO.Directory> 类的相应静态方法，因为不一定需要安全检查。</span><span class="sxs-lookup"><span data-stu-id="47815-104">If you are going to reuse an object several times, consider using the instance method of <xref:System.IO.DirectoryInfo> instead of the corresponding static methods of the <xref:System.IO.Directory> class, because a security check will not always be necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47815-105">在接受路径作为输入字符串的成员中，该路径必须格式正确，否则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="47815-105">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="47815-106">例如，如果路径是完全限定的，但以空格开头，则不会在类的方法中剪裁路径。</span><span class="sxs-lookup"><span data-stu-id="47815-106">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="47815-107">因此，路径格式不正确，并引发异常。</span><span class="sxs-lookup"><span data-stu-id="47815-107">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="47815-108">同样，路径或路径的组合不能完全限定两次。</span><span class="sxs-lookup"><span data-stu-id="47815-108">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="47815-109">例如，在大多数情况下，"c：\temp c：\windows" 也会引发异常。</span><span class="sxs-lookup"><span data-stu-id="47815-109">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="47815-110">使用接受路径字符串的方法时，请确保路径格式正确。</span><span class="sxs-lookup"><span data-stu-id="47815-110">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="47815-111">在接受路径的成员中，路径可以引用文件或只引用目录。</span><span class="sxs-lookup"><span data-stu-id="47815-111">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="47815-112">指定的路径还可以引用服务器和共享名称的相对路径或通用命名约定（UNC）路径。</span><span class="sxs-lookup"><span data-stu-id="47815-112">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="47815-113">例如，以下所有内容都是可接受的路径：</span><span class="sxs-lookup"><span data-stu-id="47815-113">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="47815-114">"c：\\\MyDir\\" 中C#的 "\MyFile.txt" 或 "c:\MyDir\MyFile.txt" 中的 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="47815-114">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="47815-115">Visual Basic 中的 "c：\\C#\MyDir" 或 "c:\MyDir"。</span><span class="sxs-lookup"><span data-stu-id="47815-115">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="47815-116">Visual Basic 中的 "MyDir\\C#\MySubdir" 或 "MyDir\MySubDir"。</span><span class="sxs-lookup"><span data-stu-id="47815-116">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="47815-117">\\中的 "\\\\\\\MyServer\\C#\MyShare" 或 "Visual Basic \MyServer\MyShare"。</span><span class="sxs-lookup"><span data-stu-id="47815-117">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="47815-118">默认情况下，将向所有用户授予对新目录的完全读/写访问权限。</span><span class="sxs-lookup"><span data-stu-id="47815-118">By default, full read/write access to new directories is granted to all users.</span></span>  
  
 <span data-ttu-id="47815-119">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-119">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-120">下面的示例演示了 `DirectoryInfo` 类的一些主要成员。</span><span class="sxs-lookup"><span data-stu-id="47815-120">The following example demonstrates some of the main members of the `DirectoryInfo` class.</span></span>  
  
 [!code-cpp[DirInfo Class Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Class Example/CPP/dirinfo class example.cpp#1)]
 [!code-csharp[DirInfo Class Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Class Example/CS/dirinfo class example.cs#1)]
 [!code-vb[DirInfo Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Class Example/VB/dirinfo class example.vb#1)]  
  
 <span data-ttu-id="47815-121">下面的示例演示如何复制目录及其内容。</span><span class="sxs-lookup"><span data-stu-id="47815-121">The following example demonstrates how to copy a directory and its contents.</span></span>  
  
 [!code-csharp[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/cs/copydir.cs#1)]
 [!code-vb[IO.DirectoryInfo-CopyDir#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DirectoryInfo-CopyDir/vb/CopyDir.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.File" />
    <altmember cref="P:System.IO.FileSystemInfo.Attributes" />
    <altmember cref="T:System.IO.FileSystemWatcher" />
    <altmember cref="T:System.IO.Directory" />
    <altmember cref="T:System.IO.Path" />
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-122">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-122">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-123">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-123">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-124">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-124">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="47815-125">如何：对新建的数据文件进行读取和写入</span><span class="sxs-lookup"><span data-stu-id="47815-125">How to: Read and Write to a Newly Created Data File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryInfo (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectoryInfo(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.DirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="new System.IO.DirectoryInfo path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="47815-126">一个字符串，它指定要在其中创建 <see langword="DirectoryInfo" /> 的路径。</span><span class="sxs-lookup"><span data-stu-id="47815-126">A string specifying the path on which to create the <see langword="DirectoryInfo" />.</span></span></param>
        <summary><span data-ttu-id="47815-127">初始化指定路径上的 <see cref="T:System.IO.DirectoryInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="47815-127">Initializes a new instance of the <see cref="T:System.IO.DirectoryInfo" /> class on the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-128">此构造函数不检查目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="47815-128">This constructor does not check if a directory exists.</span></span> <span data-ttu-id="47815-129">此构造函数是用于在后续操作中访问磁盘的字符串的占位符。</span><span class="sxs-lookup"><span data-stu-id="47815-129">This constructor is a placeholder for a string that is used to access the disk in subsequent operations.</span></span>  
  
 <span data-ttu-id="47815-130">`path` 参数可以是文件名，包括通用命名约定（UNC）共享上的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-130">The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="47815-131">使用特定的区域性设置编译一组字符并使用不同的区域性设置检索这些相同的字符时，这些字符可能不是可解释，并且可能会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="47815-131">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="47815-132">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-132">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-133">下面的示例使用此构造函数创建指定的目录和子目录，并演示不能删除包含子目录的目录。</span><span class="sxs-lookup"><span data-stu-id="47815-133">The following example uses this constructor to create the specified directory and subdirectory, and demonstrates that a directory that contains subdirectories cannot be deleted.</span></span>  
  
 [!code-cpp[DirInfo Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Ctor/CPP/dirinfo ctor.cpp#1)]
 [!code-csharp[DirInfo Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Ctor/CS/dirinfo ctor.cs#1)]
 [!code-vb[DirInfo Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Ctor/VB/dirinfo ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-134"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-134"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-135">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-135">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-136"><paramref name="path" /> 包含无效字符，例如 "、&lt;、&gt; 或 |。</span><span class="sxs-lookup"><span data-stu-id="47815-136"><paramref name="path" /> contains invalid characters such as ", &lt;, &gt;, or |.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="47815-137">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="47815-137">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-138">用于读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="47815-138">for reading from files and directories.</span></span> <span data-ttu-id="47815-139">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="47815-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-140">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-140">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-141">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-141">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-142">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-142">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-143">创建目录。</span><span class="sxs-lookup"><span data-stu-id="47815-143">Creates a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create();" />
      <MemberSignature Language="F#" Value="member this.Create : unit -&gt; unit" Usage="directoryInfo.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-144">创建目录。</span><span class="sxs-lookup"><span data-stu-id="47815-144">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-145">如果该目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="47815-145">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="47815-146">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-146">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-147">下面的示例检查指定的目录是否存在，如果该目录不存在，则创建该目录，并删除该目录。</span><span class="sxs-lookup"><span data-stu-id="47815-147">The following example checks whether a specified directory exists, creates the directory if it does not exist, and deletes the directory.</span></span>  
  
 [!code-cpp[DirInfo Create#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Create/CPP/dirinfo create.cpp#1)]
 [!code-csharp[DirInfo Create#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Create/CS/dirinfo create.cs#1)]
 [!code-vb[DirInfo Create#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Create/VB/dirinfo create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="47815-148">无法创建目录。</span><span class="sxs-lookup"><span data-stu-id="47815-148">The directory cannot be created.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-149">用于写入文件。</span><span class="sxs-lookup"><span data-stu-id="47815-149">for writing files.</span></span> <span data-ttu-id="47815-150">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="47815-150">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-151">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-151">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-152">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-152">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-153">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-153">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.Create : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.Create directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="47815-154">要应用于此目录的访问控制。</span><span class="sxs-lookup"><span data-stu-id="47815-154">The access control to apply to the directory.</span></span></param>
        <summary><span data-ttu-id="47815-155">使用 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象创建目录。</span><span class="sxs-lookup"><span data-stu-id="47815-155">Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-156">使用此方法重载来创建具有访问控制的目录，因此在应用安全之前，无法访问该目录。</span><span class="sxs-lookup"><span data-stu-id="47815-156">Use this method overload to create a directory with access control, so there is no chance the directory can be accessed before security is applied.</span></span>  
  
 <span data-ttu-id="47815-157">如果该目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="47815-157">If the directory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="47815-158">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-158">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="47815-159"><paramref name="path" /> 指定的目录为只读或为非空。</span><span class="sxs-lookup"><span data-stu-id="47815-159">The directory specified by <paramref name="path" /> is read-only or is not empty.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="47815-160">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-160">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-161"><paramref name="path" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-161"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-162"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="47815-163">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="47815-163">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-164">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="47815-164">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="47815-165">试图创建只带冒号 (:) 字符的目录。</span><span class="sxs-lookup"><span data-stu-id="47815-165">Creating a directory with only the colon (:) character was attempted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-166">用于创建目录的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-166">for permission to create a directory.</span></span> <span data-ttu-id="47815-167">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="47815-167">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="47815-168">关联的枚举： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="47815-168">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSubdirectory">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-169">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-169">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="47815-170">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="47815-170">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSubdirectory (path As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="47815-171">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="47815-171">The specified path.</span></span> <span data-ttu-id="47815-172">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="47815-172">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <summary><span data-ttu-id="47815-173">在指定路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-173">Creates a subdirectory or subdirectories on the specified path.</span></span> <span data-ttu-id="47815-174">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="47815-174">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="47815-175">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="47815-175">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-176">将创建 `path` 中指定的任何和所有目录，除非 `path` 的某个部分无效。</span><span class="sxs-lookup"><span data-stu-id="47815-176">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="47815-177">`path` 参数指定目录路径而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="47815-177">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="47815-178">如果子目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="47815-178">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="47815-179">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-179">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-180">下面的示例演示如何创建子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-180">The following example demonstrates creating a subdirectory.</span></span> <span data-ttu-id="47815-181">在此示例中，创建的目录在创建后将被删除。</span><span class="sxs-lookup"><span data-stu-id="47815-181">In this example, the created directories are removed once created.</span></span> <span data-ttu-id="47815-182">因此，若要测试此示例，请在代码中注释掉删除行。</span><span class="sxs-lookup"><span data-stu-id="47815-182">Therefore, to test this sample, comment out the delete lines in the code.</span></span>  
  
 [!code-cpp[directoryinfocreatesub#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfocreatesub/CPP/directoryinfocreatesub.cpp#1)]
 [!code-csharp[directoryinfocreatesub#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfocreatesub/CS/directoryinfocreatesub.cs#1)]
 [!code-vb[directoryinfocreatesub#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfocreatesub/VB/directoryinfocreatesub.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-183"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="47815-183"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-184"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-184"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-185">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="47815-185">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="47815-186">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-186">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="47815-187">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-187">-or-</span></span> 
<span data-ttu-id="47815-188">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="47815-188">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="47815-189">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="47815-189">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-190">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="47815-190">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="47815-191">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-191">-or-</span></span> 
<span data-ttu-id="47815-192">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="47815-192">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="47815-193">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="47815-193">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="47815-194"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="47815-194"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-195">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="47815-195">for reading and writing files.</span></span> <span data-ttu-id="47815-196">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="47815-196">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-197">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-197">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-198">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-198">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-199">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-199">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateSubdirectory">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo CreateSubdirectory (string path, System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo CreateSubdirectory(string path, class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::DirectoryInfo ^ CreateSubdirectory(System::String ^ path, System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.CreateSubdirectory : string * System.Security.AccessControl.DirectorySecurity -&gt; System.IO.DirectoryInfo" Usage="directoryInfo.CreateSubdirectory (path, directorySecurity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="47815-200">指定的路径。</span><span class="sxs-lookup"><span data-stu-id="47815-200">The specified path.</span></span> <span data-ttu-id="47815-201">它不能是另一个磁盘卷或通用命名约定 (UNC) 名称。</span><span class="sxs-lookup"><span data-stu-id="47815-201">This cannot be a different disk volume or Universal Naming Convention (UNC) name.</span></span></param>
        <param name="directorySecurity"><span data-ttu-id="47815-202">要应用的安全性。</span><span class="sxs-lookup"><span data-stu-id="47815-202">The security to apply.</span></span></param>
        <summary><span data-ttu-id="47815-203">使用指定的安全性在指定的路径上创建一个或多个子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-203">Creates a subdirectory or subdirectories on the specified path with the specified security.</span></span> <span data-ttu-id="47815-204">指定路径可以是相对于 <see cref="T:System.IO.DirectoryInfo" /> 类的此实例的路径。</span><span class="sxs-lookup"><span data-stu-id="47815-204">The specified path can be relative to this instance of the <see cref="T:System.IO.DirectoryInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="47815-205">在 <paramref name="path" /> 中指定的最后一个目录。</span><span class="sxs-lookup"><span data-stu-id="47815-205">The last directory specified in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-206">将创建 `path` 中指定的任何和所有目录，除非 `path` 的某个部分无效。</span><span class="sxs-lookup"><span data-stu-id="47815-206">Any and all directories specified in `path` are created, unless some part of `path` is invalid.</span></span> <span data-ttu-id="47815-207">`path` 参数指定目录路径而不是文件路径。</span><span class="sxs-lookup"><span data-stu-id="47815-207">The `path` parameter specifies a directory path, not a file path.</span></span> <span data-ttu-id="47815-208">如果子目录已存在，则此方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="47815-208">If the subdirectory already exists, this method does nothing.</span></span>  
  
 <span data-ttu-id="47815-209">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-209">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-210"><paramref name="path" /> 未指定有效的文件路径或包含无效 <see langword="DirectoryInfo" /> 字符。</span><span class="sxs-lookup"><span data-stu-id="47815-210"><paramref name="path" /> does not specify a valid file path or contains invalid <see langword="DirectoryInfo" /> characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-211"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-211"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-212">指定的路径无效，例如位于未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="47815-212">The specified path is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="47815-213">无法创建子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-213">The subdirectory cannot be created.</span></span>  
  
<span data-ttu-id="47815-214">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-214">-or-</span></span> 
<span data-ttu-id="47815-215">文件或目录已具有 <paramref name="path" /> 指定的名称。</span><span class="sxs-lookup"><span data-stu-id="47815-215">A file or directory already has the name specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="47815-216">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="47815-216">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-217">调用方没有代码访问权限来创建目录。</span><span class="sxs-lookup"><span data-stu-id="47815-217">The caller does not have code access permission to create the directory.</span></span>  
  
<span data-ttu-id="47815-218">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-218">-or-</span></span> 
<span data-ttu-id="47815-219">调用方没有代码访问权限来读取返回的 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="47815-219">The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.DirectoryInfo" /> object.</span></span>  <span data-ttu-id="47815-220">当 <paramref name="path" /> 参数描述现有目录时，会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="47815-220">This can occur when the <paramref name="path" /> parameter describes an existing directory.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="47815-221"><paramref name="path" /> 包含不是驱动器标签（“C:\\”）的一部分的冒号字符 (:)。</span><span class="sxs-lookup"><span data-stu-id="47815-221"><paramref name="path" /> contains a colon character (:) that is not part of a drive label ("C:\\").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-222">用于读取和写入文件。</span><span class="sxs-lookup"><span data-stu-id="47815-222">for reading and writing files.</span></span> <span data-ttu-id="47815-223">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="47815-223">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Delete">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-224">从路径中删除 <see cref="T:System.IO.DirectoryInfo" /> 及其内容。</span><span class="sxs-lookup"><span data-stu-id="47815-224">Deletes a <see cref="T:System.IO.DirectoryInfo" /> and its contents from a path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public override void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Delete();" />
      <MemberSignature Language="F#" Value="override this.Delete : unit -&gt; unit" Usage="directoryInfo.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-225">如果此 <see cref="T:System.IO.DirectoryInfo" /> 为空则将其删除。</span><span class="sxs-lookup"><span data-stu-id="47815-225">Deletes this <see cref="T:System.IO.DirectoryInfo" /> if it is empty.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-226">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-226">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-227">如果尝试删除不为空的目录，下面的示例将引发异常。</span><span class="sxs-lookup"><span data-stu-id="47815-227">The following example throws an exception if you attempt to delete a directory that is not empty.</span></span>  
  
 [!code-cpp[DirInfo Delete1#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo Delete1/CPP/dirinfo delete1.cpp#1)]
 [!code-csharp[DirInfo Delete1#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo Delete1/CS/dirinfo delete1.cs#1)]
 [!code-vb[DirInfo Delete1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo Delete1/VB/dirinfo delete1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="47815-228">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="47815-228">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-229">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="47815-229">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="47815-230">目录不为空。</span><span class="sxs-lookup"><span data-stu-id="47815-230">The directory is not empty.</span></span>  
  
<span data-ttu-id="47815-231">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-231">-or-</span></span> 
<span data-ttu-id="47815-232">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="47815-232">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="47815-233">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-233">-or-</span></span> 
<span data-ttu-id="47815-234">目录中存在开放句柄，并且操作系统是 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="47815-234">There is an open handle on the directory, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="47815-235">开放句柄可能产生自枚举目录。</span><span class="sxs-lookup"><span data-stu-id="47815-235">This open handle can result from enumerating directories.</span></span> <span data-ttu-id="47815-236">有关详细信息，请参阅[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-236">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-237">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-237">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-238">用于写入目录。</span><span class="sxs-lookup"><span data-stu-id="47815-238">for writing directories.</span></span> <span data-ttu-id="47815-239">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="47815-239">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-240">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-240">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-241">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-241">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-242">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-242">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.Delete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete (recursive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete(bool recursive);" />
      <MemberSignature Language="F#" Value="override this.Delete : bool -&gt; unit" Usage="directoryInfo.Delete recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive"><span data-ttu-id="47815-243">如果要删除此目录，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="47815-243"><see langword="true" /> to delete this directory, its subdirectories, and all files; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="47815-244">删除 <see cref="T:System.IO.DirectoryInfo" /> 的此实例，指定是否删除子目录和文件。</span><span class="sxs-lookup"><span data-stu-id="47815-244">Deletes this instance of a <see cref="T:System.IO.DirectoryInfo" />, specifying whether to delete subdirectories and files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-245">如果 `DirectoryInfo` 没有文件或子目录，则即使 `recursive` `false`，此方法也会删除 `DirectoryInfo`。</span><span class="sxs-lookup"><span data-stu-id="47815-245">If the `DirectoryInfo` has no files or subdirectories, this method deletes the `DirectoryInfo` even if `recursive` is `false`.</span></span> <span data-ttu-id="47815-246">当 `recursive` `false` 时，尝试删除不为空的 `DirectoryInfo` 将引发 <xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="47815-246">Attempting to delete a `DirectoryInfo` that is not empty when `recursive` is `false` throws an <xref:System.IO.IOException>.</span></span>  
  
 <span data-ttu-id="47815-247">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-247">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-248">下面的示例演示如何删除目录。</span><span class="sxs-lookup"><span data-stu-id="47815-248">The following example demonstrates deleting a directory.</span></span> <span data-ttu-id="47815-249">由于已删除该目录，因此请先注释掉 `Delete` 行，以测试该目录是否存在。</span><span class="sxs-lookup"><span data-stu-id="47815-249">Because the directory is removed, first comment out the `Delete` line to test that the directory exists.</span></span> <span data-ttu-id="47815-250">然后取消注释同一代码行，以测试目录是否已成功删除。</span><span class="sxs-lookup"><span data-stu-id="47815-250">Then uncomment the same line of code to test that the directory was removed successfully.</span></span>  
  
 [!code-cpp[directoryinfodelete#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfodelete/CPP/directoryinfodelete.cpp#1)]
 [!code-csharp[directoryinfodelete#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfodelete/CS/directoryinfodelete.cs#1)]
 [!code-vb[directoryinfodelete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfodelete/VB/directoryinfodelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="47815-251">该目录包含一个只读文件。</span><span class="sxs-lookup"><span data-stu-id="47815-251">The directory contains a read-only file.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-252">此 <see cref="T:System.IO.DirectoryInfo" /> 对象描述的目录不存在或找不到。</span><span class="sxs-lookup"><span data-stu-id="47815-252">The directory described by this <see cref="T:System.IO.DirectoryInfo" /> object does not exist or could not be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="47815-253">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="47815-253">The directory is read-only.</span></span>  
  
<span data-ttu-id="47815-254">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-254">-or-</span></span> 
<span data-ttu-id="47815-255">该目录包含一个或多个文件或子目录，且 <paramref name="recursive" /> 为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="47815-255">The directory contains one or more files or subdirectories and <paramref name="recursive" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="47815-256">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-256">-or-</span></span> 
<span data-ttu-id="47815-257">该目录是应用程序的当前工作目录。</span><span class="sxs-lookup"><span data-stu-id="47815-257">The directory is the application's current working directory.</span></span>  
  
<span data-ttu-id="47815-258">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-258">-or-</span></span> 
<span data-ttu-id="47815-259">目录或目录的一个文件存在开放句柄，并且操作系统为 Windows XP 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="47815-259">There is an open handle on the directory or on one of its files, and the operating system is Windows XP or earlier.</span></span> <span data-ttu-id="47815-260">枚举目录和文件可能会导致此开放句柄出现。</span><span class="sxs-lookup"><span data-stu-id="47815-260">This open handle can result from enumerating directories and files.</span></span> <span data-ttu-id="47815-261">有关详细信息，请参阅[如何：枚举目录和文件](~/docs/standard/io/how-to-enumerate-directories-and-files.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-261">For more information, see [How to: Enumerate Directories and Files](~/docs/standard/io/how-to-enumerate-directories-and-files.md).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-262">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-262">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermissionAccess"><span data-ttu-id="47815-263">写入要删除的 <see langword="DirectoryInfo" /> 和子目录的权限需要写入标志。</span><span class="sxs-lookup"><span data-stu-id="47815-263">Write flag required for write permission to the <see langword="DirectoryInfo" /> and subdirectories to be deleted.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-264">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-264">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-265">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-265">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-266">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-266">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-267">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-267">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories () As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories();" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : unit -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-268">返回当前目录中目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-268">Returns an enumerable collection of directory information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="47815-269">当前目录中目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-269">An enumerable collection of directories in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-270"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-270">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-271">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-271">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-272">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-272">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-273">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-273">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-274">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-274">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="47815-275">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-275">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-276">下面的示例枚举 C:\Program Files 目录下的子目录，并使用 LINQ 查询返回在2009之前创建的所有目录的名称，方法是检查 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="47815-276">The following example enumerates the subdirectories under the C:\Program Files directory and uses a LINQ query to return the names of all directories that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="47815-277">如果只需要子目录的名称，请使用静态 <xref:System.IO.Directory> 类以提高性能。</span><span class="sxs-lookup"><span data-stu-id="47815-277">If you only need the names of the subdirectories, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="47815-278">有关示例，请参阅 <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="47815-278">For an example, see the <xref:System.IO.Directory.EnumerateDirectories%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/cs/program.cs)]
 [!code-vb[System.IO.DirectoryInfo.EnumDirs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumdirs/vb/module1.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-279">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-279">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-280">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-280">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateDirectories (searchPattern As String) As IEnumerable(Of DirectoryInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-281">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-281">The search string to match against the names of directories.</span></span>  <span data-ttu-id="47815-282">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-282">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="47815-283">返回与指定的搜索模式匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-283">Returns an enumerable collection of directory information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="47815-284">与 <paramref name="searchPattern" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-284">An enumerable collection of directories that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-285">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-285">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-286">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-286">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-287">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-287">Wildcard specifier</span></span>|<span data-ttu-id="47815-288">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-288">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-289">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-289">\* (asterisk)</span></span>|<span data-ttu-id="47815-290">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-290">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-291">?</span><span class="sxs-lookup"><span data-stu-id="47815-291">?</span></span> <span data-ttu-id="47815-292">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-292">(question mark)</span></span>|<span data-ttu-id="47815-293">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-293">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-294">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-294">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-295">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-295">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-296">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-296">".</span></span> <span data-ttu-id="47815-297">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-297">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-298"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-298">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-299">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-299">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-300">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-300">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-301">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-301">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-302">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-302">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="47815-303">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-303">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-304"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-304"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-305">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-305">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-306">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-306">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-307">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-307">The search string to match against the names of directories.</span></span> <span data-ttu-id="47815-308">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-308">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="47815-309">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="47815-309">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="47815-310">返回与指定的搜索模式和枚举选项匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-310">Returns an enumerable collection of directory information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="47815-311">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-311">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-312">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-312">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-313">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-313">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-314">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-314">Wildcard specifier</span></span>|<span data-ttu-id="47815-315">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-315">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-316">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-316">\* (asterisk)</span></span>|<span data-ttu-id="47815-317">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-317">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-318">?</span><span class="sxs-lookup"><span data-stu-id="47815-318">?</span></span> <span data-ttu-id="47815-319">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-319">(question mark)</span></span>|<span data-ttu-id="47815-320">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-320">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-321">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-321">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-322">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-322">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-323">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-323">".</span></span> <span data-ttu-id="47815-324">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-324">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-325"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-325">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-326">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-326">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-327">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-327">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-328">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-328">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-329">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-329">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="47815-330">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-330">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-331"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-331"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-332">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-332">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-333">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-333">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateDirectories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt; EnumerateDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.DirectoryInfo&gt; EnumerateDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::DirectoryInfo ^&gt; ^ EnumerateDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateDirectories : string * System.IO.SearchOption -&gt; seq&lt;System.IO.DirectoryInfo&gt;" Usage="directoryInfo.EnumerateDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.DirectoryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-334">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-334">The search string to match against the names of directories.</span></span>  <span data-ttu-id="47815-335">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-335">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="47815-336">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="47815-336">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="47815-337">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="47815-337">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="47815-338">返回与指定的搜索模式和搜索子目录选项匹配的目录信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-338">Returns an enumerable collection of directory information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="47815-339">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的目录的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-339">An enumerable collection of directories that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-340">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-340">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-341">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-341">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-342">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-342">Wildcard specifier</span></span>|<span data-ttu-id="47815-343">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-343">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-344">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-344">\* (asterisk)</span></span>|<span data-ttu-id="47815-345">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-345">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-346">?</span><span class="sxs-lookup"><span data-stu-id="47815-346">?</span></span> <span data-ttu-id="47815-347">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-347">(question mark)</span></span>|<span data-ttu-id="47815-348">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-348">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-349">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-349">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-350">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-350">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-351">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-351">".</span></span> <span data-ttu-id="47815-352">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-352">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-353"><xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 和 <xref:System.IO.DirectoryInfo.GetDirectories%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-353">The <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> and <xref:System.IO.DirectoryInfo.GetDirectories%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-354">使用 <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.DirectoryInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-354">When you use <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>, you can start enumerating the collection of <xref:System.IO.DirectoryInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-355">使用 <xref:System.IO.DirectoryInfo.GetDirectories%2A>时，必须等待返回整个 <xref:System.IO.DirectoryInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-355">When you use <xref:System.IO.DirectoryInfo.GetDirectories%2A>, you must wait for the whole array of <xref:System.IO.DirectoryInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-356">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-356">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-357">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-357">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="47815-358">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-358">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on  the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-359">下面的示例从指定目录开始，使用此方法和 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 方法来枚举开始目录内的文件和目录，并显示大小超过 10 MB 的任何文件的详细信息。</span><span class="sxs-lookup"><span data-stu-id="47815-359">The following example, starting from a specified directory, uses this method and the <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> method to enumerate the files and directories within the start directory and display details of any files over 10 MB in size.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumerateDirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumeratedirectories/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-360"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-360"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47815-361"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="47815-361"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-362">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-362">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-363">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-363">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-364">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-364">Returns an enumerable collection of file information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles () As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : unit -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-365">返回当前目录中的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-365">Returns an enumerable collection of file information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="47815-366">当前目录中的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-366">An enumerable collection of the files in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-367"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-367">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-368">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-368">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-369">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-369">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-370">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-370">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-371">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-371">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="47815-372">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-372">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-373">下面的示例将枚举指定目录下的文件，并使用 LINQ 查询返回在2009之前创建的所有文件的名称，方法是检查 <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="47815-373">The following example enumerates the files under a specified directory and uses a LINQ query to return the names of all files that were created before 2009 by checking the value of the <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A> property.</span></span>  
  
 <span data-ttu-id="47815-374">如果只需要这些文件的名称，请使用静态 <xref:System.IO.Directory> 类以获得更好的性能。</span><span class="sxs-lookup"><span data-stu-id="47815-374">If you only need the names of the files, use the static <xref:System.IO.Directory> class for better performance.</span></span> <span data-ttu-id="47815-375">有关示例，请参阅 <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="47815-375">For an example, see the <xref:System.IO.Directory.EnumerateFiles%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program.cs#1)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module1.vb#1)]  
  
 <span data-ttu-id="47815-376">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-376">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="47815-377">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-377">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-378">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-378">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-379">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-379">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFiles (searchPattern As String) As IEnumerable(Of FileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-380">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-380">The search string to match against the names of files.</span></span>  <span data-ttu-id="47815-381">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-381">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="47815-382">返回与搜索模式匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-382">Returns an enumerable collection of file information that matches a search pattern.</span></span></summary>
        <returns><span data-ttu-id="47815-383">与 <paramref name="searchPattern" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-383">An enumerable collection of files that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-384">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-384">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-385">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-385">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-386">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-386">Wildcard specifier</span></span>|<span data-ttu-id="47815-387">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-387">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-388">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-388">\* (asterisk)</span></span>|<span data-ttu-id="47815-389">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-389">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-390">?</span><span class="sxs-lookup"><span data-stu-id="47815-390">?</span></span> <span data-ttu-id="47815-391">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-391">(question mark)</span></span>|<span data-ttu-id="47815-392">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-392">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-393">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-393">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-394">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-394">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-395">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-395">".</span></span> <span data-ttu-id="47815-396">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-396">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-397"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-397">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-398">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-398">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-399">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-399">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-400">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-400">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-401">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-401">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="47815-402">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-402">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-403">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-403">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="47815-404">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-404">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-405"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-405"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-406">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-406">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-407">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-407">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-408">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-408">The search string to match against the names of files.</span></span> <span data-ttu-id="47815-409">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-409">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="47815-410">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="47815-410">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="47815-411">返回与指定的搜索模式和枚举选项匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-411">Returns an enumerable collection of file information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="47815-412">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-412">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-413">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-413">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-414">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-414">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-415">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-415">Wildcard specifier</span></span>|<span data-ttu-id="47815-416">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-416">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-417">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-417">\* (asterisk)</span></span>|<span data-ttu-id="47815-418">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-418">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-419">?</span><span class="sxs-lookup"><span data-stu-id="47815-419">?</span></span> <span data-ttu-id="47815-420">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-420">(question mark)</span></span>|<span data-ttu-id="47815-421">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-421">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-422">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-422">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-423">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-423">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-424">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-424">".</span></span> <span data-ttu-id="47815-425">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-425">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-426"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-426">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-427">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-427">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-428">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-428">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-429">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-429">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-430">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-430">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="47815-431">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-431">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-432"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-432"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-433">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-433">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-434">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-434">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt; EnumerateFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileInfo&gt; EnumerateFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileInfo ^&gt; ^ EnumerateFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFiles : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileInfo&gt;" Usage="directoryInfo.EnumerateFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-435">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-435">The search string to match against the names of files.</span></span>  <span data-ttu-id="47815-436">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-436">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="47815-437">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="47815-437">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="47815-438">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="47815-438">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="47815-439">返回与指定的搜索模式和搜索子目录选项匹配的文件信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-439">Returns an enumerable collection of file information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="47815-440">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-440">An enumerable collection of files that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-441">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-441">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-442">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-442">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-443">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-443">Wildcard specifier</span></span>|<span data-ttu-id="47815-444">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-444">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-445">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-445">\* (asterisk)</span></span>|<span data-ttu-id="47815-446">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-446">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-447">?</span><span class="sxs-lookup"><span data-stu-id="47815-447">?</span></span> <span data-ttu-id="47815-448">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-448">(question mark)</span></span>|<span data-ttu-id="47815-449">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-449">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-450">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-450">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-451">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-451">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-452">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-452">".</span></span> <span data-ttu-id="47815-453">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-453">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-454"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-454">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-455">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-455">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-456">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-456">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-457">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-457">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-458">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-458">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
 <span data-ttu-id="47815-459">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-459">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-460">下面的示例演示如何使用不同的搜索选项枚举目录中的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-460">The following example shows how to enumerate files in a directory by using different search options.</span></span> <span data-ttu-id="47815-461">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-461">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/cs/program2.cs#2)]
 [!code-vb[System.IO.DirectoryInfo.EnumFiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.directoryinfo.enumfiles/vb/module2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-462"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-462"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47815-463"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="47815-463"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-464">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-464">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-465">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-465">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-466">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-466">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos () As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : unit -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-467">返回当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-467">Returns an enumerable collection of file system information in the current directory.</span></span></summary>
        <returns><span data-ttu-id="47815-468">当前目录中的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-468">An enumerable collection of file system information in the current directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-469"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-469">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-470">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-470">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-471">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-471">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-472">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-472">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-473">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-473">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="47815-474">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-474">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-475">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-475">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-476">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-476">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnumerateFileSystemInfos (searchPattern As String) As IEnumerable(Of FileSystemInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-477">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-477">The search string to match against the names of directories.</span></span>  <span data-ttu-id="47815-478">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-478">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="47815-479">返回与指定的搜索模式匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-479">Returns an enumerable collection of file system information that matches a specified search pattern.</span></span></summary>
        <returns><span data-ttu-id="47815-480">与 <paramref name="searchPattern" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-480">An enumerable collection of file system information objects that matches <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-481">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-481">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-482">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-482">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-483">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-483">Wildcard specifier</span></span>|<span data-ttu-id="47815-484">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-484">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-485">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-485">\* (asterisk)</span></span>|<span data-ttu-id="47815-486">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-486">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-487">?</span><span class="sxs-lookup"><span data-stu-id="47815-487">?</span></span> <span data-ttu-id="47815-488">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-488">(question mark)</span></span>|<span data-ttu-id="47815-489">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-489">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-490">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-490">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-491">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-491">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-492">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-492">".</span></span> <span data-ttu-id="47815-493">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-493">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-494"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-494">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-495">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-495">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-496">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-496">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-497">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-497">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-498">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-498">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="47815-499">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-499">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-500"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-500"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-501">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-501">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-502">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-502">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.EnumerationOptions -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-503">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-503">The search string to match against the names of directories.</span></span> <span data-ttu-id="47815-504">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-504">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="47815-505">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="47815-505">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="47815-506">返回与指定的搜索模式和枚举选项匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-506">Returns an enumerable collection of file system information that matches the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="47815-507">与 <paramref name="searchPattern" /> 和 <paramref name="enumerationOptions" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-507">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-508">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-508">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-509">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-509">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-510">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-510">Wildcard specifier</span></span>|<span data-ttu-id="47815-511">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-511">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-512">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-512">\* (asterisk)</span></span>|<span data-ttu-id="47815-513">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-513">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-514">?</span><span class="sxs-lookup"><span data-stu-id="47815-514">?</span></span> <span data-ttu-id="47815-515">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-515">(question mark)</span></span>|<span data-ttu-id="47815-516">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-516">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-517">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-517">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-518">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-518">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-519">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-519">".</span></span> <span data-ttu-id="47815-520">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-520">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-521"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-521">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-522">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-522">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-523">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-523">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-524">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-524">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-525">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-525">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="47815-526">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-526">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-527"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-527"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-528">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-528">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-529">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-529">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnumerateFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.FileSystemInfo&gt; EnumerateFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::FileSystemInfo ^&gt; ^ EnumerateFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.EnumerateFileSystemInfos : string * System.IO.SearchOption -&gt; seq&lt;System.IO.FileSystemInfo&gt;" Usage="directoryInfo.EnumerateFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.FileSystemInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-530">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-530">The search string to match against the names of directories.</span></span>  <span data-ttu-id="47815-531">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-531">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="47815-532">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="47815-532">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="47815-533">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="47815-533">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="47815-534">返回与指定的搜索模式和搜索子目录选项匹配的文件系统信息的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-534">Returns an enumerable collection of file system information that matches a specified search pattern and search subdirectory option.</span></span></summary>
        <returns><span data-ttu-id="47815-535">与 <paramref name="searchPattern" /> 和 <paramref name="searchOption" /> 匹配的文件系统信息对象的可枚举集合。</span><span class="sxs-lookup"><span data-stu-id="47815-535">An enumerable collection of file system information objects that matches <paramref name="searchPattern" /> and <paramref name="searchOption" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-536">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-536">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-537">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-537">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-538">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-538">Wildcard specifier</span></span>|<span data-ttu-id="47815-539">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-539">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-540">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-540">\* (asterisk)</span></span>|<span data-ttu-id="47815-541">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-541">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-542">?</span><span class="sxs-lookup"><span data-stu-id="47815-542">?</span></span> <span data-ttu-id="47815-543">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-543">(question mark)</span></span>|<span data-ttu-id="47815-544">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-544">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-545">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-545">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-546">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-546">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-547">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-547">".</span></span> <span data-ttu-id="47815-548">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-548">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-549"><xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 和 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-549">The <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> and <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-550">使用 <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileSystemInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-550">When you use <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>, you can start enumerating the collection of <xref:System.IO.FileSystemInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-551">使用 <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>时，必须等待返回整个 <xref:System.IO.FileSystemInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-551">When you use <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>, you must wait for the whole array of <xref:System.IO.FileSystemInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-552">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-552">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-553">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-553">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 <span data-ttu-id="47815-554">未缓存返回的集合;对集合的 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 方法的每个调用都将开始一个新的枚举。</span><span class="sxs-lookup"><span data-stu-id="47815-554">The returned collection is not cached; each call to the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method on the collection will start a new enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-555"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-555"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47815-556"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="47815-556"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-557">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-557">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-558">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-558">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public override bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Exists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="System.IO.DirectoryInfo.Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47815-559">获取指示目录是否存在的值。</span><span class="sxs-lookup"><span data-stu-id="47815-559">Gets a value indicating whether the directory exists.</span></span></summary>
        <value><span data-ttu-id="47815-560">如果目录存在，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="47815-560"><see langword="true" /> if the directory exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-561">如果在尝试确定指定文件是否存在时出现任何错误，则 <xref:System.IO.DirectoryInfo.Exists%2A> 属性返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="47815-561">The <xref:System.IO.DirectoryInfo.Exists%2A> property returns `false` if any error occurs while trying to determine if the specified file exists.</span></span> <span data-ttu-id="47815-562">这种情况可能发生在引发异常的情况，例如，传递包含无效字符或太多字符的文件名、出现故障或缺失的磁盘，或者如果调用方没有读取文件的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-562">This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-563">下面的示例演示在将源目录复制到目标目录的上下文中 `Exists` 属性的用法。</span><span class="sxs-lookup"><span data-stu-id="47815-563">The following example demonstrates a use of the `Exists` property in the context of copying a source directory to a target directory.</span></span>  
  
 [!code-cpp[DirectoryInfo Usage Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirectoryInfo Usage Example/CPP/copydirectory.cpp#1)]
 [!code-csharp[DirectoryInfo Usage Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirectoryInfo Usage Example/CS/copydirectory.cs#1)]
 [!code-vb[DirectoryInfo Usage Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirectoryInfo Usage Example/VB/copydirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-564">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-564">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-565">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-565">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-566">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-566">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.DirectoryInfo.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47815-567">获取目录的完整路径。</span><span class="sxs-lookup"><span data-stu-id="47815-567">Gets the full path of the directory.</span></span></summary>
        <value><span data-ttu-id="47815-568">包含完整目录的字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-568">A string containing the full path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessControl">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-569">获取当前目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="47815-569">Gets the access control list (ACL) entries for the current directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-570">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="47815-570">Use <xref:System.IO.DirectoryInfo.GetAccessControl%2A> methods to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="47815-571">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-571">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-572">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="47815-572">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="47815-573">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装此目录的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="47815-573">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-574">调用此方法重载等效于调用 <xref:System.IO.Directory.GetAccessControl%2A> 方法重载，并 <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> 中指定访问控制部分（<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>）。</span><span class="sxs-lookup"><span data-stu-id="47815-574">Calling this method overload is equivalent to calling the <xref:System.IO.Directory.GetAccessControl%2A> method overload and specifying the access control sections <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType> &#124; <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> (<xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>`Or`<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType> in Visual Basic).</span></span>  
  
 <span data-ttu-id="47815-575">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="47815-575">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="47815-576">ACL 描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="47815-576">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="47815-577">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-577">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-578">下面的示例使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 和 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法在目录中添加并删除访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="47815-578">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="47815-579">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="47815-579">The directory could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="47815-580">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="47815-580">The directory is read-only.</span></span>  
  
 <span data-ttu-id="47815-581">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-581">-or-</span></span>  
  
 <span data-ttu-id="47815-582">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="47815-582">This operation is not supported on the current platform.</span></span>  
  
 <span data-ttu-id="47815-583">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-583">-or-</span></span>  
  
 <span data-ttu-id="47815-584">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-584">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="47815-585">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="47815-585">An I/O error occurred while opening the directory.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="47815-586">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="47815-586">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-587">用于枚举目录的访问控制列表（ACL）的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-587">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="47815-588">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="47815-588">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="47815-589">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="47815-589">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.DirectorySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.DirectorySecurity GetAccessControl(valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl (includeSections As AccessControlSections) As DirectorySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::DirectorySecurity ^ GetAccessControl(System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="directoryInfo.GetAccessControl includeSections" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.DirectorySecurity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="includeSections"><span data-ttu-id="47815-590"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，它指定要接收的访问控制列表 (ACL) 信息的类型。</span><span class="sxs-lookup"><span data-stu-id="47815-590">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> values that specifies the type of access control list (ACL) information to receive.</span></span></param>
        <summary><span data-ttu-id="47815-591">获取一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，该对象封装当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录的指定类型的访问控制列表 (ACL) 项。</span><span class="sxs-lookup"><span data-stu-id="47815-591">Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="47815-592">一个 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象，它封装由 <paramref name="path" /> 参数描述的文件的访问控制规则。</span><span class="sxs-lookup"><span data-stu-id="47815-592">A <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object that encapsulates the access control rules for the file described by the <paramref name="path" /> parameter.</span></span>  
  
<span data-ttu-id="47815-593">异常</span><span class="sxs-lookup"><span data-stu-id="47815-593">Exceptions</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="47815-594">例外狀況類型</span><span class="sxs-lookup"><span data-stu-id="47815-594">Exception type</span></span> 
 </term><description> <span data-ttu-id="47815-595">条件</span><span class="sxs-lookup"><span data-stu-id="47815-595">Condition</span></span> 
 </description></listheader><item><term><see cref="T:System.SystemException" /></term><description> <span data-ttu-id="47815-596">未能找到或修改该目录。</span><span class="sxs-lookup"><span data-stu-id="47815-596">The directory could not be found or modified.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="47815-597">当前进程不具有打开该目录的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-597">The current process does not have access to open the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.IO.IOException" /></term><description> <span data-ttu-id="47815-598">打开目录时发生 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="47815-598">An I/O error occurred while opening the directory.</span></span>  
  
 </description></item><item><term><see cref="T:System.PlatformNotSupportedException" /></term><description> <span data-ttu-id="47815-599">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="47815-599">The current operating system is not Microsoft Windows 2000 or later.</span></span>  
  
 </description></item><item><term><see cref="T:System.UnauthorizedAccessException" /></term><description> <span data-ttu-id="47815-600">目录为只读。</span><span class="sxs-lookup"><span data-stu-id="47815-600">The directory is read-only.</span></span>  
  
<span data-ttu-id="47815-601">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-601">-or-</span></span> 
<span data-ttu-id="47815-602">当前平台不支持此操作。</span><span class="sxs-lookup"><span data-stu-id="47815-602">This operation is not supported on the current platform.</span></span>  
  
<span data-ttu-id="47815-603">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-603">-or-</span></span> 
<span data-ttu-id="47815-604">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-604">The caller does not have the required permission.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-605">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法检索当前文件的访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="47815-605">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the access control list (ACL) entries for the current file.</span></span>  
  
 <span data-ttu-id="47815-606">ACL 描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="47815-606">An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="47815-607">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-607">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-608">用于枚举目录的访问控制列表（ACL）的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-608">for permission to enumerate an access control list (ACL) for a directory.</span></span> <span data-ttu-id="47815-609">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="47815-609">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="47815-610">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="47815-610">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-611">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-611">Returns the subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories () As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : unit -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-612">返回当前目录的子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-612">Returns the subdirectories of the current directory.</span></span></summary>
        <returns><span data-ttu-id="47815-613"><see cref="T:System.IO.DirectoryInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-613">An array of <see cref="T:System.IO.DirectoryInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-614">如果没有子目录，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-614">If there are no subdirectories, this method returns an empty array.</span></span> <span data-ttu-id="47815-615">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="47815-615">This method is not recursive.</span></span>  
  
 <span data-ttu-id="47815-616">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-616">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="47815-617">下面的示例检索根目录中的所有目录，并显示目录名称。</span><span class="sxs-lookup"><span data-stu-id="47815-617">The following example retrieves all the directories in the root directory and displays the directory names.</span></span>  
  
 [!code-cpp[directoryinfogetdirectories#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfogetdirectories/CPP/directoryinfogetdirectories.cpp#1)]
 [!code-csharp[directoryinfogetdirectories#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetdirectories/CS/directoryinfogetdirectories.cs#1)]
 [!code-vb[directoryinfogetdirectories#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetdirectories/VB/directoryinfogetdirectories.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-618">封装在 <see cref="T:System.IO.DirectoryInfo" /> 对象中的路径无效，例如，在未映射的驱动器上。</span><span class="sxs-lookup"><span data-stu-id="47815-618">The path encapsulated in the <see cref="T:System.IO.DirectoryInfo" /> object is invalid, such as being on an unmapped drive.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-619">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-619">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="47815-620">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-620">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-621">用于读取目录。</span><span class="sxs-lookup"><span data-stu-id="47815-621">for reading directories.</span></span> <span data-ttu-id="47815-622">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="47815-622">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-623">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-623">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-624">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-624">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-625">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-625">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectories (searchPattern As String) As DirectoryInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-626">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-626">The search string to match against the names of directories.</span></span>  <span data-ttu-id="47815-627">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-627">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="47815-628">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与给定搜索条件匹配的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-628">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria.</span></span></summary>
        <returns><span data-ttu-id="47815-629">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-629">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-630">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-630">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-631">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-631">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-632">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-632">Wildcard specifier</span></span>|<span data-ttu-id="47815-633">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-633">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-634">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-634">\* (asterisk)</span></span>|<span data-ttu-id="47815-635">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-635">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-636">?</span><span class="sxs-lookup"><span data-stu-id="47815-636">?</span></span> <span data-ttu-id="47815-637">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-637">(question mark)</span></span>|<span data-ttu-id="47815-638">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-638">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-639">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-639">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-640">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-640">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-641">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-641">".</span></span> <span data-ttu-id="47815-642">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-642">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-643">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-643">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="47815-644">下面的示例统计包含指定字母的路径中的目录。</span><span class="sxs-lookup"><span data-stu-id="47815-644">The following example counts the directories in a path that contain the specified letter.</span></span>  
  
 [!code-cpp[DirInfo GetDirs2#1](~/samples/snippets/cpp/VS_Snippets_CLR/DirInfo GetDirs2/CPP/dirinfo getdirs2.cpp#1)]
 [!code-csharp[DirInfo GetDirs2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetDirs2/CS/dirinfo getdirs2.cs#1)]
 [!code-vb[DirInfo GetDirs2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetDirs2/VB/dirinfo getdirs2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-645"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-645"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-646"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-646"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-647">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-647">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="47815-648">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-648">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-649">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="47815-649">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="47815-650">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="47815-650">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-651">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-651">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-652">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-652">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-653">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-653">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.EnumerationOptions -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-654">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-654">The search string to match against the names of directories.</span></span> <span data-ttu-id="47815-655">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-655">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="47815-656">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="47815-656">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="47815-657">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中与指定的搜索模式和枚举选项匹配的目录的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-657">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="47815-658">与 <see langword="DirectoryInfo" /> 和 <paramref name="searchPattern" /> 匹配的 <paramref name="enumerationOptions" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-658">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-659">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-659">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-660">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-660">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-661">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-661">Wildcard specifier</span></span>|<span data-ttu-id="47815-662">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-662">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-663">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-663">\* (asterisk)</span></span>|<span data-ttu-id="47815-664">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-664">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-665">?</span><span class="sxs-lookup"><span data-stu-id="47815-665">?</span></span> <span data-ttu-id="47815-666">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-666">(question mark)</span></span>|<span data-ttu-id="47815-667">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-667">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-668">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-668">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-669">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-669">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-670">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-670">".</span></span> <span data-ttu-id="47815-671">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-671">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-672">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-672">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-673"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-673"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-674"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-674"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-675">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-675">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="47815-676">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-676">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo[] GetDirectories (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.DirectoryInfo[] GetDirectories(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::DirectoryInfo ^&gt; ^ GetDirectories(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetDirectories : string * System.IO.SearchOption -&gt; System.IO.DirectoryInfo[]" Usage="directoryInfo.GetDirectories (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-677">要与目录名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-677">The search string to match against the names of directories.</span></span>  <span data-ttu-id="47815-678">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-678">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="47815-679">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="47815-679">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="47815-680">返回当前 <see cref="T:System.IO.DirectoryInfo" /> 中目录的数组，该数组与给定的搜索条件匹配并使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-680">Returns an array of directories in the current <see cref="T:System.IO.DirectoryInfo" /> matching the given search criteria and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="47815-681">与 <see langword="DirectoryInfo" /> 匹配的 <paramref name="searchPattern" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-681">An array of type <see langword="DirectoryInfo" /> matching <paramref name="searchPattern" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-682">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-682">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-683">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-683">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-684">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-684">Wildcard specifier</span></span>|<span data-ttu-id="47815-685">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-685">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-686">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-686">\* (asterisk)</span></span>|<span data-ttu-id="47815-687">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-687">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-688">?</span><span class="sxs-lookup"><span data-stu-id="47815-688">?</span></span> <span data-ttu-id="47815-689">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-689">(question mark)</span></span>|<span data-ttu-id="47815-690">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-690">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-691">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-691">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-692">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-692">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-693">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-693">".</span></span> <span data-ttu-id="47815-694">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-694">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-695">如果没有子目录，或者没有与 `searchPattern` 参数匹配的子目录，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-695">If there are no subdirectories, or no subdirectories match the `searchPattern` parameter, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="47815-696">此方法预先填充以下 <xref:System.IO.DirectoryInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-696">This method pre-populates the values of the following <xref:System.IO.DirectoryInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="47815-697">下面的示例列出了 "c：\\" 中以字母 "c" 开头的所有目录和文件。</span><span class="sxs-lookup"><span data-stu-id="47815-697">The following example lists all of the directories and files that begin with the letter "c" in "c:\\".</span></span>  
  
 [!code-cpp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cpp/searchoption.cpp#00)]
 [!code-csharp[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/cs/searchoption.cs#00)]
 [!code-vb[System.IO.DirectoryInfo_SearchOptions#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.DirectoryInfo_SearchOptions/vb/searchoption.vb#00)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-698"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-698"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-699"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-699"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47815-700"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="47815-700"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-701">封装在 <see langword="DirectoryInfo" /> 对象中的路径无效（例如，在未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-701">The path encapsulated in the <see langword="DirectoryInfo" /> object is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="47815-702">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-702">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-703">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="47815-703">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="47815-704">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="47815-704">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-705">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-705">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-706">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-706">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-707">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-707">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-708">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="47815-708">Returns a file list from the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="member this.GetFiles : unit -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-709">返回当前目录的文件列表。</span><span class="sxs-lookup"><span data-stu-id="47815-709">Returns a file list from the current directory.</span></span></summary>
        <returns><span data-ttu-id="47815-710"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-710">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-711"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-711">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-712">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-712">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-713">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-713">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-714">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-714">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-715">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-715">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="47815-716">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="47815-716">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="47815-717">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-717">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="47815-718">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="47815-718">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="47815-719">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-719">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-720">路径无效（例如，路径位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-720">The path is invalid, such as being on an unmapped drive.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-721">用于读取目录。</span><span class="sxs-lookup"><span data-stu-id="47815-721">for reading directories.</span></span> <span data-ttu-id="47815-722">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="47815-722">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-723">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-723">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-724">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-724">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-725">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-725">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (searchPattern As String) As FileInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-726">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-726">The search string to match against the names of files.</span></span>  <span data-ttu-id="47815-727">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-727">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="47815-728">返回当前目录中与给定的搜索模式匹配的文件列表。</span><span class="sxs-lookup"><span data-stu-id="47815-728">Returns a file list from the current directory matching the given search pattern.</span></span></summary>
        <returns><span data-ttu-id="47815-729"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-729">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-730">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-730">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-731">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-731">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-732">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-732">Wildcard specifier</span></span>|<span data-ttu-id="47815-733">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-733">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-734">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-734">\* (asterisk)</span></span>|<span data-ttu-id="47815-735">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-735">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-736">?</span><span class="sxs-lookup"><span data-stu-id="47815-736">?</span></span> <span data-ttu-id="47815-737">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-737">(question mark)</span></span>|<span data-ttu-id="47815-738">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-738">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-739">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-739">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-740">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-740">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-741">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-741">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-742"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-742">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-743">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-743">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-744">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-744">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-745">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-745">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-746">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-746">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="47815-747">`searchPattern` 参数中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-747">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="47815-748">通配符</span><span class="sxs-lookup"><span data-stu-id="47815-748">Wildcard character</span></span>|<span data-ttu-id="47815-749">说明</span><span class="sxs-lookup"><span data-stu-id="47815-749">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="47815-750">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-750">Zero or more characters.</span></span>|  
|<span data-ttu-id="47815-751">?</span><span class="sxs-lookup"><span data-stu-id="47815-751">?</span></span>|<span data-ttu-id="47815-752">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-752">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="47815-753">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="47815-753">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="47815-754">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="47815-754">Wildcards are permitted.</span></span> <span data-ttu-id="47815-755">例如，`searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="47815-755">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="47815-756">`searchPattern` 字符串 "s\*" 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="47815-756">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="47815-757">如果没有文件，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-757">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47815-758">在 `searchPattern` 中使用星号通配符（例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="47815-758">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="47815-759">文件扩展名正好为三个字符的 `searchPattern` 返回扩展名为三个或更多字符的文件，其中前三个字符与 `searchPattern`中指定的文件扩展名相匹配。</span><span class="sxs-lookup"><span data-stu-id="47815-759">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="47815-760">文件扩展名为一个、两个或三个以上的字符的 `searchPattern` 仅返回扩展名正好与 `searchPattern`中指定的文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-760">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="47815-761">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-761">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="47815-762">例如，如果一个目录中有两个文件，"file1" 和 "txtother"，则为 "file？" 的搜索模式。txt "仅返回第一个文件，而" file\*.txt "的搜索模式返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="47815-762">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47815-763">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1\*.txt" 的搜索模式可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="47815-763">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="47815-764">例如，使用搜索模式 "\*1\*.txt" 将返回 "longfilename"，因为等效的8.3 文件名格式为 "longf ~ 1 .txt"。</span><span class="sxs-lookup"><span data-stu-id="47815-764">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="47815-765">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-765">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="47815-766">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="47815-766">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="47815-767">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-767">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-768"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-768"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-769"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-769"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-770">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-770">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-771">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-771">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-772">用于访问路径和读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="47815-772">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="47815-773">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="47815-773">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-774">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-774">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-775">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-775">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-776">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-776">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.EnumerationOptions -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-777">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-777">The search string to match against the names of files.</span></span> <span data-ttu-id="47815-778">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-778">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="47815-779">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="47815-779">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="47815-780">返回当前目录中与指定的搜索模式和枚举选项匹配的文件列表。</span><span class="sxs-lookup"><span data-stu-id="47815-780">Returns a file list from the current directory matching the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="47815-781">与 <see cref="T:System.IO.FileInfo" /> 和 <paramref name="searchPattern" /> 匹配的强类型化 <paramref name="enumerationOptions" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-781">An array of strongly typed <see cref="T:System.IO.FileInfo" /> objects that match <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-782">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-782">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-783">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-783">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-784">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-784">Wildcard specifier</span></span>|<span data-ttu-id="47815-785">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-785">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-786">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-786">\* (asterisk)</span></span>|<span data-ttu-id="47815-787">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-787">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-788">?</span><span class="sxs-lookup"><span data-stu-id="47815-788">?</span></span> <span data-ttu-id="47815-789">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-789">(question mark)</span></span>|<span data-ttu-id="47815-790">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-790">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-791">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-791">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-792">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-792">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-793">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-793">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-794"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-794">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-795">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-795">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-796">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-796">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-797">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-797">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-798">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-798">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="47815-799">`searchPattern` 参数中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-799">The following wildcard specifiers are permitted in the `searchPattern` parameter.</span></span>  
  
|<span data-ttu-id="47815-800">通配符</span><span class="sxs-lookup"><span data-stu-id="47815-800">Wildcard character</span></span>|<span data-ttu-id="47815-801">说明</span><span class="sxs-lookup"><span data-stu-id="47815-801">Description</span></span>|  
|------------------------|-----------------|  
|*|<span data-ttu-id="47815-802">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-802">Zero or more characters.</span></span>|  
|<span data-ttu-id="47815-803">?</span><span class="sxs-lookup"><span data-stu-id="47815-803">?</span></span>|<span data-ttu-id="47815-804">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-804">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="47815-805">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="47815-805">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="47815-806">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="47815-806">Wildcards are permitted.</span></span> <span data-ttu-id="47815-807">例如，`searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="47815-807">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="47815-808">`searchPattern` 字符串 "s\*" 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="47815-808">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="47815-809">如果没有文件，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-809">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47815-810">在 `searchPattern` 中使用星号通配符（例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="47815-810">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="47815-811">文件扩展名正好为三个字符的 `searchPattern` 返回扩展名为三个或更多字符的文件，其中前三个字符与 `searchPattern`中指定的文件扩展名相匹配。</span><span class="sxs-lookup"><span data-stu-id="47815-811">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="47815-812">文件扩展名为一个、两个或三个以上的字符的 `searchPattern` 仅返回扩展名正好与 `searchPattern`中指定的文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-812">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="47815-813">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-813">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="47815-814">例如，如果一个目录中有两个文件，"file1" 和 "txtother"，则为 "file？" 的搜索模式。txt "仅返回第一个文件，而" file\*.txt "的搜索模式返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="47815-814">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47815-815">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1\*.txt" 的搜索模式可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="47815-815">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="47815-816">例如，使用搜索模式 "\*1\*.txt" 将返回 "longfilename"，因为等效的8.3 文件名格式为 "longf ~ 1 .txt"。</span><span class="sxs-lookup"><span data-stu-id="47815-816">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="47815-817">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-817">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
-   <xref:System.IO.FileInfo.Length%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-818"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-818"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-819"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-819"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-820">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-820">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-821">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-821">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileInfo[] GetFiles (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileInfo[] GetFiles(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileInfo ^&gt; ^ GetFiles(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFiles : string * System.IO.SearchOption -&gt; System.IO.FileInfo[]" Usage="directoryInfo.GetFiles (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-822">要与文件名匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-822">The search string to match against the names of files.</span></span>  <span data-ttu-id="47815-823">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-823">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="47815-824">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="47815-824">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span></param>
        <summary><span data-ttu-id="47815-825">返回当前目录的文件列表，该列表与给定的搜索模式匹配并且使用某个值确定是否搜索子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-825">Returns a file list from the current directory matching the given search pattern and using a value to determine whether to search subdirectories.</span></span></summary>
        <returns><span data-ttu-id="47815-826"><see cref="T:System.IO.FileInfo" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-826">An array of type <see cref="T:System.IO.FileInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-827"><xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 和 <xref:System.IO.DirectoryInfo.GetFiles%2A> 方法的区别如下：</span><span class="sxs-lookup"><span data-stu-id="47815-827">The <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> and <xref:System.IO.DirectoryInfo.GetFiles%2A> methods differ as follows:</span></span>  
  
-   <span data-ttu-id="47815-828">使用 <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>时，可以在返回整个集合之前，开始枚举 <xref:System.IO.FileInfo> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="47815-828">When you use <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>, you can start enumerating the collection of <xref:System.IO.FileInfo> objects before the whole collection is returned.</span></span>  
  
-   <span data-ttu-id="47815-829">使用 <xref:System.IO.DirectoryInfo.GetFiles%2A>时，必须等待返回整个 <xref:System.IO.FileInfo> 对象数组，然后才能访问数组。</span><span class="sxs-lookup"><span data-stu-id="47815-829">When you use <xref:System.IO.DirectoryInfo.GetFiles%2A>, you must wait for the whole array of <xref:System.IO.FileInfo> objects to be returned before you can access the array.</span></span>  
  
 <span data-ttu-id="47815-830">因此，在处理多个文件和目录时，<xref:System.IO.DirectoryInfo.EnumerateFiles%2A> 可能更高效。</span><span class="sxs-lookup"><span data-stu-id="47815-830">Therefore, when you are working with many files and directories, <xref:System.IO.DirectoryInfo.EnumerateFiles%2A> can be more efficient.</span></span>  
  
 <span data-ttu-id="47815-831">如果 <xref:System.IO.DirectoryInfo>中没有文件，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-831">If there are no files in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="47815-832">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-832">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-833">通配符</span><span class="sxs-lookup"><span data-stu-id="47815-833">Wildcard character</span></span>|<span data-ttu-id="47815-834">说明</span><span class="sxs-lookup"><span data-stu-id="47815-834">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="47815-835">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-835">\* (asterisk)</span></span>|<span data-ttu-id="47815-836">零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-836">Zero or more characters.</span></span>|  
|<span data-ttu-id="47815-837">?</span><span class="sxs-lookup"><span data-stu-id="47815-837">?</span></span> <span data-ttu-id="47815-838">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-838">(question mark)</span></span>|<span data-ttu-id="47815-839">正好为零或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-839">Exactly zero or one character.</span></span>|  
  
 <span data-ttu-id="47815-840">不保证返回的文件名的顺序;如果需要特定的排序顺序，请使用 <xref:System.Array.Sort%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="47815-840">The order of the returned file names is not guaranteed; use the <xref:System.Array.Sort%2A> method if a specific sort order is required.</span></span>  
  
 <span data-ttu-id="47815-841">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="47815-841">Wildcards are permitted.</span></span> <span data-ttu-id="47815-842">例如，`searchPattern` 字符串 "\* .txt" 搜索扩展名为 "txt" 的所有文件名。</span><span class="sxs-lookup"><span data-stu-id="47815-842">For example, the `searchPattern` string "\*.txt" searches for all file names having an extension of "txt".</span></span> <span data-ttu-id="47815-843">`searchPattern` 字符串 "s\*" 搜索所有以字母 "s" 开头的文件名称。</span><span class="sxs-lookup"><span data-stu-id="47815-843">The `searchPattern` string "s\*" searches for all file names beginning with the letter "s".</span></span> <span data-ttu-id="47815-844">如果没有文件，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-844">If there are no files, or no files that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47815-845">在 `searchPattern` 中使用星号通配符（例如 "\* .txt"）时，匹配行为因指定文件扩展名的长度而异。</span><span class="sxs-lookup"><span data-stu-id="47815-845">When using the asterisk wildcard character in a `searchPattern` (for example, "\*.txt"), the matching behavior varies depending on the length of the specified file extension.</span></span> <span data-ttu-id="47815-846">文件扩展名正好为三个字符的 `searchPattern` 返回扩展名为三个或更多字符的文件，其中前三个字符与 `searchPattern`中指定的文件扩展名相匹配。</span><span class="sxs-lookup"><span data-stu-id="47815-846">A `searchPattern` with a file extension of exactly three characters returns files with an extension of three or more characters, where the first three characters match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="47815-847">文件扩展名为一个、两个或三个以上的字符的 `searchPattern` 仅返回扩展名正好与 `searchPattern`中指定的文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-847">A `searchPattern` with a file extension of one, two, or more than three characters returns only files with extensions of exactly that length that match the file extension specified in the `searchPattern`.</span></span> <span data-ttu-id="47815-848">使用问号通配符时，此方法只返回与指定文件扩展名匹配的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-848">When using the question mark wildcard character, this method returns only files that match the specified file extension.</span></span> <span data-ttu-id="47815-849">例如，如果一个目录中有两个文件，"file1" 和 "txtother"，则为 "file？" 的搜索模式。txt "仅返回第一个文件，而" file\*.txt "的搜索模式返回这两个文件。</span><span class="sxs-lookup"><span data-stu-id="47815-849">For example, given two files in a directory, "file1.txt" and "file1.txtother", a search pattern of "file?.txt" returns only the first file, while a search pattern of "file\*.txt" returns both files.</span></span>  
  
 <span data-ttu-id="47815-850">以下列表显示 `searchPattern` 参数的不同长度的行为：</span><span class="sxs-lookup"><span data-stu-id="47815-850">The following list shows the behavior of different lengths for the `searchPattern` parameter:</span></span>  
  
-   <span data-ttu-id="47815-851">"\* abc" 返回扩展名为 abc、. abcd、. abcde...z、. abcdef 的文件，依此类推。</span><span class="sxs-lookup"><span data-stu-id="47815-851">"\*.abc" returns files having an extension of.abc,.abcd,.abcde,.abcdef, and so on.</span></span>  
  
-   <span data-ttu-id="47815-852">"\* abcd" 仅返回扩展名为 abcd 的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-852">"\*.abcd" returns only files having an extension of.abcd.</span></span>  
  
-   <span data-ttu-id="47815-853">"\* abcde...z" 只返回扩展名为 abcde...z 的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-853">"\*.abcde" returns only files having an extension of.abcde.</span></span>  
  
-   <span data-ttu-id="47815-854">"\* abcdef" 只返回扩展名为 abcdef 的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-854">"\*.abcdef" returns only files having an extension of.abcdef.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47815-855">由于此方法使用8.3 文件名格式和长文件名格式的文件名进行检查，因此类似于 "\* 1\*.txt" 的搜索模式可能会返回意外的文件名。</span><span class="sxs-lookup"><span data-stu-id="47815-855">Because this method checks against file names with both the 8.3 file name format and the long file name format, a search pattern similar to "\*1\*.txt" may return unexpected file names.</span></span> <span data-ttu-id="47815-856">例如，使用搜索模式 "\*1\*.txt" 将返回 "longfilename"，因为等效的8.3 文件名格式为 "longf ~ 1 .txt"。</span><span class="sxs-lookup"><span data-stu-id="47815-856">For example, using a search pattern of "\*1\*.txt" will return "longfilename.txt" because the equivalent 8.3 file name format would be "longf~1.txt".</span></span>  
  
 <span data-ttu-id="47815-857">此方法预先填充以下 <xref:System.IO.FileInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-857">This method pre-populates the values of the following <xref:System.IO.FileInfo> properties:</span></span>  
  
1.  <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
2.  <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
3.  <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
4.  <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
5.  <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
6.  <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
7.  <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
8.  <xref:System.IO.FileInfo.Length%2A>  
  
   
  
## Examples  
 <span data-ttu-id="47815-858">下面的示例演示如何使用不同的搜索选项从目录中获取文件列表。</span><span class="sxs-lookup"><span data-stu-id="47815-858">The following example shows how to get a list of files from a directory by using different search options.</span></span> <span data-ttu-id="47815-859">该示例假设有一个目录，其中包含名为 log1.txt、log2、test1、test2、test3 和包含名为子文件的文件的子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-859">The example assumes a directory that has files named log1.txt, log2.txt, test1.txt, test2.txt, test3.txt, and a subdirectory that has a file named SubFile.txt.</span></span>  
  
 [!code-csharp[directoryinfogetfiles#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfogetfiles/CS/directoryinfogetfiles2.cs#2)]
 [!code-vb[directoryinfogetfiles#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfogetfiles/VB/directoryinfogetfiles2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-860"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-860"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-861"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-861"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47815-862"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="47815-862"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-863">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-863">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-864">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-864">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-865">用于访问路径和读取文件和目录。</span><span class="sxs-lookup"><span data-stu-id="47815-865">for access to the path and for reading from files and directories.</span></span> <span data-ttu-id="47815-866">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="47815-866">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-867">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-867">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-868">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-868">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-869">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-869">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileSystemInfos">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="47815-870">检索表示当前目录的文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-870">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing files and subdirectories of the current directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos () As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos();" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : unit -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-871">返回表示某个目录中所有文件和子目录的强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-871">Returns an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries representing all the files and subdirectories in a directory.</span></span></summary>
        <returns><span data-ttu-id="47815-872">强类型 <see cref="T:System.IO.FileSystemInfo" /> 项的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-872">An array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-873">如果 <xref:System.IO.DirectoryInfo>中没有文件或目录，则此方法返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-873">If there are no files or directories in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span> <span data-ttu-id="47815-874">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="47815-874">This method is not recursive.</span></span>  
  
 <span data-ttu-id="47815-875">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="47815-875">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="47815-876">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="47815-876">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="47815-877">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-877">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="47815-878">下面的示例对指定目录下的文件和目录进行计数。</span><span class="sxs-lookup"><span data-stu-id="47815-878">The following example counts the files and directories under the specified directory.</span></span>  
  
 [!code-csharp[FSizeSort#1](~/samples/snippets/csharp/VS_Snippets_CLR/FSizeSort/CS/fsizesort.cs#1)]
 [!code-vb[FSizeSort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FSizeSort/VB/fsizesort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-879">路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-879">The path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-880">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-880">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-881">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-881">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-882">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-882">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileSystemInfos (searchPattern As String) As FileSystemInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos searchPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-883">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-883">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="47815-884">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-884">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <summary><span data-ttu-id="47815-885">检索强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-885">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="47815-886">与搜索条件匹配的强类型 <see langword="FileSystemInfo" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-886">An array of strongly typed <see langword="FileSystemInfo" /> objects matching the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-887">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-887">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-888">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-888">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-889">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-889">Wildcard specifier</span></span>|<span data-ttu-id="47815-890">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-890">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-891">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-891">\* (asterisk)</span></span>|<span data-ttu-id="47815-892">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-892">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-893">?</span><span class="sxs-lookup"><span data-stu-id="47815-893">?</span></span> <span data-ttu-id="47815-894">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-894">(question mark)</span></span>|<span data-ttu-id="47815-895">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-895">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-896">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-896">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-897">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-897">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-898">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-898">".</span></span> <span data-ttu-id="47815-899">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-899">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-900">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="47815-900">This method is not recursive.</span></span>  
  
 <span data-ttu-id="47815-901">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="47815-901">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="47815-902">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="47815-902">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="47815-903">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="47815-903">Wild cards are permitted.</span></span> <span data-ttu-id="47815-904">例如，`searchPattern` 字符串 "\*t" 搜索 `path` 以字母 "t" 结尾的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="47815-904">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="47815-905">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="47815-905">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-906">如果将字符串 ".." 指定为有效目录名称的一部分（例如目录名称 "a."），则只能在 `searchPattern` 中使用该字符串。b "。</span><span class="sxs-lookup"><span data-stu-id="47815-906">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="47815-907">它不能用来向上移动目录层次结构。</span><span class="sxs-lookup"><span data-stu-id="47815-907">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="47815-908">如果没有文件或目录，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件或目录，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-908">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="47815-909">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-909">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
   
  
## Examples  
 <span data-ttu-id="47815-910">下面的示例计算与指定的搜索模式匹配的文件和目录。</span><span class="sxs-lookup"><span data-stu-id="47815-910">The following example counts the files and directories that match the specified search pattern.</span></span>  
  
 [!code-csharp[DirInfo GetFileSysInfos2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DirInfo GetFileSysInfos2/CS/dirinfo getfilesysinfos2.cs#1)]
 [!code-vb[DirInfo GetFileSysInfos2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DirInfo GetFileSysInfos2/VB/dirinfo getfilesysinfos2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-911"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-911"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-912"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-912"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-913">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-913">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-914">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-914">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-915">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="47815-915">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="47815-916">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="47815-916">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <altmember cref="T:System.IO.FileSystemInfo" />
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-917">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-917">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-918">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-918">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-919">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-919">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.EnumerationOptions enumerationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, class System.IO.EnumerationOptions enumerationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::EnumerationOptions ^ enumerationOptions);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.EnumerationOptions -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, enumerationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="enumerationOptions" Type="System.IO.EnumerationOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-920">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-920">The search string to match against the names of directories and files.</span></span> <span data-ttu-id="47815-921">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-921">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="enumerationOptions"><span data-ttu-id="47815-922">描述要使用的搜索和枚举配置的对象。</span><span class="sxs-lookup"><span data-stu-id="47815-922">An object that describes the search and enumeration configuration to use.</span></span></param>
        <summary><span data-ttu-id="47815-923">检索强类型 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，这些对象表示与指定的搜索模式和枚举选项匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-923">Retrieves an array of strongly typed <see cref="T:System.IO.FileSystemInfo" /> objects representing the files and subdirectories that match the specified search pattern and enumeration options.</span></span></summary>
        <returns><span data-ttu-id="47815-924">与 <see langword="FileSystemInfo" /> 和 <paramref name="searchPattern" /> 匹配的强类型 <paramref name="enumerationOptions" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-924">An array of strongly typed <see langword="FileSystemInfo" /> objects matching <paramref name="searchPattern" /> and <paramref name="enumerationOptions" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-925">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-925">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-926">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-926">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-927">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-927">Wildcard specifier</span></span>|<span data-ttu-id="47815-928">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-928">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-929">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-929">\* (asterisk)</span></span>|<span data-ttu-id="47815-930">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-930">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-931">?</span><span class="sxs-lookup"><span data-stu-id="47815-931">?</span></span> <span data-ttu-id="47815-932">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-932">(question mark)</span></span>|<span data-ttu-id="47815-933">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-933">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-934">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-934">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-935">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-935">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-936">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-936">".</span></span> <span data-ttu-id="47815-937">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-937">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-938">此方法不是递归的。</span><span class="sxs-lookup"><span data-stu-id="47815-938">This method is not recursive.</span></span>  
  
 <span data-ttu-id="47815-939">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="47815-939">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="47815-940">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="47815-940">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="47815-941">允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="47815-941">Wild cards are permitted.</span></span> <span data-ttu-id="47815-942">例如，`searchPattern` 字符串 "\*t" 搜索 `path` 以字母 "t" 结尾的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="47815-942">For example, the `searchPattern` string "\*t" searches for all directory names in `path` ending with the letter "t".</span></span> <span data-ttu-id="47815-943">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有目录名称。</span><span class="sxs-lookup"><span data-stu-id="47815-943">The `searchPattern` string "s\*" searches for all directory names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-944">如果将字符串 ".." 指定为有效目录名称的一部分（例如目录名称 "a."），则只能在 `searchPattern` 中使用该字符串。b "。</span><span class="sxs-lookup"><span data-stu-id="47815-944">The string ".." can only be used in `searchPattern` if it is specified as a part of a valid directory name, such as in the directory name "a..b".</span></span> <span data-ttu-id="47815-945">它不能用来向上移动目录层次结构。</span><span class="sxs-lookup"><span data-stu-id="47815-945">It cannot be used to move up the directory hierarchy.</span></span> <span data-ttu-id="47815-946">如果没有文件或目录，或者没有与 <xref:System.IO.DirectoryInfo>中的 `searchPattern` 字符串匹配的文件或目录，则此方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="47815-946">If there are no files or directories, or no files or directories that match the `searchPattern` string in the <xref:System.IO.DirectoryInfo>, this method returns an empty array.</span></span>  
  
 <span data-ttu-id="47815-947">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-947">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-948"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-948"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-949"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-949"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-950">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-950">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-951">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-951">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystemInfos">
      <MemberSignature Language="C#" Value="public System.IO.FileSystemInfo[] GetFileSystemInfos (string searchPattern, System.IO.SearchOption searchOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.FileSystemInfo[] GetFileSystemInfos(string searchPattern, valuetype System.IO.SearchOption searchOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileSystemInfo ^&gt; ^ GetFileSystemInfos(System::String ^ searchPattern, System::IO::SearchOption searchOption);" />
      <MemberSignature Language="F#" Value="member this.GetFileSystemInfos : string * System.IO.SearchOption -&gt; System.IO.FileSystemInfo[]" Usage="directoryInfo.GetFileSystemInfos (searchPattern, searchOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="searchOption" Type="System.IO.SearchOption" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="searchPattern"><span data-ttu-id="47815-952">要与目录和文件的名称匹配的搜索字符串。</span><span class="sxs-lookup"><span data-stu-id="47815-952">The search string to match against the names of directories and files.</span></span>  <span data-ttu-id="47815-953">此参数可以包含有效文本路径和通配符（\* 和 ?）的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-953">This parameter can contain a combination of valid literal path and wildcard (\* and ?) characters, but it doesn't support regular expressions.</span></span></param>
        <param name="searchOption"><span data-ttu-id="47815-954">指定搜索操作是应仅包含当前目录还是应包含所有子目录的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="47815-954">One of the enumeration values that specifies whether the search operation should include only the current directory or all subdirectories.</span></span> <span data-ttu-id="47815-955">默认值为 <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />。</span><span class="sxs-lookup"><span data-stu-id="47815-955">The default value is <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</span></span></param>
        <summary><span data-ttu-id="47815-956">检索 <see cref="T:System.IO.FileSystemInfo" /> 对象的数组，该数组表示与指定的搜索条件匹配的文件和子目录。</span><span class="sxs-lookup"><span data-stu-id="47815-956">Retrieves an array of <see cref="T:System.IO.FileSystemInfo" /> objects that represent the files and subdirectories matching the specified search criteria.</span></span></summary>
        <returns><span data-ttu-id="47815-957">与搜索条件匹配的文件系统项的数组。</span><span class="sxs-lookup"><span data-stu-id="47815-957">An array of file system entries that match the search criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-958">`searchPattern` 可以是文字和通配符的组合，但不支持正则表达式。</span><span class="sxs-lookup"><span data-stu-id="47815-958">`searchPattern` can be a combination of literal and wildcard characters, but it doesn't support regular expressions.</span></span> <span data-ttu-id="47815-959">`searchPattern`中允许使用以下通配符说明符。</span><span class="sxs-lookup"><span data-stu-id="47815-959">The following wildcard specifiers are permitted in `searchPattern`.</span></span>  
  
|<span data-ttu-id="47815-960">通配符说明符</span><span class="sxs-lookup"><span data-stu-id="47815-960">Wildcard specifier</span></span>|<span data-ttu-id="47815-961">匹配</span><span class="sxs-lookup"><span data-stu-id="47815-961">Matches</span></span>|  
|------------------------|-------------|  
|<span data-ttu-id="47815-962">\* （星号）</span><span class="sxs-lookup"><span data-stu-id="47815-962">\* (asterisk)</span></span>|<span data-ttu-id="47815-963">此位置中的零个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-963">Zero or more characters in that position.</span></span>|  
|<span data-ttu-id="47815-964">?</span><span class="sxs-lookup"><span data-stu-id="47815-964">?</span></span> <span data-ttu-id="47815-965">（问号）</span><span class="sxs-lookup"><span data-stu-id="47815-965">(question mark)</span></span>|<span data-ttu-id="47815-966">此位置中的零个或一个字符。</span><span class="sxs-lookup"><span data-stu-id="47815-966">Zero or one character in that position.</span></span>|  
  
 <span data-ttu-id="47815-967">通配符以外的字符为原义字符。</span><span class="sxs-lookup"><span data-stu-id="47815-967">Characters other than the wildcard are literal characters.</span></span> <span data-ttu-id="47815-968">例如，字符串 "\*t" 搜索以字母 "t" 结尾的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-968">For example, the string "\*t" searches for all names in  ending with the letter "t".</span></span> <span data-ttu-id="47815-969">也即“”。</span><span class="sxs-lookup"><span data-stu-id="47815-969">".</span></span> <span data-ttu-id="47815-970">`searchPattern` 字符串 "s\*" 搜索 `path` 以字母 "s" 开头的所有名称。</span><span class="sxs-lookup"><span data-stu-id="47815-970">The `searchPattern` string "s\*" searches for all names in `path` beginning with the letter "s".</span></span>  
  
 <span data-ttu-id="47815-971">对于子目录，此方法返回的 <xref:System.IO.FileSystemInfo> 对象可以转换为派生类 <xref:System.IO.DirectoryInfo>。</span><span class="sxs-lookup"><span data-stu-id="47815-971">For subdirectories, the <xref:System.IO.FileSystemInfo> objects returned by this method can be cast to the derived class <xref:System.IO.DirectoryInfo>.</span></span> <span data-ttu-id="47815-972">使用 <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> 属性返回的 <xref:System.IO.FileAttributes> 值来确定 <xref:System.IO.FileSystemInfo> 是表示文件还是目录。</span><span class="sxs-lookup"><span data-stu-id="47815-972">Use the <xref:System.IO.FileAttributes> value returned by the <xref:System.IO.FileSystemInfo.Attributes%2A?displayProperty=nameWithType> property to determine whether the <xref:System.IO.FileSystemInfo> represents a file or a directory.</span></span>  
  
 <span data-ttu-id="47815-973">此方法预先填充以下 <xref:System.IO.FileSystemInfo> 属性的值：</span><span class="sxs-lookup"><span data-stu-id="47815-973">This method pre-populates the values of the following <xref:System.IO.FileSystemInfo> properties:</span></span>  
  
-   <xref:System.IO.FileSystemInfo.Attributes%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.CreationTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTime%2A>  
  
-   <xref:System.IO.FileSystemInfo.LastWriteTimeUtc%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-974"><paramref name="searchPattern" /> 包含一个或多个 <see cref="M:System.IO.Path.GetInvalidPathChars" /> 方法定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="47815-974"><paramref name="searchPattern" /> contains one or more invalid characters defined by the <see cref="M:System.IO.Path.GetInvalidPathChars" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-975"><paramref name="searchPattern" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-975"><paramref name="searchPattern" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="47815-976"><paramref name="searchOption" /> 不是有效的 <see cref="T:System.IO.SearchOption" /> 值。</span><span class="sxs-lookup"><span data-stu-id="47815-976"><paramref name="searchOption" /> is not a valid <see cref="T:System.IO.SearchOption" /> value.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-977">指定的路径无效（例如，它位于未映射的驱动器上）。</span><span class="sxs-lookup"><span data-stu-id="47815-977">The specified path is invalid (for example, it is on an unmapped drive).</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-978">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-978">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (string destDirName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(string destDirName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.MoveTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (destDirName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::String ^ destDirName);" />
      <MemberSignature Language="F#" Value="member this.MoveTo : string -&gt; unit" Usage="directoryInfo.MoveTo destDirName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destDirName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destDirName"><span data-ttu-id="47815-979">要将此目录移动到的目标位置的名称和路径。</span><span class="sxs-lookup"><span data-stu-id="47815-979">The name and path to which to move this directory.</span></span> <span data-ttu-id="47815-980">目标不能是另一个具有相同名称的磁盘卷或目录。</span><span class="sxs-lookup"><span data-stu-id="47815-980">The destination cannot be another disk volume or a directory with the identical name.</span></span> <span data-ttu-id="47815-981">它可以是你要将此目录作为子目录添加到某个现有目录。</span><span class="sxs-lookup"><span data-stu-id="47815-981">It can be an existing directory to which you want to add this directory as a subdirectory.</span></span></param>
        <summary><span data-ttu-id="47815-982">将 <see cref="T:System.IO.DirectoryInfo" /> 实例及其内容移动到新路径。</span><span class="sxs-lookup"><span data-stu-id="47815-982">Moves a <see cref="T:System.IO.DirectoryInfo" /> instance and its contents to a new path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-983">例如，如果尝试将 c:\mydir 移动到 c:\public，并且 c:\public 已存在，则此方法会引发 <xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="47815-983">This method throws an <xref:System.IO.IOException> if, for example, you try to move c:\mydir to c:\public, and c:\public already exists.</span></span> <span data-ttu-id="47815-984">必须将 "c：\\\ 公用\\\mydir" 指定为 `destDirName` 参数，或指定新目录名称，如 "c：\\\newdir"。</span><span class="sxs-lookup"><span data-stu-id="47815-984">You must specify "c:\\\public\\\mydir" as the `destDirName` parameter, or specify a new directory name such as "c:\\\newdir".</span></span>  
  
 <span data-ttu-id="47815-985">此方法允许将目录移动到只读目录。</span><span class="sxs-lookup"><span data-stu-id="47815-985">This method permits moving a directory to a read-only directory.</span></span> <span data-ttu-id="47815-986">不会影响两个目录的读/写属性。</span><span class="sxs-lookup"><span data-stu-id="47815-986">The read/write attribute of neither directory is affected.</span></span>  
  
 <span data-ttu-id="47815-987">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-987">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-988">下面的示例演示如何移动目录。</span><span class="sxs-lookup"><span data-stu-id="47815-988">The following example demonstrates moving a directory.</span></span>  
  
 [!code-cpp[directoryinfomoveto#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfomoveto/CPP/directoryinfomoveto.cpp#1)]
 [!code-csharp[directoryinfomoveto#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfomoveto/CS/directoryinfomoveto.cs#1)]
 [!code-vb[directoryinfomoveto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfomoveto/VB/directoryinfomoveto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-989"><paramref name="destDirName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-989"><paramref name="destDirName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="47815-990"><paramref name="destDirName" /> 是一个空字符串 (''")。</span><span class="sxs-lookup"><span data-stu-id="47815-990"><paramref name="destDirName" /> is an empty string (''").</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="47815-991">尝试将目录移动到不同的卷。</span><span class="sxs-lookup"><span data-stu-id="47815-991">An attempt was made to move a directory to a different volume.</span></span>  
  
<span data-ttu-id="47815-992">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-992">-or-</span></span> 
 <span data-ttu-id="47815-993"><paramref name="destDirName" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="47815-993"><paramref name="destDirName" /> already exists.</span></span>  
  
<span data-ttu-id="47815-994">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-994">-or-</span></span> 
<span data-ttu-id="47815-995">你没有访问此路径的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-995">You are not authorized to access this path.</span></span>  
  
<span data-ttu-id="47815-996">- 或 -</span><span class="sxs-lookup"><span data-stu-id="47815-996">-or-</span></span> 
<span data-ttu-id="47815-997">要移动的目录和目标目录具有相同的名称。</span><span class="sxs-lookup"><span data-stu-id="47815-997">The directory being moved and the destination directory have the same name.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-998">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-998">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="47815-999">找不到目标目录。</span><span class="sxs-lookup"><span data-stu-id="47815-999">The destination directory cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-1000">用于读取和写入文件和目录以及访问目标目录。</span><span class="sxs-lookup"><span data-stu-id="47815-1000">for reading and writing files and directories and for access to the destination directory.</span></span> <span data-ttu-id="47815-1001">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="47815-1001">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="47815-1002">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="47815-1002">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-1003">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-1003">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-1004">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-1004">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-1005">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-1005">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.DirectoryInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47815-1006">获取此 <see cref="T:System.IO.DirectoryInfo" /> 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="47815-1006">Gets the name of this <see cref="T:System.IO.DirectoryInfo" /> instance.</span></span></summary>
        <value><span data-ttu-id="47815-1007">目录名称。</span><span class="sxs-lookup"><span data-stu-id="47815-1007">The directory name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-1008">此 <xref:System.IO.DirectoryInfo.Name%2A> 属性仅返回目录的名称，如 "Bin"。</span><span class="sxs-lookup"><span data-stu-id="47815-1008">This <xref:System.IO.DirectoryInfo.Name%2A> property returns only the name of the directory, such as "Bin".</span></span> <span data-ttu-id="47815-1009">若要获取完整路径（例如 "c:\public\Bin"），请使用 <xref:System.IO.FileSystemInfo.FullName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="47815-1009">To get the full path, such as "c:\public\Bin", use the <xref:System.IO.FileSystemInfo.FullName%2A> property.</span></span>  
  
 <span data-ttu-id="47815-1010"><xref:System.IO.DirectoryInfo> 的 <xref:System.IO.DirectoryInfo.Name%2A> 属性无需权限（除了对构造 <xref:System.IO.DirectoryInfo.Exists%2A>所需的目录的读取权限），但可以指定目录名称。</span><span class="sxs-lookup"><span data-stu-id="47815-1010">The <xref:System.IO.DirectoryInfo.Name%2A> property of a <xref:System.IO.DirectoryInfo> requires no permission (beyond the read permission to the directory necessary to construct the <xref:System.IO.DirectoryInfo.Exists%2A>) but can give out the directory name.</span></span> <span data-ttu-id="47815-1011">如果需要使用加密的安全名称将 <xref:System.IO.DirectoryInfo> 分发到受保护的目录，请为不受信任的代码使用创建虚拟目录。</span><span class="sxs-lookup"><span data-stu-id="47815-1011">If it is necessary to hand out a <xref:System.IO.DirectoryInfo> to a protected directory with a cryptographically secure name, create a dummy directory for the untrusted code's use.</span></span>  
  
 <span data-ttu-id="47815-1012">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-1012">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-1013">下面的示例仅显示当前 `DirectoryInfo` 实例的名称。</span><span class="sxs-lookup"><span data-stu-id="47815-1013">The following example displays the name of the current `DirectoryInfo` instance only.</span></span>  
  
 [!code-cpp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DirectoryInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic DirectoryInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DirectoryInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemInfo.FullName" />
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-1014">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-1014">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-1015">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-1015">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-1016">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-1016">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Parent { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47815-1017">获取指定的子目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="47815-1017">Gets the parent directory of a specified subdirectory.</span></span></summary>
        <value><span data-ttu-id="47815-1018">父目录; 如果路径为 null 或文件路径表示根（如 `\`、`C:\`或 `\\server\share`，则 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-1018">The parent directory, or <see langword="null" /> if the path is null or if the file path denotes a root (such as `\`, `C:\`, or `\\server\share`).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="47815-1019">在 .NET Framework 中，`Parent` 返回相对路径。</span><span class="sxs-lookup"><span data-stu-id="47815-1019">In .NET Framework, `Parent` returns a relative path.</span></span>
> <span data-ttu-id="47815-1020">在 .NET Core 中，`Parent` 返回完全限定的路径。</span><span class="sxs-lookup"><span data-stu-id="47815-1020">In .NET Core, `Parent` returns a fully qualified path.</span></span>

<span data-ttu-id="47815-1021">若要确保各个版本之间的行为一致，并使意向明确，请在 `Parent`返回的 <xref:System.IO.DirectoryInfo> 实例上检索以下某个属性的值。</span><span class="sxs-lookup"><span data-stu-id="47815-1021">To ensure consistent behavior across versions and to make your intent explicit, retrieve the value of one of the following properties on the <xref:System.IO.DirectoryInfo> instance returned by `Parent`.</span></span>
- <span data-ttu-id="47815-1022"><xref:System.IO.DirectoryInfo.Name>，它返回目录的简单名称（如 `bin`）。</span><span class="sxs-lookup"><span data-stu-id="47815-1022"><xref:System.IO.DirectoryInfo.Name>, which returns the simple name of the directory (such as `bin`).</span></span>
- <span data-ttu-id="47815-1023"><xref:System.IO.DirectoryInfo.FullName>，它返回目录的绝对路径。</span><span class="sxs-lookup"><span data-stu-id="47815-1023"><xref:System.IO.DirectoryInfo.FullName>, which returns the absolute path of the directory.</span></span> 


<span data-ttu-id="47815-1024">有关常见 i/o 任务的列表，请参阅[常见 I/o 任务](~/docs/standard/io/common-i-o-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-1024">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>


## Examples

<span data-ttu-id="47815-1025">下面的示例引用指定目录的父目录。</span><span class="sxs-lookup"><span data-stu-id="47815-1025">The following example refers to the parent directory of a specified directory.</span></span>

[!code-cpp[directoryinfoparent#1](~/samples/snippets/cpp/VS_Snippets_CLR/directoryinfoparent/CPP/directoryinfoparent.cpp#1)]
[!code-csharp[directoryinfoparent#1](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinfoparent/CS/directoryinfoparent.cs#1)]
[!code-vb[directoryinfoparent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinfoparent/VB/directoryinfoparent.vb#1)]

          ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-1026">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-1026">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-1027">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="47815-1027">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="47815-1028">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、<see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="47815-1028">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-1029">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-1029">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-1030">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-1030">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-1031">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-1031">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public System.IO.DirectoryInfo Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.DirectoryInfo Root" />
      <MemberSignature Language="DocId" Value="P:System.IO.DirectoryInfo.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::DirectoryInfo ^ Root { System::IO::DirectoryInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.IO.DirectoryInfo" Usage="System.IO.DirectoryInfo.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47815-1032">获取目录的根部分。</span><span class="sxs-lookup"><span data-stu-id="47815-1032">Gets the root portion of the directory.</span></span></summary>
        <value><span data-ttu-id="47815-1033">一个表示目录的根目录的对象。</span><span class="sxs-lookup"><span data-stu-id="47815-1033">An object that represents the root of the directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47815-1034">下面的示例显示指定目录的根位置。</span><span class="sxs-lookup"><span data-stu-id="47815-1034">The following example displays root locations for specified directories.</span></span>  
  
 [!code-csharp[directoryinforoot#2](~/samples/snippets/csharp/VS_Snippets_CLR/directoryinforoot/CS/directoryinforoot2.cs#2)]
 [!code-vb[directoryinforoot#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/directoryinforoot/VB/directoryinforoot2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="47815-1035">调用方没有所要求的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-1035">The caller does not have the required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-1036">用于读取文件和目录以及访问路径。</span><span class="sxs-lookup"><span data-stu-id="47815-1036">for reading from files and directories and for access to the path.</span></span> <span data-ttu-id="47815-1037">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />、<see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="47815-1037">Associated enumerations: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-1038">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-1038">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-1039">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-1039">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-1040">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-1040">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.DirectorySecurity directorySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.DirectorySecurity directorySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::DirectorySecurity ^ directorySecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.DirectorySecurity -&gt; unit" Usage="directoryInfo.SetAccessControl directorySecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="directorySecurity"><span data-ttu-id="47815-1041">一个对象，描述要应用于 <paramref name="path" /> 参数所描述的目录的 ACL 项。</span><span class="sxs-lookup"><span data-stu-id="47815-1041">An object that describes an ACL entry to apply to the directory described by the <paramref name="path" /> parameter.</span></span></param>
        <summary><span data-ttu-id="47815-1042">将 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象所描述的访问控制列表 (ACL) 项应用于当前 <see cref="T:System.IO.DirectoryInfo" /> 对象所描述的目录。</span><span class="sxs-lookup"><span data-stu-id="47815-1042">Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity" /> object to the directory described by the current <see cref="T:System.IO.DirectoryInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47815-1043">访问控制列表（ACL）描述对给定文件或目录具有或没有特定操作权限的个人和/或组。</span><span class="sxs-lookup"><span data-stu-id="47815-1043">An access control list (ACL) describes individuals and/or groups who have, or do not have, rights to specific actions on the given file or directory.</span></span> <span data-ttu-id="47815-1044">有关详细信息，请参阅[如何：添加或移除访问控制列表项](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)。</span><span class="sxs-lookup"><span data-stu-id="47815-1044">For more information, see [How to: Add or Remove Access Control List Entries](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md).</span></span>  
  
 <span data-ttu-id="47815-1045"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法将 ACL 项应用于表示 noninherited ACL 列表的文件。</span><span class="sxs-lookup"><span data-stu-id="47815-1045">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method applies ACL entries to a file that represents the noninherited ACL list.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="47815-1046">为 `directorySecurity` 指定的 ACL 将替换目录的现有 ACL。</span><span class="sxs-lookup"><span data-stu-id="47815-1046">The ACL specified for `directorySecurity` replaces the existing ACL for the directory.</span></span> <span data-ttu-id="47815-1047">若要为新用户添加权限，请使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法获取现有 ACL，并修改该 ACL。</span><span class="sxs-lookup"><span data-stu-id="47815-1047">To add permissions for a new user, use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to obtain the existing ACL, and modify it.</span></span>  
  
 <span data-ttu-id="47815-1048"><xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法仅保留在对象创建后修改的 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="47815-1048">The <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method persists only <xref:System.Security.AccessControl.DirectorySecurity> objects that have been modified after object creation.</span></span>  <span data-ttu-id="47815-1049">如果 <xref:System.Security.AccessControl.DirectorySecurity> 对象尚未修改，则不会将其保存到文件中。</span><span class="sxs-lookup"><span data-stu-id="47815-1049">If a <xref:System.Security.AccessControl.DirectorySecurity> object has not been modified, it will not be persisted to a file.</span></span>  <span data-ttu-id="47815-1050">因此，无法从一个文件中检索 <xref:System.Security.AccessControl.DirectorySecurity> 的对象，并将相同的对象重新应用到另一个文件。</span><span class="sxs-lookup"><span data-stu-id="47815-1050">Therefore, it is not possible to retrieve a <xref:System.Security.AccessControl.DirectorySecurity> object from one file and reapply the same object to another file.</span></span>  
  
 <span data-ttu-id="47815-1051">若要将 ACL 信息从一个文件复制到另一个文件：</span><span class="sxs-lookup"><span data-stu-id="47815-1051">To copy ACL information from one file to another:</span></span>  
  
1.  <span data-ttu-id="47815-1052">使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 方法可以从源文件中检索 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="47815-1052">Use the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> method to retrieve the <xref:System.Security.AccessControl.DirectorySecurity> object from the source file.</span></span>  
  
2.  <span data-ttu-id="47815-1053">为目标文件创建新的 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="47815-1053">Create a new <xref:System.Security.AccessControl.DirectorySecurity> object for the destination file.</span></span>  
  
3.  <span data-ttu-id="47815-1054">使用源 <xref:System.Security.AccessControl.DirectorySecurity> 对象的 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> 或 <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> 方法来检索 ACL 信息。</span><span class="sxs-lookup"><span data-stu-id="47815-1054">Use the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method of the source <xref:System.Security.AccessControl.DirectorySecurity> object to retrieve the ACL information.</span></span>  
  
4.  <span data-ttu-id="47815-1055">使用 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> 或 <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> 方法将在步骤3中检索到的信息复制到目标 <xref:System.Security.AccessControl.DirectorySecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="47815-1055">Use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A> or <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to copy the information retrieved in step 3 to the destination <xref:System.Security.AccessControl.DirectorySecurity> object.</span></span>  
  
5.  <span data-ttu-id="47815-1056">使用 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法将目标 <xref:System.Security.AccessControl.DirectorySecurity> 对象设置为目标文件。</span><span class="sxs-lookup"><span data-stu-id="47815-1056">Set the destination <xref:System.Security.AccessControl.DirectorySecurity> object to the destination file using the <xref:System.IO.DirectoryInfo.SetAccessControl%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47815-1057">下面的示例使用 <xref:System.IO.DirectoryInfo.GetAccessControl%2A> 和 <xref:System.IO.DirectoryInfo.SetAccessControl%2A> 方法在目录中添加并删除访问控制列表（ACL）项。</span><span class="sxs-lookup"><span data-stu-id="47815-1057">The following example uses the <xref:System.IO.DirectoryInfo.GetAccessControl%2A> and <xref:System.IO.DirectoryInfo.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a directory.</span></span>  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="47815-1058"><paramref name="directorySecurity" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="47815-1058">The <paramref name="directorySecurity" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="47815-1059">未能找到或修改该文件。</span><span class="sxs-lookup"><span data-stu-id="47815-1059">The file could not be found or modified.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="47815-1060">当前进程不具有打开该文件的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-1060">The current process does not have access to open the file.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="47815-1061">当前操作系统不是 Microsoft Windows 2000 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="47815-1061">The current operating system is not Microsoft Windows 2000 or later.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="47815-1062">用于枚举目录的访问控制列表（ACL）的权限。</span><span class="sxs-lookup"><span data-stu-id="47815-1062">for permission to enumerate access control list (ACL) for a directory.</span></span> <span data-ttu-id="47815-1063">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="47815-1063">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="47815-1064">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />、<see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span><span class="sxs-lookup"><span data-stu-id="47815-1064">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, <see cref="F:System.Security.AccessControl.AccessControlActions.View" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.DirectoryInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="directoryInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47815-1065">返回传递给 <see cref="T:System.IO.DirectoryInfo" /> 构造函数的原始路径。</span><span class="sxs-lookup"><span data-stu-id="47815-1065">Returns the original path that was passed to the <see cref="T:System.IO.DirectoryInfo" /> constructor.</span></span> <span data-ttu-id="47815-1066">使用 <see cref="P:System.IO.DirectoryInfo.FullName" /> 或 <see cref="P:System.IO.DirectoryInfo.Name" /> 属性作为完整路径或文件/目录名，而不是此方法。</span><span class="sxs-lookup"><span data-stu-id="47815-1066">Use the <see cref="P:System.IO.DirectoryInfo.FullName" /> or <see cref="P:System.IO.DirectoryInfo.Name" /> properties for the full path or file/directory name instead of this method.</span></span></summary>
        <returns><span data-ttu-id="47815-1067">用户所传递的原始路径。</span><span class="sxs-lookup"><span data-stu-id="47815-1067">The original path that was passed by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="47815-1068"><xref:System.IO.DirectoryInfo.ToString%2A> 方法返回的字符串表示传递到 <xref:System.IO.DirectoryInfo> 构造函数的路径。</span><span class="sxs-lookup"><span data-stu-id="47815-1068">The string returned by the <xref:System.IO.DirectoryInfo.ToString%2A> method represents the path that was passed to the <xref:System.IO.DirectoryInfo> constructor.</span></span> <span data-ttu-id="47815-1069">你应根据你的意图检索以下任一属性的值，而不是调用 `ToString` 方法：</span><span class="sxs-lookup"><span data-stu-id="47815-1069">Instead of calling the `ToString` method, you should retrieve the value of either of the following properties, depending on your intent:</span></span>
> - <span data-ttu-id="47815-1070"><xref:System.IO.DirectoryInfo.Name>，获取目录的名称，而不包含任何父路径信息。</span><span class="sxs-lookup"><span data-stu-id="47815-1070"><xref:System.IO.DirectoryInfo.Name>, to get the name of the directory, without any parent path information.</span></span>
> - <span data-ttu-id="47815-1071"><xref:System.IO.DirectoryInfo.FullName>，获取目录的完全限定路径。</span><span class="sxs-lookup"><span data-stu-id="47815-1071"><xref:System.IO.DirectoryInfo.FullName>, to get the fully qualified path of the directory.</span></span>

          ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="47815-1072">文件和流 I/O</span><span class="sxs-lookup"><span data-stu-id="47815-1072">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="47815-1073">如何：从文件读取文本</span><span class="sxs-lookup"><span data-stu-id="47815-1073">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="47815-1074">如何：向文件写入文本</span><span class="sxs-lookup"><span data-stu-id="47815-1074">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
