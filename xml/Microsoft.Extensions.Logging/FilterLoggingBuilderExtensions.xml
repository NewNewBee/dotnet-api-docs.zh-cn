<Type Name="FilterLoggingBuilderExtensions" FullName="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bddc07b079f02cb04ccb6d1557ef23f12172e27a" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73408113" /></Metadata><TypeSignature Language="C#" Value="public static class FilterLoggingBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FilterLoggingBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module FilterLoggingBuilderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterLoggingBuilderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type FilterLoggingBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cb933-101">用于在 <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> 中设置日志记录服务的扩展方法。</span><span class="sxs-lookup"><span data-stu-id="cb933-101">Extension methods for setting up logging services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-102">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-102">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="cb933-103">要添加的筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-103">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="cb933-104">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-104">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-105"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-105">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-106">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-106">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="cb933-107">要添加的筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-107">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="cb933-108">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-108">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-109"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-109">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;string,string,Microsoft.Extensions.Logging.LogLevel,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`4&lt;string, string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, filter As Func(Of String, String, LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;System::String ^, System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;string, string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="filter" Type="System.Func&lt;System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-110">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-110">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="filter"><span data-ttu-id="cb933-111">要添加的筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-111">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="cb933-112">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-112">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-113"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-113">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-114">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-114">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="cb933-115">要应用的筛选器函数。</span><span class="sxs-lookup"><span data-stu-id="cb933-115">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="cb933-116">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-116">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-117"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-117">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-118">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-118">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="cb933-119">要应用的筛选器函数。</span><span class="sxs-lookup"><span data-stu-id="cb933-119">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="cb933-120">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-120">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-121"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-121">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;string,string,Microsoft.Extensions.Logging.LogLevel,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`4&lt;string, string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, filter As Func(Of String, String, LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;System::String ^, System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;string, string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="filter" Type="System.Func&lt;System.String,System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-122">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-122">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="filter"><span data-ttu-id="cb933-123">要应用的筛选器函数。</span><span class="sxs-lookup"><span data-stu-id="cb933-123">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="cb933-124">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-124">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-125"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-125">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Microsoft.Extensions.Logging.LogLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, category As String, level As LogLevel) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-126">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-126">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="cb933-127">要筛选的类别。</span><span class="sxs-lookup"><span data-stu-id="cb933-127">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="cb933-128">要筛选的级别。</span><span class="sxs-lookup"><span data-stu-id="cb933-128">The level to filter.</span></span></param>
        <summary><span data-ttu-id="cb933-129">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-129">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-130"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-130">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As ILoggingBuilder, category As String, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-131">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-131">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="cb933-132">要筛选的类别。</span><span class="sxs-lookup"><span data-stu-id="cb933-132">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="cb933-133">要应用的筛选器函数。</span><span class="sxs-lookup"><span data-stu-id="cb933-133">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="cb933-134">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-134">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-135"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-135">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Microsoft.Extensions.Logging.LogLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, category As String, level As LogLevel) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-136">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-136">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="cb933-137">要筛选的类别。</span><span class="sxs-lookup"><span data-stu-id="cb933-137">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="cb933-138">要筛选的级别。</span><span class="sxs-lookup"><span data-stu-id="cb933-138">The level to filter.</span></span></param>
        <summary><span data-ttu-id="cb933-139">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-139">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-140"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-140">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter (builder As LoggerFilterOptions, category As String, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="cb933-141">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-141">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="cb933-142">要筛选的类别。</span><span class="sxs-lookup"><span data-stu-id="cb933-142">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="cb933-143">要应用的筛选器函数。</span><span class="sxs-lookup"><span data-stu-id="cb933-143">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="cb933-144">向工厂添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-144">Adds a log filter to the factory.</span></span></summary>
        <returns><span data-ttu-id="cb933-145"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-145">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb933-146">将为其添加此筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-146">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="cb933-147">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-147">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="cb933-148">要添加的筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-148">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="cb933-149">为给定的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> 添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-149">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="cb933-150"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-150">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb933-151">将为其添加此筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-151">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="cb933-152">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-152">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="cb933-153">要添加的筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-153">The filter to be added.</span></span></param>
        <summary><span data-ttu-id="cb933-154">为给定的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> 添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-154">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="cb933-155"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-155">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb933-156">将为其添加此筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-156">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="cb933-157">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-157">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="cb933-158">要应用的筛选器函数。</span><span class="sxs-lookup"><span data-stu-id="cb933-158">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="cb933-159">为给定的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> 添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-159">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="cb933-160"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-160">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; categoryLevelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; categoryLevelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, categoryLevelFilter As Func(Of String, LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ categoryLevelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, categoryLevelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="categoryLevelFilter" Type="System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb933-161">将为其添加此筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-161">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="cb933-162">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-162">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="categoryLevelFilter"><span data-ttu-id="cb933-163">要应用的筛选器函数。</span><span class="sxs-lookup"><span data-stu-id="cb933-163">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="cb933-164">为给定的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> 添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-164">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="cb933-165"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-165">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Microsoft.Extensions.Logging.LogLevel level) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, category As String, level As LogLevel) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb933-166">将为其添加此筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-166">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="cb933-167">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-167">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="cb933-168">要筛选的类别。</span><span class="sxs-lookup"><span data-stu-id="cb933-168">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="cb933-169">要筛选的级别。</span><span class="sxs-lookup"><span data-stu-id="cb933-169">The level to filter.</span></span></param>
        <summary><span data-ttu-id="cb933-170">为给定的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> 添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-170">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="cb933-171"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-171">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.ILoggingBuilder AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.ILoggingBuilder builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.ILoggingBuilder,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As ILoggingBuilder, category As String, levelFilter As Func(Of LogLevel, Boolean)) As ILoggingBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::ILoggingBuilder ^ AddFilter(Microsoft::Extensions::Logging::ILoggingBuilder ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.ILoggingBuilder * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.ILoggingBuilder (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILoggingBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.ILoggingBuilder" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb933-172">将为其添加此筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-172">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="cb933-173">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-173">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="cb933-174">要筛选的类别。</span><span class="sxs-lookup"><span data-stu-id="cb933-174">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="cb933-175">要应用的筛选器函数。</span><span class="sxs-lookup"><span data-stu-id="cb933-175">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="cb933-176">为给定的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> 添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-176">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="cb933-177"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-177">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Microsoft.Extensions.Logging.LogLevel level) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, valuetype Microsoft.Extensions.Logging.LogLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, category As String, level As LogLevel) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Microsoft::Extensions::Logging::LogLevel level);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Microsoft.Extensions.Logging.LogLevel -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="level" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb933-178">将为其添加此筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-178">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="cb933-179">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-179">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="cb933-180">要筛选的类别。</span><span class="sxs-lookup"><span data-stu-id="cb933-180">The category to filter.</span></span></param>
        <param name="level"><span data-ttu-id="cb933-181">要筛选的级别。</span><span class="sxs-lookup"><span data-stu-id="cb933-181">The level to filter.</span></span></param>
        <summary><span data-ttu-id="cb933-182">为给定的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> 添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-182">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="cb933-183"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-183">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;T&gt; (this Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, Func&lt;Microsoft.Extensions.Logging.LogLevel,bool&gt; levelFilter) where T : Microsoft.Extensions.Logging.ILoggerProvider;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.Logging.LoggerFilterOptions AddFilter&lt;(class Microsoft.Extensions.Logging.ILoggerProvider) T&gt;(class Microsoft.Extensions.Logging.LoggerFilterOptions builder, string category, class System.Func`2&lt;valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; levelFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter``1(Microsoft.Extensions.Logging.LoggerFilterOptions,System.String,System.Func{Microsoft.Extensions.Logging.LogLevel,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddFilter(Of T As ILoggerProvider) (builder As LoggerFilterOptions, category As String, levelFilter As Func(Of LogLevel, Boolean)) As LoggerFilterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Microsoft::Extensions::Logging::ILoggerProvider[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::Logging::LoggerFilterOptions ^ AddFilter(Microsoft::Extensions::Logging::LoggerFilterOptions ^ builder, System::String ^ category, Func&lt;Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ levelFilter);" />
      <MemberSignature Language="F#" Value="static member AddFilter : Microsoft.Extensions.Logging.LoggerFilterOptions * string * Func&lt;Microsoft.Extensions.Logging.LogLevel, bool&gt; -&gt; Microsoft.Extensions.Logging.LoggerFilterOptions (requires 'T :&gt; Microsoft.Extensions.Logging.ILoggerProvider)" Usage="Microsoft.Extensions.Logging.FilterLoggingBuilderExtensions.AddFilter (builder, category, levelFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.LoggerFilterOptions</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.Logging.LoggerFilterOptions" RefType="this" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="levelFilter" Type="System.Func&lt;Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="cb933-184">将为其添加此筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-184">The <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> which this filter will be added for.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="cb933-185">要向其添加筛选器的 <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cb933-185">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> to add the filter to.</span></span></param>
        <param name="category"><span data-ttu-id="cb933-186">要筛选的类别。</span><span class="sxs-lookup"><span data-stu-id="cb933-186">The category to filter.</span></span></param>
        <param name="levelFilter"><span data-ttu-id="cb933-187">要应用的筛选器函数。</span><span class="sxs-lookup"><span data-stu-id="cb933-187">The filter function to apply.</span></span></param>
        <summary><span data-ttu-id="cb933-188">为给定的 <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" /> 添加日志筛选器。</span><span class="sxs-lookup"><span data-stu-id="cb933-188">Adds a log filter for the given <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />.</span></span></summary>
        <returns><span data-ttu-id="cb933-189"><see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />，以便可以链接其他调用。</span><span class="sxs-lookup"><span data-stu-id="cb933-189">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" /> so that additional calls can be chained.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
