<Type Name="Dns" FullName="System.Net.Dns">
  <Metadata><Meta Name="ms.openlocfilehash" Value="648f7011534a9288411335d1ffb8820f86a727ed" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75110191" /></Metadata><TypeSignature Language="C#" Value="public static class Dns" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Dns extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Dns" />
  <TypeSignature Language="VB.NET" Value="Public Class Dns" />
  <TypeSignature Language="C++ CLI" Value="public ref class Dns abstract sealed" />
  <TypeSignature Language="F#" Value="type Dns = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NameResolution</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b9563-101">提供简单的域名解析功能。</span><span class="sxs-lookup"><span data-stu-id="b9563-101">Provides simple domain name resolution functionality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-102"><xref:System.Net.Dns> 类是一个静态类，用于从 Internet 域名系统（DNS）检索有关特定主机的信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-102">The <xref:System.Net.Dns> class is a static class that retrieves information about a specific host from the Internet Domain Name System (DNS).</span></span>  
  
 <span data-ttu-id="b9563-103">DNS 查询中的主机信息将在 <xref:System.Net.IPHostEntry> 类的实例中返回。</span><span class="sxs-lookup"><span data-stu-id="b9563-103">The host information from the DNS query is returned in an instance of the <xref:System.Net.IPHostEntry> class.</span></span> <span data-ttu-id="b9563-104">如果指定的主机在 DNS 数据库中有多个条目，<xref:System.Net.IPHostEntry> 将包含多个 IP 地址和别名。</span><span class="sxs-lookup"><span data-stu-id="b9563-104">If the specified host has more than one entry in the DNS database, <xref:System.Net.IPHostEntry> contains multiple IP addresses and aliases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-105">下面的示例在 DNS 数据库中查询有关主机 `www.contoso.com`的信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-105">The following example queries the DNS database for information on the host `www.contoso.com`.</span></span>  
  
 [!code-cpp[Classic Dns Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Dns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Dns Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Dns Example/CS/source.cs#1)]
 [!code-vb[Classic Dns Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Dns Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginGetHostAddresses">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostAddresses (string hostNameOrAddress, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostAddresses(string hostNameOrAddress, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostAddresses (hostNameOrAddress As String, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostAddresses(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostAddresses : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostAddresses (hostNameOrAddress, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="b9563-106">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-106">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="b9563-107">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-107">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="b9563-108">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-108">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="b9563-109">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="b9563-109">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="b9563-110">异步返回指定主机的 Internet 协议 (IP) 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-110">Asynchronously returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="b9563-111">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-111">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-112"><xref:System.Net.Dns.BeginGetHostAddresses%2A> 方法为与主机名关联的 IP 地址异步查询 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="b9563-112">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method asynchronously queries a DNS server for the IP addresses that are associated with a host name.</span></span> <span data-ttu-id="b9563-113">如果 `hostNameOrAddress` 是 IP 地址，则返回此地址而不查询 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="b9563-113">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-114">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-114">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-115">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-115">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="b9563-116">如果将空字符串作为 `hostNameOrAddress` 参数传递，则此方法将返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-116">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="b9563-117">异步 <xref:System.Net.Dns.BeginGetHostAddresses%2A> 操作必须通过调用 <xref:System.Net.Dns.EndGetHostAddresses%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="b9563-117">The asynchronous <xref:System.Net.Dns.BeginGetHostAddresses%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostAddresses%2A> method.</span></span> <span data-ttu-id="b9563-118">通常，方法由 `requestCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="b9563-118">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="b9563-119">在操作完成之前，此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-119">This method does not block until the operation is complete.</span></span> <span data-ttu-id="b9563-120">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Dns.GetHostAddresses%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-120">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostAddresses%2A> method.</span></span>  
  
 <span data-ttu-id="b9563-121">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b9563-121">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-122"><paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-122"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b9563-123"><paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="b9563-123">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-124">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-124">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9563-125"><paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-125"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-126">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-126">for accessing DNS information.</span></span> <span data-ttu-id="b9563-127">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-127">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostByName">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostByName (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostByName(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostByName (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostByName(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostByName : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostByName (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("BeginGetHostByName is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="b9563-128">主机的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="b9563-128">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="b9563-129">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-129">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="b9563-130">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-130">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="b9563-131">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="b9563-131">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="b9563-132">开始异步请求关于指定 DNS 主机名的 <see cref="T:System.Net.IPHostEntry" /> 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-132">Begins an asynchronous request for <see cref="T:System.Net.IPHostEntry" /> information about the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="b9563-133">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-133">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-134">异步 <xref:System.Net.Dns.BeginGetHostByName%2A> 操作必须通过调用 <xref:System.Net.Dns.EndGetHostByName%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="b9563-134">The asynchronous <xref:System.Net.Dns.BeginGetHostByName%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostByName%2A> method.</span></span> <span data-ttu-id="b9563-135">通常，方法由 `requestCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="b9563-135">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="b9563-136">在操作完成之前，此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-136">This method does not block until the operation is complete.</span></span> <span data-ttu-id="b9563-137">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Dns.GetHostByName%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-137">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="b9563-138">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-138">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-139">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-139">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-140">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-140">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-141"><paramref name="hostName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-141"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-142">执行 DNS 查询时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-142">An error was encountered executing the DNS query.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-143">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-143">for accessing DNS information.</span></span> <span data-ttu-id="b9563-144">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-144">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="b9563-145">异步编程概述</span><span class="sxs-lookup"><span data-stu-id="b9563-145">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9563-146">将主机名或 IP 地址异步解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-146">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (System.Net.IPAddress address, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(class System.Net.IPAddress address, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (address As IPAddress, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::Net::IPAddress ^ address, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : System.Net.IPAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (address, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="b9563-147">要解析的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-147">The IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="b9563-148">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-148">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="b9563-149">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-149">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="b9563-150">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="b9563-150">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="b9563-151">将 IP 地址异步解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-151">Asynchronously resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b9563-152">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-152">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-153"><xref:System.Net.Dns.BeginGetHostEntry%2A> 方法以异步方式在 DNS 服务器中查询与 IP 地址关联的 IP 地址和别名。</span><span class="sxs-lookup"><span data-stu-id="b9563-153">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method asynchronously queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="b9563-154">**注意**在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-154">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-155">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-155">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="b9563-156">异步 <xref:System.Net.Dns.BeginGetHostEntry%2A> 操作必须通过调用 <xref:System.Net.Dns.EndGetHostEntry%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="b9563-156">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="b9563-157">通常，方法由 `requestCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="b9563-157">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="b9563-158">在操作完成之前，此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-158">This method does not block until the operation is complete.</span></span> <span data-ttu-id="b9563-159">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Dns.GetHostEntry%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-159">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="b9563-160">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b9563-160">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-161">下面的代码示例使用 <xref:System.Net.Dns.BeginGetHostEntry%2A> 方法将 IP 地址解析为 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-161">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-162"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-162"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-163">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-163">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9563-164"><paramref name="address" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-164"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-165">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-165">for accessing DNS information.</span></span> <span data-ttu-id="b9563-166">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-166">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginGetHostEntry">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetHostEntry (string hostNameOrAddress, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetHostEntry(string hostNameOrAddress, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginGetHostEntry (hostNameOrAddress As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetHostEntry(System::String ^ hostNameOrAddress, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginGetHostEntry : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginGetHostEntry (hostNameOrAddress, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="b9563-167">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-167">The host name or IP address to resolve.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="b9563-168">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-168">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="b9563-169">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-169">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="b9563-170">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="b9563-170">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="b9563-171">将主机名或 IP 地址异步解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-171">Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b9563-172">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-172">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-173"><xref:System.Net.Dns.BeginGetHostEntry%2A> 方法在 DNS 服务器中查询与主机名或 IP 地址关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-173">The <xref:System.Net.Dns.BeginGetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="b9563-174">**注意**在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-174">**Note** This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-175">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-175">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 <span data-ttu-id="b9563-176">异步 <xref:System.Net.Dns.BeginGetHostEntry%2A> 操作必须通过调用 <xref:System.Net.Dns.EndGetHostEntry%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="b9563-176">The asynchronous <xref:System.Net.Dns.BeginGetHostEntry%2A> operation must be completed by calling the <xref:System.Net.Dns.EndGetHostEntry%2A> method.</span></span> <span data-ttu-id="b9563-177">通常，方法由 `requestCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="b9563-177">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="b9563-178">在操作完成之前，此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-178">This method does not block until the operation is complete.</span></span> <span data-ttu-id="b9563-179">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Dns.GetHostEntry%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-179">To block until the operation is complete, use the <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
 <span data-ttu-id="b9563-180">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-180">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-181">下面的代码示例使用 <xref:System.Net.Dns.BeginGetHostEntry%2A> 方法将 IP 地址解析为 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-181">The following code example uses the <xref:System.Net.Dns.BeginGetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#2)]
 [!code-csharp[System.Net.Dns#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#2)]
 [!code-vb[System.Net.Dns#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-182"><paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-182"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b9563-183"><paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="b9563-183">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-184">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-184">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9563-185"><paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-185"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-186">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-186">for accessing DNS information.</span></span> <span data-ttu-id="b9563-187">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-187">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (string hostName, AsyncCallback requestCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(string hostName, class System.AsyncCallback requestCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (hostName As String, requestCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::String ^ hostName, AsyncCallback ^ requestCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.Net.Dns.BeginResolve (hostName, requestCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use BeginGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("BeginResolve is obsoleted for this type, please use BeginGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="b9563-188">主机的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="b9563-188">The DNS name of the host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="b9563-189">一个 <see cref="T:System.AsyncCallback" /> 委托，它引用操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-189">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="stateObject"><span data-ttu-id="b9563-190">一个用户定义对象，其中包含操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-190">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="b9563-191">当操作完成时，此对象会被传递给 <paramref name="requestCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="b9563-191">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="b9563-192">开始异步请求将 DNS 主机名或 IP 地址解析为 <see cref="T:System.Net.IPAddress" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-192">Begins an asynchronous request to resolve a DNS host name or IP address to an <see cref="T:System.Net.IPAddress" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b9563-193">引用异步请求的 <see cref="T:System.IAsyncResult" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-193">An <see cref="T:System.IAsyncResult" /> instance that references the asynchronous request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-194">异步 <xref:System.Net.Dns.BeginResolve%2A> 操作必须通过调用 <xref:System.Net.Dns.EndResolve%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="b9563-194">The asynchronous <xref:System.Net.Dns.BeginResolve%2A> operation must be completed by calling the <xref:System.Net.Dns.EndResolve%2A> method.</span></span> <span data-ttu-id="b9563-195">通常，方法由 `requestCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="b9563-195">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="b9563-196">在操作完成之前，此方法不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-196">This method does not block until the operation is complete.</span></span> <span data-ttu-id="b9563-197">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Dns.Resolve%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-197">To block until the operation is complete, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
 <span data-ttu-id="b9563-198">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-198">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-199">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-199">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-200">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-201">以下示例使用 <xref:System.Net.Dns.BeginResolve%2A> 将 DNS 主机名解析为 <xref:System.Net.IPAddress>。</span><span class="sxs-lookup"><span data-stu-id="b9563-201">The following example uses <xref:System.Net.Dns.BeginResolve%2A> to resolve a DNS host name to an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-202"><paramref name="hostName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-202"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-203">调用方没有访问 DNS 信息的权限。</span><span class="sxs-lookup"><span data-stu-id="b9563-203">The caller does not have permission to access DNS information.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-204">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-204">for accessing DNS information.</span></span> <span data-ttu-id="b9563-205">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-205">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="b9563-206">异步编程概述</span><span class="sxs-lookup"><span data-stu-id="b9563-206">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] EndGetHostAddresses (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] EndGetHostAddresses(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostAddresses (asyncResult As IAsyncResult) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ EndGetHostAddresses(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostAddresses : IAsyncResult -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.EndGetHostAddresses asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b9563-207">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="b9563-207">An <see cref="T:System.IAsyncResult" /> instance returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b9563-208">结束对 DNS 信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="b9563-208">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="b9563-209">一个 <see cref="T:System.Net.IPAddress" /> 类型的数组，用于保存由 <paramref name="hostNameOrAddress" /> 的 <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" /> 参数指定的主机的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-209">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host specified by the <paramref name="hostNameOrAddress" /> parameter of <see cref="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-210"><xref:System.Net.Dns.BeginGetHostAddresses%2A> 方法在 DNS 服务器中查询与主机名关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-210">The <xref:System.Net.Dns.BeginGetHostAddresses%2A> method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="b9563-211">如果 `hostNameOrAddress` 是 IP 地址，则返回此地址而不查询 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="b9563-211">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 <span data-ttu-id="b9563-212">如果将空字符串作为 `hostNameOrAddress` 参数传递，则此方法将返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-212">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="b9563-213">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-213">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-214">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-214">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostByName (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostByName(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostByName (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostByName(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostByName : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostByName asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("EndGetHostByName is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b9563-215">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="b9563-215">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b9563-216">结束对 DNS 信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="b9563-216">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="b9563-217">一个 <see cref="T:System.Net.IPHostEntry" /> 对象，该对象包含一个主机的 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-217">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-218">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-218">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="b9563-219">若要同步执行此操作，请使用 <xref:System.Net.Dns.GetHostByName%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-219">To perform this operation synchronously, use the <xref:System.Net.Dns.GetHostByName%2A> method.</span></span>  
  
 <span data-ttu-id="b9563-220">如果将 <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> 属性设置为 `true`，则此方法不会填充返回的 <xref:System.Net.IPHostEntry> 实例的 <xref:System.Net.IPHostEntry.Aliases%2A> 属性，该属性将始终为空。</span><span class="sxs-lookup"><span data-stu-id="b9563-220">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-221">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-221">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-222">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-222">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-223"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-223"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="b9563-224">异步编程概述</span><span class="sxs-lookup"><span data-stu-id="b9563-224">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndGetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndGetHostEntry (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndGetHostEntry(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetHostEntry (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndGetHostEntry(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndGetHostEntry : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndGetHostEntry asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b9563-225">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="b9563-225">An <see cref="T:System.IAsyncResult" /> instance returned by a call to an <see cref="Overload:System.Net.Dns.BeginGetHostEntry" /> method.</span></span></param>
        <summary><span data-ttu-id="b9563-226">结束对 DNS 信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="b9563-226">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="b9563-227">一个 <see cref="T:System.Net.IPHostEntry" /> 实例，其中包含有关主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-227">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-228">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-228">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="b9563-229">返回的 <xref:System.Net.IPHostEntry> 实例的 <xref:System.Net.IPHostEntry.Aliases%2A> 属性不由此方法填充，并且将始终为空。</span><span class="sxs-lookup"><span data-stu-id="b9563-229">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="b9563-230">若要同步执行此操作，请使用 <xref:System.Net.Dns.GetHostEntry%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-230">To perform this operation synchronously, use a <xref:System.Net.Dns.GetHostEntry%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-231">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-231">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-232">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-232">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-233"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-233"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry EndResolve (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry EndResolve(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (asyncResult As IAsyncResult) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ EndResolve(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.EndResolve asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use EndGetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("EndResolve is obsoleted for this type, please use EndGetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b9563-234">一个 <see cref="T:System.IAsyncResult" /> 实例，该实例通过调用 <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> 方法返回。</span><span class="sxs-lookup"><span data-stu-id="b9563-234">An <see cref="T:System.IAsyncResult" /> instance that is returned by a call to the <see cref="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b9563-235">结束对 DNS 信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="b9563-235">Ends an asynchronous request for DNS information.</span></span></summary>
        <returns><span data-ttu-id="b9563-236">一个 <see cref="T:System.Net.IPHostEntry" /> 对象，该对象包含一个主机的 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-236">An <see cref="T:System.Net.IPHostEntry" /> object that contains DNS information about a host.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-237">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-237">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="b9563-238">如果将 <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> 设置为 `true`，则此方法不会填充返回的 <xref:System.Net.IPHostEntry> 实例的 <xref:System.Net.IPHostEntry.Aliases%2A> 属性，该属性将始终为空。</span><span class="sxs-lookup"><span data-stu-id="b9563-238">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
 <span data-ttu-id="b9563-239">若要同步执行此操作，请使用 <xref:System.Net.Dns.Resolve%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-239">To perform this operation synchronously, use the <xref:System.Net.Dns.Resolve%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-240">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-240">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-241">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-241">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-242">以下示例结束对 DNS 主机信息的异步请求。</span><span class="sxs-lookup"><span data-stu-id="b9563-242">The following example ends an asynchronous request for DNS host information.</span></span>  
  
 [!code-cpp[Dns_Begin_EndResolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CPP/dns_begin_endresolve.cpp#1)]
 [!code-csharp[Dns_Begin_EndResolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Begin_EndResolve/CS/dns_begin_endresolve.cs#1)]
 [!code-vb[Dns_Begin_EndResolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Begin_EndResolve/VB/dns_begin_endresolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-243"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-243"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c9b3501e-6bc6-40f9-8efd-4b6d9e39ccf0"><span data-ttu-id="b9563-244">异步编程概述</span><span class="sxs-lookup"><span data-stu-id="b9563-244">Asynchronous Programming Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddresses">
      <MemberSignature Language="C#" Value="public static System.Net.IPAddress[] GetHostAddresses (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPAddress[] GetHostAddresses(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddresses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddresses (hostNameOrAddress As String) As IPAddress()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::IPAddress ^&gt; ^ GetHostAddresses(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddresses : string -&gt; System.Net.IPAddress[]" Usage="System.Net.Dns.GetHostAddresses hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="b9563-245">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-245">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="b9563-246">返回指定主机的 Internet 协议 (IP) 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-246">Returns the Internet Protocol (IP) addresses for the specified host.</span></span></summary>
        <returns><span data-ttu-id="b9563-247">一个 <see cref="T:System.Net.IPAddress" /> 类型的数组，用于保存由 <paramref name="hostNameOrAddress" /> 参数指定的主机的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-247">An array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-248"><xref:System.Net.Dns.GetHostAddresses%2A> 方法在 DNS 子系统中查询与主机名关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-248">The <xref:System.Net.Dns.GetHostAddresses%2A> method queries the DNS subsystem for the IP addresses associated with a host name.</span></span> <span data-ttu-id="b9563-249">如果 `hostNameOrAddress` 是 IP 地址，则返回此地址而不查询 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="b9563-249">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>
  
 <span data-ttu-id="b9563-250">如果将空字符串作为 `hostNameOrAddress` 参数传递，则此方法将返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-250">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="b9563-251">如果本地计算机未安装 IPv6，则从 <xref:System.Net.Dns.GetHostAddresses%2A> 方法的结果中筛选 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-251">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostAddresses%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="b9563-252">因此，如果只有 IPv6 结果可用于 `hostNameOrAddress` 参数，则可以取回空的 <xref:System.Net.IPAddress> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-252">As a result, it is possible to get back an empty <xref:System.Net.IPAddress> instance if only IPv6 results were available for the `hostNameOrAddress` parameter.</span></span>  
 
 <span data-ttu-id="b9563-253">此方法是使用基础操作系统的名称解析 Api （例如，Windows 上的 Win32 API getaddrinfo 和其他平台上的等效 Api）实现的。</span><span class="sxs-lookup"><span data-stu-id="b9563-253">This method is implemented using the underlying operating system's name resolution APIs (such as the Win32 API getaddrinfo on Windows, and equivalent APIs on other platforms).</span></span>  <span data-ttu-id="b9563-254">如果 `hosts` 文件中介绍了主机，则在不查询 DNS 服务器的情况下将返回其中的一个或多个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-254">If a host is described in the `hosts` file, the IP address or addresses there will be returned without querying the DNS server.</span></span>

> [!NOTE]
>  <span data-ttu-id="b9563-255">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-255">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-256">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-256">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-257">下面的代码示例使用 <xref:System.Net.Dns.GetHostAddresses%2A> 方法将 IP 地址解析为类型 <xref:System.Net.IPAddress>的数组。</span><span class="sxs-lookup"><span data-stu-id="b9563-257">The following code example uses the <xref:System.Net.Dns.GetHostAddresses%2A> method to resolve an IP address to an array of type <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[System.Net.Dns#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#3)]
 [!code-csharp[System.Net.Dns#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#3)]
 [!code-vb[System.Net.Dns#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-258"><paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-258"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b9563-259"><paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="b9563-259">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-260">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-260">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9563-261"><paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-261"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-262">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-262">for accessing DNS information.</span></span> <span data-ttu-id="b9563-263">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-263">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostAddressesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt; GetHostAddressesAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPAddress[]&gt; GetHostAddressesAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostAddressesAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostAddressesAsync (hostNameOrAddress As String) As Task(Of IPAddress())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;cli::array &lt;System::Net::IPAddress ^&gt; ^&gt; ^ GetHostAddressesAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostAddressesAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;" Usage="System.Net.Dns.GetHostAddressesAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPAddress[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="b9563-264">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-264">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="b9563-265">返回指定主机的 Internet 协议 (IP) 地址以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="b9563-265">Returns the Internet Protocol (IP) addresses for the specified host as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b9563-266">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="b9563-266">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b9563-267">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回类型为 <see cref="T:System.Net.IPAddress" /> 的数组，该类型包含 <paramref name="hostNameOrAddress" /> 参数指定的主机的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-267">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an array of type <see cref="T:System.Net.IPAddress" /> that holds the IP addresses for the host that is specified by the <paramref name="hostNameOrAddress" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-268">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-268">This operation will not block.</span></span> <span data-ttu-id="b9563-269">`hostNameOrAddress` 解决后，返回的 <xref:System.Threading.Tasks.Task%601> 对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="b9563-269">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="b9563-270">此方法在 DNS 服务器中查询与主机名关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-270">This method queries a DNS server for the IP addresses associated with a host name.</span></span> <span data-ttu-id="b9563-271">如果 `hostNameOrAddress` 是 IP 地址，则返回此地址而不查询 DNS 服务器。</span><span class="sxs-lookup"><span data-stu-id="b9563-271">If `hostNameOrAddress` is an IP address, this address is returned without querying the DNS server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-272"><paramref name="hostNameOrAddress" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-272"><paramref name="hostNameOrAddress" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b9563-273"><paramref name="hostNameOrAddress" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="b9563-273">The length of <paramref name="hostNameOrAddress" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-274">解析 <paramref name="hostNameOrAddress" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-274">An error is encountered when resolving <paramref name="hostNameOrAddress" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9563-275"><paramref name="hostNameOrAddress" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-275"><paramref name="hostNameOrAddress" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostByAddress">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9563-276">获取 IP 地址的 DNS 主机信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-276">Gets DNS host information for an IP address.</span></span> <span data-ttu-id="b9563-277">这些方法现在已过时。</span><span class="sxs-lookup"><span data-stu-id="b9563-277">These methods are now obsolete.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="b9563-278">一个 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-278">An <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <summary><span data-ttu-id="b9563-279">根据指定的 <see cref="T:System.Net.IPHostEntry" /> 创建 <see cref="T:System.Net.IPAddress" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-279">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from the specified <see cref="T:System.Net.IPAddress" />.</span></span></summary>
        <returns><span data-ttu-id="b9563-280">一个 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-280">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9563-281">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-281">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-282">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-282">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-283">下面的示例从 <xref:System.Net.IPAddress>创建 <xref:System.Net.IPHostEntry>。</span><span class="sxs-lookup"><span data-stu-id="b9563-283">The following example creates a <xref:System.Net.IPHostEntry> from an <xref:System.Net.IPAddress>.</span></span>  
  
 [!code-cpp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CPP/dns_gethostbyaddress_ipaddress.cpp#1)]
 [!code-csharp[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/CS/dns_gethostbyaddress_ipaddress.cs#1)]
 [!code-vb[Dns_GetHostByAddress_IPAddress#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByAddress_IPAddress/VB/dns_gethostbyaddress_ipaddress.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-284"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-284"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-285">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-285">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-286">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-286">for accessing DNS information.</span></span> <span data-ttu-id="b9563-287">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-287">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByAddress">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByAddress(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByAddress(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByAddress (address As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostByAddress : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByAddress address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("GetHostByAddress is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="b9563-288">IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-288">An IP address.</span></span></param>
        <summary><span data-ttu-id="b9563-289">根据 IP 地址创建 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-289">Creates an <see cref="T:System.Net.IPHostEntry" /> instance from an IP address.</span></span></summary>
        <returns><span data-ttu-id="b9563-290">一个 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-290">An <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b9563-291">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-291">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-292">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-293"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-293"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-294">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-294">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="b9563-295"><paramref name="address" /> 不是有效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-295"><paramref name="address" /> is not a valid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-296">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-296">for accessing DNS information.</span></span> <span data-ttu-id="b9563-297">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-297">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostByName">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostByName (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostByName(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostByName (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostByName(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member GetHostByName : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostByName hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("GetHostByName is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="b9563-298">主机的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="b9563-298">The DNS name of the host.</span></span></param>
        <summary><span data-ttu-id="b9563-299">获取指定 DNS 主机名的 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-299">Gets the DNS information for the specified DNS host name.</span></span></summary>
        <returns><span data-ttu-id="b9563-300">一个 <see cref="T:System.Net.IPHostEntry" /> 对象，包含对应于 <paramref name="hostName" /> 中指定的地址的主机信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-300">An <see cref="T:System.Net.IPHostEntry" /> object that contains host information for the address specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-301"><xref:System.Net.Dns.GetHostByName%2A> 方法在 Internet DNS 服务器中查询主机信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-301">The <xref:System.Net.Dns.GetHostByName%2A> method queries the Internet DNS server for host information.</span></span> <span data-ttu-id="b9563-302">如果将空字符串作为主机名传递，则此方法将检索本地计算机的标准主机名。</span><span class="sxs-lookup"><span data-stu-id="b9563-302">If you pass an empty string as the host name, this method retrieves the standard host name for the local computer.</span></span>  
  
 <span data-ttu-id="b9563-303">有关对 DNS 信息的异步访问，请使用 <xref:System.Net.Dns.BeginGetHostByName%2A> 和 <xref:System.Net.Dns.EndGetHostByName%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="b9563-303">For asynchronous access to DNS information, use the <xref:System.Net.Dns.BeginGetHostByName%2A> and <xref:System.Net.Dns.EndGetHostByName%2A> methods.</span></span>  
  
 <span data-ttu-id="b9563-304">如果将 <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> 属性设置为 `true`，则此方法不会填充返回的 <xref:System.Net.IPHostEntry> 实例的 <xref:System.Net.IPHostEntry.Aliases%2A> 属性，该属性将始终为空。</span><span class="sxs-lookup"><span data-stu-id="b9563-304">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-305">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-305">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-306">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-306">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-307">下面的示例使用 <xref:System.Net.Dns.GetHostByName%2A> 方法获取指定 DNS 主机名的 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-307">The following example uses the <xref:System.Net.Dns.GetHostByName%2A> method to get the DNS information for the specified DNS host name.</span></span>  
  
 [!code-cpp[Dns_GetHostByName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostByName/CPP/dns_gethostbyname.cpp#1)]
 [!code-csharp[Dns_GetHostByName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostByName/CS/dns_gethostbyname.cs#1)]
 [!code-vb[Dns_GetHostByName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostByName/VB/dns_gethostbyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-308"><paramref name="hostName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-308"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b9563-309"><paramref name="hostName" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="b9563-309">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-310">解析 <paramref name="hostName" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-310">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-311">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-311">for accessing DNS information.</span></span> <span data-ttu-id="b9563-312">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-312">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntry">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9563-313">将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-313">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (address As IPAddress) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : System.Net.IPAddress -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="b9563-314">IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-314">An IP address.</span></span></param>
        <summary><span data-ttu-id="b9563-315">将 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-315">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b9563-316">一个 <see cref="T:System.Net.IPHostEntry" /> 实例，包含有关 <paramref name="address" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-316">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-317"><xref:System.Net.Dns.GetHostEntry%2A> 方法在 DNS 服务器中查询与 IP 地址关联的 IP 地址和别名。</span><span class="sxs-lookup"><span data-stu-id="b9563-317">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="b9563-318">如果本地计算机未安装 IPv6，则从 <xref:System.Net.Dns.GetHostEntry%2A> 方法的结果中筛选 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-318">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="b9563-319">因此，如果只有 IPv6 结果可用于 `address` 参数，则可以取回空的 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-319">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results were available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="b9563-320">返回的 <xref:System.Net.IPHostEntry> 实例的 <xref:System.Net.IPHostEntry.Aliases%2A> 属性不由此方法填充，并且将始终为空。</span><span class="sxs-lookup"><span data-stu-id="b9563-320">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-321">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-321">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-322">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-322">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  

## Examples  
 <span data-ttu-id="b9563-323">下面的代码示例使用 <xref:System.Net.Dns.GetHostEntry%2A> 方法将 IP 地址解析为 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-323">The following code example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#4)]
 [!code-csharp[System.Net.Dns#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#4)]
 [!code-vb[System.Net.Dns#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-324"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-324"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-325">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-325">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9563-326"><paramref name="address" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-326"><paramref name="address" /> is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-327">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-327">for accessing DNS information.</span></span> <span data-ttu-id="b9563-328">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-328">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntry">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry GetHostEntry (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry GetHostEntry(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntry (hostNameOrAddress As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ GetHostEntry(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntry : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.GetHostEntry hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="b9563-329">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-329">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="b9563-330">将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-330">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b9563-331">一个 <see cref="T:System.Net.IPHostEntry" /> 实例，包含有关 <paramref name="hostNameOrAddress" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-331">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-332"><xref:System.Net.Dns.GetHostEntry%2A> 方法在 DNS 服务器中查询与主机名或 IP 地址关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-332">The <xref:System.Net.Dns.GetHostEntry%2A> method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="b9563-333">如果将空字符串作为 `hostNameOrAddress` 参数传递，则此方法将返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-333">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="b9563-334">如果找不到主机名，则返回的 <xref:System.Net.Sockets.SocketException> 异常的值为11001（Windows 套接 error WSAHOST_NOT_FOUND）。</span><span class="sxs-lookup"><span data-stu-id="b9563-334">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="b9563-335">如果 DNS 服务器没有响应，则可以返回此异常。</span><span class="sxs-lookup"><span data-stu-id="b9563-335">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="b9563-336">如果名称不是正式的主机名或别名，或者无法在要查询的数据库中找到，也可以返回此异常。</span><span class="sxs-lookup"><span data-stu-id="b9563-336">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="b9563-337">如果 `hostNameOrAddress` 参数包含 <xref:System.Net.IPAddress.Any> 或 <xref:System.Net.IPAddress.IPv6Any>，也会返回 <xref:System.ArgumentException> 异常。</span><span class="sxs-lookup"><span data-stu-id="b9563-337">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="b9563-338"><xref:System.Net.Dns.GetHostEntry%2A> 方法假定，如果在 `hostNameOrAddress` 参数中传递了 IP 文本字符串，应用程序需要返回的 <xref:System.Net.IPHostEntry> 实例，并设置了所有属性。</span><span class="sxs-lookup"><span data-stu-id="b9563-338">The <xref:System.Net.Dns.GetHostEntry%2A> method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="b9563-339">这些属性包括 <xref:System.Net.IPHostEntry.AddressList%2A>、<xref:System.Net.IPHostEntry.Aliases%2A>和 <xref:System.Net.IPHostEntry.HostName%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9563-339">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="b9563-340">因此，在传递 IP 字符串时，<xref:System.Net.Dns.GetHostEntry%2A> 方法的实现会出现以下行为：</span><span class="sxs-lookup"><span data-stu-id="b9563-340">As a result, the implementation of the <xref:System.Net.Dns.GetHostEntry%2A> method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="b9563-341">此方法尝试分析地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-341">The method tries to parse the address.</span></span> <span data-ttu-id="b9563-342">如果 `hostNameOrAddress` 参数包含合法 IP 字符串，则第一个阶段将成功。</span><span class="sxs-lookup"><span data-stu-id="b9563-342">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="b9563-343">尝试使用 IP 字符串的 IP 地址的反向查找获取主机名。</span><span class="sxs-lookup"><span data-stu-id="b9563-343">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="b9563-344">此结果设置为 <xref:System.Net.IPHostEntry.HostName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b9563-344">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="b9563-345">此反向查找中的主机名将再次用于获取与该名称关联的所有可能的 IP 地址，并将其设置为 <xref:System.Net.IPHostEntry.AddressList%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b9563-345">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="b9563-346">对于 IPv4 字符串，上述三个步骤可能会成功。</span><span class="sxs-lookup"><span data-stu-id="b9563-346">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="b9563-347">但对于实际属于不同主机的 IPv4 地址，可以使用陈旧的 DNS 记录。</span><span class="sxs-lookup"><span data-stu-id="b9563-347">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="b9563-348">这可能会导致步骤 #3 失败并引发异常（存在 IPv4 地址的 DNS PTR 记录，但没有 IPv4 地址的 DNS A 记录）。</span><span class="sxs-lookup"><span data-stu-id="b9563-348">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="b9563-349">对于 IPv6，以上步骤 #2 可能会失败，因为大多数 IPv6 部署不会为 IPv6 地址注册反向（PTR）记录。</span><span class="sxs-lookup"><span data-stu-id="b9563-349">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="b9563-350">因此，此方法可能返回字符串 IPv6 文本作为 <xref:System.Net.IPHostEntry.HostName%2A> 属性中的完全限定的域（FQDN）主机名。</span><span class="sxs-lookup"><span data-stu-id="b9563-350">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="b9563-351">对于 IP 文本，<xref:System.Net.Dns.GetHostAddresses%2A> 方法具有不同的行为。</span><span class="sxs-lookup"><span data-stu-id="b9563-351">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="b9563-352">如果上面的步骤 #1 成功（它成功分析为 IP 地址），则会立即返回该地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-352">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="b9563-353">不会在反向查找中尝试。</span><span class="sxs-lookup"><span data-stu-id="b9563-353">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="b9563-354">如果本地计算机未安装 IPv6，则从 <xref:System.Net.Dns.GetHostEntry%2A> 方法的结果中筛选 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-354">IPv6 addresses are filtered from the results of the <xref:System.Net.Dns.GetHostEntry%2A> method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="b9563-355">因此，如果只有适用于 `hostNameOrAddress`. 参数的 IPv6 结果，就有可能返回空的 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-355">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="b9563-356">返回的 <xref:System.Net.IPHostEntry> 实例的 <xref:System.Net.IPHostEntry.Aliases%2A> 属性不由此方法填充，并且将始终为空。</span><span class="sxs-lookup"><span data-stu-id="b9563-356">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-357">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-357">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-358">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-358">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-359">下面的示例使用 <xref:System.Net.Dns.GetHostEntry%2A> 方法将 IP 地址解析为 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-359">The following example uses the <xref:System.Net.Dns.GetHostEntry%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[System.Net.Dns#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Dns/CPP/dnsnewmethods.cpp#1)]
 [!code-csharp[System.Net.Dns#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Dns/CS/dnsnewmethods.cs#1)]
 [!code-vb[System.Net.Dns#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Dns/vb/dnsnewmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-360"><paramref name="hostNameOrAddress" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-360">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b9563-361"><paramref name="hostNameOrAddress" /> 参数的长度大于 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="b9563-361">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-362">解析 <paramref name="hostNameOrAddress" /> 参数时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-362">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9563-363"><paramref name="hostNameOrAddress" /> 参数是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-363">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-364">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-364">for accessing DNS information.</span></span> <span data-ttu-id="b9563-365">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-365">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHostEntryAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b9563-366">将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="b9563-366">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (System.Net.IPAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(class System.Net.IPAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (address As IPAddress) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::Net::IPAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : System.Net.IPAddress -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="b9563-367">IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-367">An IP address.</span></span></param>
        <summary><span data-ttu-id="b9563-368">将 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="b9563-368">Resolves an IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b9563-369">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="b9563-369">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b9563-370">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回 <see cref="T:System.Net.IPHostEntry" /> 实例，该实例包含有关 <paramref name="address" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-370">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="address" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-371">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-371">This operation will not block.</span></span> <span data-ttu-id="b9563-372">`address` 解决后，返回的 <xref:System.Threading.Tasks.Task%601> 对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="b9563-372">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `address` has been resolved.</span></span>  
  
 <span data-ttu-id="b9563-373">此方法在 DNS 服务器中查询与 IP 地址关联的 IP 地址和别名。</span><span class="sxs-lookup"><span data-stu-id="b9563-373">This method queries a DNS server for the IP addresses and aliases associated with an IP address.</span></span>  
  
 <span data-ttu-id="b9563-374">如果本地计算机未安装 IPv6，则将根据此方法的结果筛选 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-374">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="b9563-375">因此，如果只有 IPv6 结果可用于 `address` 参数，则可以返回空的 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-375">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `address` parameter.</span></span>  
  
 <span data-ttu-id="b9563-376">返回的 <xref:System.Net.IPHostEntry> 实例的 <xref:System.Net.IPHostEntry.Aliases%2A> 属性不由此方法填充，并且将始终为空。</span><span class="sxs-lookup"><span data-stu-id="b9563-376">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-377">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-377">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-378">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-378">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-379"><paramref name="address" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-379"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-380">解析 <paramref name="address" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-380">An error is encountered when resolving <paramref name="address" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9563-381"><paramref name="address" /> 是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-381"><paramref name="address" /> is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostEntryAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt; GetHostEntryAsync (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Net.IPHostEntry&gt; GetHostEntryAsync(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostEntryAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostEntryAsync (hostNameOrAddress As String) As Task(Of IPHostEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task&lt;System::Net::IPHostEntry ^&gt; ^ GetHostEntryAsync(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="static member GetHostEntryAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;" Usage="System.Net.Dns.GetHostEntryAsync hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.IPHostEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress"><span data-ttu-id="b9563-382">要解析的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-382">The host name or IP address to resolve.</span></span></param>
        <summary><span data-ttu-id="b9563-383">将主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="b9563-383">Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b9563-384">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="b9563-384">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b9563-385">任务对象上的 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 属性返回 <see cref="T:System.Net.IPHostEntry" /> 实例，该实例包含有关 <paramref name="hostNameOrAddress" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-385">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostNameOrAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-386">此操作不会阻止。</span><span class="sxs-lookup"><span data-stu-id="b9563-386">This operation will not block.</span></span> <span data-ttu-id="b9563-387">`hostNameOrAddress` 解决后，返回的 <xref:System.Threading.Tasks.Task%601> 对象将会完成。</span><span class="sxs-lookup"><span data-stu-id="b9563-387">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the `hostNameOrAddress` has been resolved.</span></span>  
  
 <span data-ttu-id="b9563-388">此方法在 DNS 服务器中查询与主机名或 IP 地址相关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-388">This method queries a DNS server for the IP address that is associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="b9563-389">如果将空字符串作为 `hostNameOrAddress` 参数传递，则此方法将返回本地主机的 IPv4 和 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-389">If an empty string is passed as the `hostNameOrAddress` argument, then this method returns the IPv4 and IPv6 addresses of the local host.</span></span>
  
 <span data-ttu-id="b9563-390">如果找不到主机名，则返回的 <xref:System.Net.Sockets.SocketException> 异常的值为11001（Windows 套接 error WSAHOST_NOT_FOUND）。</span><span class="sxs-lookup"><span data-stu-id="b9563-390">If the host name could not be found, the <xref:System.Net.Sockets.SocketException> exception is returned with a value of 11001 (Windows Sockets error WSAHOST_NOT_FOUND).</span></span> <span data-ttu-id="b9563-391">如果 DNS 服务器没有响应，则可以返回此异常。</span><span class="sxs-lookup"><span data-stu-id="b9563-391">This exception can be returned if the DNS server does not respond.</span></span> <span data-ttu-id="b9563-392">如果名称不是正式的主机名或别名，或者无法在要查询的数据库中找到，也可以返回此异常。</span><span class="sxs-lookup"><span data-stu-id="b9563-392">This exception can also be returned if the name is not an official host name or alias, or it cannot be found in the database(s) being queried.</span></span>  
  
 <span data-ttu-id="b9563-393">如果 `hostNameOrAddress` 参数包含 <xref:System.Net.IPAddress.Any> 或 <xref:System.Net.IPAddress.IPv6Any>，也会返回 <xref:System.ArgumentException> 异常。</span><span class="sxs-lookup"><span data-stu-id="b9563-393">The <xref:System.ArgumentException> exception is also returned if the `hostNameOrAddress` parameter contains <xref:System.Net.IPAddress.Any> or <xref:System.Net.IPAddress.IPv6Any>.</span></span>  
  
 <span data-ttu-id="b9563-394">此方法假定如果在 `hostNameOrAddress` 参数中传递 IP 文本字符串，应用程序需要使用所有属性集返回的 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-394">This method assumes that if an IP literal string is passed in the `hostNameOrAddress` parameter that the application wants an <xref:System.Net.IPHostEntry> instance returned with all of the properties set.</span></span> <span data-ttu-id="b9563-395">这些属性包括 <xref:System.Net.IPHostEntry.AddressList%2A>、<xref:System.Net.IPHostEntry.Aliases%2A>和 <xref:System.Net.IPHostEntry.HostName%2A>。</span><span class="sxs-lookup"><span data-stu-id="b9563-395">These properties include the <xref:System.Net.IPHostEntry.AddressList%2A>, <xref:System.Net.IPHostEntry.Aliases%2A>, and <xref:System.Net.IPHostEntry.HostName%2A>.</span></span> <span data-ttu-id="b9563-396">因此，在传递 IP 字符串时，此方法的实现表现如下：</span><span class="sxs-lookup"><span data-stu-id="b9563-396">As a result, the implementation of this method exhibits the following behavior when an IP string literal is passed:</span></span>  
  
1.  <span data-ttu-id="b9563-397">此方法尝试分析地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-397">The method tries to parse the address.</span></span> <span data-ttu-id="b9563-398">如果 `hostNameOrAddress` 参数包含合法 IP 字符串，则第一个阶段将成功。</span><span class="sxs-lookup"><span data-stu-id="b9563-398">If the `hostNameOrAddress` parameter contains a legal IP string literal, then the first phase succeeds.</span></span>  
  
2.  <span data-ttu-id="b9563-399">尝试使用 IP 字符串的 IP 地址的反向查找获取主机名。</span><span class="sxs-lookup"><span data-stu-id="b9563-399">A reverse lookup using the IP address of the IP string literal is attempted to obtain the host name.</span></span> <span data-ttu-id="b9563-400">此结果设置为 <xref:System.Net.IPHostEntry.HostName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b9563-400">This result is set as the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
3.  <span data-ttu-id="b9563-401">此反向查找中的主机名将再次用于获取与该名称关联的所有可能的 IP 地址，并将其设置为 <xref:System.Net.IPHostEntry.AddressList%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b9563-401">The host name from this reverse lookup is used again to obtain all the possible IP addresses associated with the name and set as the <xref:System.Net.IPHostEntry.AddressList%2A> property.</span></span>  
  
 <span data-ttu-id="b9563-402">对于 IPv4 字符串，上述三个步骤可能会成功。</span><span class="sxs-lookup"><span data-stu-id="b9563-402">For an IPv4 string literal, all three steps above may succeed.</span></span> <span data-ttu-id="b9563-403">但对于实际属于不同主机的 IPv4 地址，可以使用陈旧的 DNS 记录。</span><span class="sxs-lookup"><span data-stu-id="b9563-403">But it is possible for a stale DNS record for an IPv4 address that actually belongs to a different host to be returned.</span></span> <span data-ttu-id="b9563-404">这可能会导致步骤 #3 失败并引发异常（存在 IPv4 地址的 DNS PTR 记录，但没有 IPv4 地址的 DNS A 记录）。</span><span class="sxs-lookup"><span data-stu-id="b9563-404">This may cause step #3 to fail and throw an exception (there is a DNS PTR record for the IPv4 address, but no DNS A record for the IPv4 address).</span></span>  
  
 <span data-ttu-id="b9563-405">对于 IPv6，以上步骤 #2 可能会失败，因为大多数 IPv6 部署不会为 IPv6 地址注册反向（PTR）记录。</span><span class="sxs-lookup"><span data-stu-id="b9563-405">For IPv6, step #2 above may fail, since most IPv6 deployments do not register the reverse (PTR) record for an IPv6 address.</span></span> <span data-ttu-id="b9563-406">因此，此方法可能返回字符串 IPv6 文本作为 <xref:System.Net.IPHostEntry.HostName%2A> 属性中的完全限定的域（FQDN）主机名。</span><span class="sxs-lookup"><span data-stu-id="b9563-406">So this method may return the string IPv6 literal as the fully-qualified domain (FQDN) host name in the <xref:System.Net.IPHostEntry.HostName%2A> property.</span></span>  
  
 <span data-ttu-id="b9563-407">对于 IP 文本，<xref:System.Net.Dns.GetHostAddresses%2A> 方法具有不同的行为。</span><span class="sxs-lookup"><span data-stu-id="b9563-407">The <xref:System.Net.Dns.GetHostAddresses%2A> method has different behavior with respect to IP literals.</span></span> <span data-ttu-id="b9563-408">如果上面的步骤 #1 成功（它成功分析为 IP 地址），则会立即返回该地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-408">If step #1 above succeeds (it successfully parses as an IP address), that address is immediately returned as the result.</span></span> <span data-ttu-id="b9563-409">不会在反向查找中尝试。</span><span class="sxs-lookup"><span data-stu-id="b9563-409">There is no attempt at a reverse lookup.</span></span>  
  
 <span data-ttu-id="b9563-410">如果本地计算机未安装 IPv6，则将根据此方法的结果筛选 IPv6 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-410">IPv6 addresses are filtered from the results of this method if the local computer does not have IPv6 installed.</span></span> <span data-ttu-id="b9563-411">因此，如果只有适用于 `hostNameOrAddress`. 参数的 IPv6 结果，就有可能返回空的 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-411">As a result, it is possible to get back an empty <xref:System.Net.IPHostEntry> instance if only IPv6 results where available for the `hostNameOrAddress`.parameter.</span></span>  
  
 <span data-ttu-id="b9563-412">返回的 <xref:System.Net.IPHostEntry> 实例的 <xref:System.Net.IPHostEntry.Aliases%2A> 属性不由此方法填充，并且将始终为空。</span><span class="sxs-lookup"><span data-stu-id="b9563-412">The <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  

 <span data-ttu-id="b9563-413">此方法是使用基础操作系统的名称解析 Api （例如，Windows 上的 Win32 API getaddrinfo 和其他平台上的等效 Api）实现的。</span><span class="sxs-lookup"><span data-stu-id="b9563-413">This method is implemented using the underlying operating system's name resolution APIs (such as the Win32 API getaddrinfo on Windows, and equivalent APIs on other platforms).</span></span>  <span data-ttu-id="b9563-414">如果 `hosts` 文件中介绍了主机，则在不查询 DNS 服务器的情况下将返回其中的一个或多个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-414">If a host is described in the `hosts` file, the IP address or addresses there will be returned without querying the DNS server.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="b9563-415">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-415">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-416">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-416">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-417"><paramref name="hostNameOrAddress" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-417">The <paramref name="hostNameOrAddress" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b9563-418"><paramref name="hostNameOrAddress" /> 参数的长度大于 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="b9563-418">The length of <paramref name="hostNameOrAddress" /> parameter is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-419">解析 <paramref name="hostNameOrAddress" /> 参数时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-419">An error was encountered when resolving the <paramref name="hostNameOrAddress" /> parameter.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b9563-420"><paramref name="hostNameOrAddress" /> 参数是无效的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-420">The <paramref name="hostNameOrAddress" /> parameter is an invalid IP address.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostName">
      <MemberSignature Language="C#" Value="public static string GetHostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetHostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.GetHostName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHostName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetHostName();" />
      <MemberSignature Language="F#" Value="static member GetHostName : unit -&gt; string" Usage="System.Net.Dns.GetHostName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9563-421">获取本地计算机的主机名。</span><span class="sxs-lookup"><span data-stu-id="b9563-421">Gets the host name of the local computer.</span></span></summary>
        <returns><span data-ttu-id="b9563-422">包含本地计算机的 DNS 主机名的字符串。</span><span class="sxs-lookup"><span data-stu-id="b9563-422">A string that contains the DNS host name of the local computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b9563-423">下面的示例使用 <xref:System.Net.Dns.GetHostName%2A> 方法获取本地计算机的主机名。</span><span class="sxs-lookup"><span data-stu-id="b9563-423">The following example uses the <xref:System.Net.Dns.GetHostName%2A> method to obtain the host name of the local computer.</span></span>  
  
 [!code-cpp[Dns_GetHostName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_GetHostName/CPP/dns_gethostname.cpp#1)]
 [!code-csharp[Dns_GetHostName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_GetHostName/CS/dns_gethostname.cs#1)]
 [!code-vb[Dns_GetHostName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_GetHostName/VB/dns_gethostname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-424">解析本地主机名时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-424">An error is encountered when resolving the local host name.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-425">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-425">for accessing DNS information.</span></span> <span data-ttu-id="b9563-426">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-426">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.Net.IPHostEntry Resolve (string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPHostEntry Resolve(string hostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Dns.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (hostName As String) As IPHostEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPHostEntry ^ Resolve(System::String ^ hostName);" />
      <MemberSignature Language="F#" Value="static member Resolve : string -&gt; System.Net.IPHostEntry" Usage="System.Net.Dns.Resolve hostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NameResolution</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use GetHostEntry instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("Resolve is obsoleted for this type, please use GetHostEntry instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPHostEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="hostName"><span data-ttu-id="b9563-427">DNS 样式的主机名或 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-427">A DNS-style host name or IP address.</span></span></param>
        <summary><span data-ttu-id="b9563-428">将 DNS 主机名或 IP 地址解析为 <see cref="T:System.Net.IPHostEntry" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-428">Resolves a DNS host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</span></span></summary>
        <returns><span data-ttu-id="b9563-429">一个 <see cref="T:System.Net.IPHostEntry" /> 实例，包含有关 <paramref name="hostName" /> 中指定的主机的地址信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-429">An <see cref="T:System.Net.IPHostEntry" /> instance that contains address information about the host specified in <paramref name="hostName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9563-430"><xref:System.Net.Dns.Resolve%2A> 方法在 DNS 服务器中查询与主机名或 IP 地址关联的 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-430">The <xref:System.Net.Dns.Resolve%2A> method queries a DNS server for the IP address associated with a host name or IP address.</span></span>  
  
 <span data-ttu-id="b9563-431">当 `hostName` 是与多个 IP 地址关联的 DNS 样式的主机名时，将只返回解析为该主机名的第一个 IP 地址。</span><span class="sxs-lookup"><span data-stu-id="b9563-431">When `hostName` is a DNS-style host name associated with multiple IP addresses, only the first IP address that resolves to that host name is returned.</span></span>  
  
 <span data-ttu-id="b9563-432">如果将 <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> 属性设置为 `true`，则此方法不会填充返回的 <xref:System.Net.IPHostEntry> 实例的 <xref:System.Net.IPHostEntry.Aliases%2A> 属性，该属性将始终为空。</span><span class="sxs-lookup"><span data-stu-id="b9563-432">If the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A?displayProperty=nameWithType> property is set to `true`, the <xref:System.Net.IPHostEntry.Aliases%2A> property of the <xref:System.Net.IPHostEntry> instance returned is not populated by this method and will always be empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9563-433">在应用程序中启用网络跟踪后，此成员将发出跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-433">This member emits trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b9563-434">有关详细信息，请参阅[.NET Framework 中的网络跟踪](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="b9563-434">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9563-435">下面的示例使用 <xref:System.Net.Dns.Resolve%2A> 方法将 IP 地址解析为 <xref:System.Net.IPHostEntry> 实例。</span><span class="sxs-lookup"><span data-stu-id="b9563-435">The following example uses the <xref:System.Net.Dns.Resolve%2A> method to resolve an IP address to an <xref:System.Net.IPHostEntry> instance.</span></span>  
  
 [!code-cpp[Dns_Resolve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Dns_Resolve/CPP/dns_resolve.cpp#1)]
 [!code-csharp[Dns_Resolve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Dns_Resolve/CS/dns_resolve.cs#1)]
 [!code-vb[Dns_Resolve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Dns_Resolve/VB/dns_resolve.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b9563-436"><paramref name="hostName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b9563-436"><paramref name="hostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b9563-437"><paramref name="hostName" /> 的长度超过 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="b9563-437">The length of <paramref name="hostName" /> is greater than 255 characters.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b9563-438">解析 <paramref name="hostName" /> 时遇到错误。</span><span class="sxs-lookup"><span data-stu-id="b9563-438">An error is encountered when resolving <paramref name="hostName" />.</span></span></exception>
        <permission cref="T:System.Net.DnsPermission"><span data-ttu-id="b9563-439">用于访问 DNS 信息。</span><span class="sxs-lookup"><span data-stu-id="b9563-439">for accessing DNS information.</span></span> <span data-ttu-id="b9563-440">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="b9563-440">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
