<Type Name="Single" FullName="System.Single">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e85f1c716db939453f4c282f59f5bee435b5009" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73383896" /></Metadata><TypeSignature Language="C#" Value="public struct Single : IComparable, IComparable&lt;float&gt;, IConvertible, IEquatable&lt;float&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit float32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;float32&gt;, class System.IConvertible, class System.IEquatable`1&lt;float32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Single" />
  <TypeSignature Language="VB.NET" Value="Public Structure Single&#xA;Implements IComparable, IComparable(Of Single), IConvertible, IEquatable(Of Single), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Single : IComparable, IComparable&lt;float&gt;, IConvertible, IEquatable&lt;float&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type single = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Single&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1216-101">表示一个单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-101">Represents a single-precision floating-point number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-102"><xref:System.Single> 值类型表示单精度32位数字，其值范围从负 3.402823 e 38 到正 3.402823 e 38，以及正或负零、<xref:System.Single.PositiveInfinity>、<xref:System.Single.NegativeInfinity>，而不是数字（<xref:System.Single.NaN>）。</span><span class="sxs-lookup"><span data-stu-id="a1216-102">The <xref:System.Single> value type represents a single-precision 32-bit number with values ranging from negative 3.402823e38 to positive 3.402823e38, as well as positive or negative zero, <xref:System.Single.PositiveInfinity>, <xref:System.Single.NegativeInfinity>, and not a number (<xref:System.Single.NaN>).</span></span> <span data-ttu-id="a1216-103">它用于表示非常大的值（例如行星或 galaxies 之间的距离）或极小的值（例如，物质的分子质量，以千克为间隔），并且通常不精确（如从地球到另一颗太阳系的距离。).</span><span class="sxs-lookup"><span data-stu-id="a1216-103">It is intended to represent values that are extremely large (such as distances between planets or galaxies) or extremely small (such as the molecular mass of a substance in kilograms) and that often are imprecise (such as the distance from earth to another solar system).</span></span> <span data-ttu-id="a1216-104"><xref:System.Single> 类型符合二元浮点算术的 IEC 60559:1989 （IEEE 754）标准。</span><span class="sxs-lookup"><span data-stu-id="a1216-104">The <xref:System.Single> type complies with the IEC 60559:1989 (IEEE 754) standard for binary floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="a1216-105">本主题包括以下各节：</span><span class="sxs-lookup"><span data-stu-id="a1216-105">This topic consists of the following sections:</span></span>  
  
-   [<span data-ttu-id="a1216-106">浮点表示形式和精度</span><span class="sxs-lookup"><span data-stu-id="a1216-106">Floating-point representation and precision</span></span>](#Precision)  
  
-   [<span data-ttu-id="a1216-107">测试是否相等</span><span class="sxs-lookup"><span data-stu-id="a1216-107">Testing for equality</span></span>](#Equality)  
  
-   [<span data-ttu-id="a1216-108">浮点值和异常</span><span class="sxs-lookup"><span data-stu-id="a1216-108">Floating-point values and exceptions</span></span>](#Exceptions)  
  
-   [<span data-ttu-id="a1216-109">类型转换和单结构</span><span class="sxs-lookup"><span data-stu-id="a1216-109">Type conversion and the Single structure</span></span>](#Conversion)  
  
-   [<span data-ttu-id="a1216-110">浮点型功能</span><span class="sxs-lookup"><span data-stu-id="a1216-110">Floating-point functionality</span></span>](#Functionality)  
  
 <span data-ttu-id="a1216-111"><xref:System.Single?displayProperty=nameWithType> 提供了一些方法，用于比较此类型的实例，将实例的值转换为其字符串表示形式，并将数字的字符串表示形式转换为此类型的实例。</span><span class="sxs-lookup"><span data-stu-id="a1216-111"><xref:System.Single?displayProperty=nameWithType> provides methods to compare instances of this type, to convert the value of an instance to its string representation, and to convert the string representation of a number to an instance of this type.</span></span> <span data-ttu-id="a1216-112">有关格式规范代码如何控制值类型的字符串表示形式的信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)、[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-112">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
<a name="Precision"></a>   
## <a name="floating-point-representation-and-precision"></a><span data-ttu-id="a1216-113">浮点表示形式和精度</span><span class="sxs-lookup"><span data-stu-id="a1216-113">Floating-point representation and precision</span></span>  
 <span data-ttu-id="a1216-114"><xref:System.Single> 数据类型以32位二进制格式存储单精度浮点值，如下表所示：</span><span class="sxs-lookup"><span data-stu-id="a1216-114">The <xref:System.Single> data type stores single-precision floating-point values in a 32-bit binary format, as shown in the following table:</span></span>  
  
|<span data-ttu-id="a1216-115">部件</span><span class="sxs-lookup"><span data-stu-id="a1216-115">Part</span></span>|<span data-ttu-id="a1216-116">Bits</span><span class="sxs-lookup"><span data-stu-id="a1216-116">Bits</span></span>|  
|----------|----------|  
|<span data-ttu-id="a1216-117">有效位数或尾数</span><span class="sxs-lookup"><span data-stu-id="a1216-117">Significand or mantissa</span></span>|<span data-ttu-id="a1216-118">0-22</span><span class="sxs-lookup"><span data-stu-id="a1216-118">0-22</span></span>|  
|<span data-ttu-id="a1216-119">加</span><span class="sxs-lookup"><span data-stu-id="a1216-119">Exponent</span></span>|<span data-ttu-id="a1216-120">23-30</span><span class="sxs-lookup"><span data-stu-id="a1216-120">23-30</span></span>|  
|<span data-ttu-id="a1216-121">Sign （0 = 正，1 = 负值）</span><span class="sxs-lookup"><span data-stu-id="a1216-121">Sign (0 = positive, 1 = negative)</span></span>|<span data-ttu-id="a1216-122">31</span><span class="sxs-lookup"><span data-stu-id="a1216-122">31</span></span>|  
  
 <span data-ttu-id="a1216-123">正如小数部分无法精确表示某些小数值（如1/3 或 <xref:System.Math.PI?displayProperty=nameWithType>），二进制小数无法表示某些小数值。</span><span class="sxs-lookup"><span data-stu-id="a1216-123">Just as decimal fractions are unable to precisely represent some fractional values (such as 1/3 or <xref:System.Math.PI?displayProperty=nameWithType>), binary fractions are unable to represent some fractional values.</span></span> <span data-ttu-id="a1216-124">例如，2/10 以 .2 的形式精确表示为小数部分，以二进制小数0011111001001100表示，其模式为 "1100" 重复到无限大。</span><span class="sxs-lookup"><span data-stu-id="a1216-124">For example, 2/10, which is represented precisely by .2 as a decimal fraction, is represented by .0011111001001100 as a binary fraction, with the pattern "1100" repeating to infinity.</span></span> <span data-ttu-id="a1216-125">在这种情况下，浮点值提供它所表示的数字的不精确表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-125">In this case, the floating-point value provides an imprecise representation of the number that it represents.</span></span> <span data-ttu-id="a1216-126">对原始浮点值执行其他数学运算通常会增加其精度。</span><span class="sxs-lookup"><span data-stu-id="a1216-126">Performing additional mathematical operations on the original floating-point value often increases its lack of precision.</span></span> <span data-ttu-id="a1216-127">例如，如果比较 .3 乘以10的结果并将 .3 添加到 3 9 次，则您将看到加法产生的结果不太精确，因为它涉及到与乘法的8个以上的操作。</span><span class="sxs-lookup"><span data-stu-id="a1216-127">For example, if you compare the results of multiplying .3 by 10 and adding .3 to .3 nine times, you will see that addition produces the less precise result, because it involves eight more operations than multiplication.</span></span> <span data-ttu-id="a1216-128">请注意，仅当使用 "R"[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)显示两个 <xref:System.Single> 值时，此差异才明显，如有必要，将显示 <xref:System.Single> 类型所支持的所有9位精度。</span><span class="sxs-lookup"><span data-stu-id="a1216-128">Note that this disparity is apparent only if you display the two <xref:System.Single> values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md), which, if necessary, displays all 9 digits of precision supported by the <xref:System.Single> type.</span></span>  
  
 [!code-csharp[System.Single.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/representation1.cs#3)]
 [!code-vb[System.Single.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/representation1.vb#3)]  
  
 <span data-ttu-id="a1216-129">由于某些数字不能精确表示为小数部分的二进制值，因此浮点数只能近似于实数。</span><span class="sxs-lookup"><span data-stu-id="a1216-129">Because some numbers cannot be represented exactly as fractional binary values, floating-point numbers can only approximate real numbers.</span></span>  
  
 <span data-ttu-id="a1216-130">所有浮点数都具有有限数量的有效数字，还决定了浮点值接近于实数的准确程度。</span><span class="sxs-lookup"><span data-stu-id="a1216-130">All floating-point numbers have a limited number of significant digits, which also determines how accurately a floating-point value approximates a real number.</span></span> <span data-ttu-id="a1216-131"><xref:System.Single> 值最多具有7个小数位数，但在内部维护最多9位数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-131">A <xref:System.Single> value has up to 7 decimal digits of precision, although a maximum of 9 digits is maintained internally.</span></span> <span data-ttu-id="a1216-132">这意味着，某些浮点运算可能缺乏更改浮点值的精度。</span><span class="sxs-lookup"><span data-stu-id="a1216-132">This means that some floating-point operations may lack the precision to change a floating-point value.</span></span> <span data-ttu-id="a1216-133">下面的示例定义了一个大的单精度浮点值，然后在其中添加了 <xref:System.Single.Epsilon?displayProperty=nameWithType> 的产品和一个千万亿。</span><span class="sxs-lookup"><span data-stu-id="a1216-133">The following example defines a large single-precision floating-point value, and then adds the product of <xref:System.Single.Epsilon?displayProperty=nameWithType> and one quadrillion to it.</span></span> <span data-ttu-id="a1216-134">但是，该产品太小，无法修改原始浮点值。</span><span class="sxs-lookup"><span data-stu-id="a1216-134">However, the product is too small to modify the original floating-point value.</span></span> <span data-ttu-id="a1216-135">它的最小有效位数为千分之几，而产品中最重要的位是 10<sup>-30</sup>。</span><span class="sxs-lookup"><span data-stu-id="a1216-135">Its least significant digit is thousandths, whereas the most significant digit in the product is 10<sup>-30</sup>.</span></span>  
  
 [!code-csharp[System.Single.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/representation2.cs#4)]
 [!code-vb[System.Single.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/representation2.vb#4)]  
  
 <span data-ttu-id="a1216-136">浮点数的有限精度有几个后果：</span><span class="sxs-lookup"><span data-stu-id="a1216-136">The limited precision of a floating-point number has several consequences:</span></span>  
  
-   <span data-ttu-id="a1216-137">对于特定精度，看起来相等的两个浮点数可能不相等，因为其最小有效位不同。</span><span class="sxs-lookup"><span data-stu-id="a1216-137">Two floating-point numbers that appear equal for a particular precision might not compare equal because their least significant digits are different.</span></span> <span data-ttu-id="a1216-138">在下面的示例中，将一系列数字添加在一起，并将其总计与预期的总数进行比较。</span><span class="sxs-lookup"><span data-stu-id="a1216-138">In the following example, a series of numbers are added together, and their total is compared with their expected total.</span></span> <span data-ttu-id="a1216-139">尽管这两个值看起来是相同的，但对 `Equals` 方法的调用表示它们不是。</span><span class="sxs-lookup"><span data-stu-id="a1216-139">Although the two values appear to be the same, a call to the `Equals` method indicates that they are not.</span></span>  
  
     [!code-csharp[System.Single.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/precisionlist3.cs#6)]
     [!code-vb[System.Single.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/precisionlist3.vb#6)]  
  
     <span data-ttu-id="a1216-140">如果将 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType> 语句中的格式项从 `{0}` 和 `{1}` 更改为 `{0:R}`，并使用 `{1:R}` 显示两个 <xref:System.Single> 值的所有有效位，则可以清楚地表明这两个值不相等，因为精度损失在添加操作期间。</span><span class="sxs-lookup"><span data-stu-id="a1216-140">If you change the format items in the <xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType> statement from `{0}` and `{1}` to `{0:R}` and `{1:R}` to display all significant digits of the two <xref:System.Single> values, it is clear that the two values are unequal because of a loss of precision during the addition operations.</span></span> <span data-ttu-id="a1216-141">在这种情况下，可以通过调用 <xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType> 方法，在执行比较之前将 <xref:System.Single> 值舍入到所需精度来解决该问题。</span><span class="sxs-lookup"><span data-stu-id="a1216-141">In this case, the issue can be resolved by calling the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType> method to round the <xref:System.Single> values to the desired precision before performing the comparison.</span></span>  
  
-   <span data-ttu-id="a1216-142">如果使用的是十进制数，则使用浮点数的算术或比较运算可能不会产生相同的结果，因为二进制浮点数可能不等于十进制数。</span><span class="sxs-lookup"><span data-stu-id="a1216-142">A mathematical or comparison operation that uses a floating-point number might not yield the same result if a decimal number is used, because the binary floating-point number might not equal the decimal number.</span></span> <span data-ttu-id="a1216-143">前面的示例通过显示乘以 .3 乘以10的结果并将 .3 添加到 3 9 次，阐释了这一点。</span><span class="sxs-lookup"><span data-stu-id="a1216-143">A previous example illustrated this by displaying the result of multiplying .3 by 10 and adding .3 to .3 nine times.</span></span>  
  
     <span data-ttu-id="a1216-144">当包含小数值的数值操作的准确性非常重要时，请使用 <xref:System.Decimal> 类型，而不要使用 <xref:System.Single> 类型。</span><span class="sxs-lookup"><span data-stu-id="a1216-144">When accuracy in numeric operations with fractional values is important, use the <xref:System.Decimal> type instead of the <xref:System.Single> type.</span></span> <span data-ttu-id="a1216-145">当整数值超出 <xref:System.Int64> 范围或 <xref:System.UInt64> 类型的数值运算的精度很重要时，请使用 <xref:System.Numerics.BigInteger> 类型。</span><span class="sxs-lookup"><span data-stu-id="a1216-145">When accuracy in numeric operations with integral values beyond the range of the <xref:System.Int64> or <xref:System.UInt64> types is important, use the <xref:System.Numerics.BigInteger> type.</span></span>  
  
-   <span data-ttu-id="a1216-146">如果涉及浮点数，值可能不会往返。</span><span class="sxs-lookup"><span data-stu-id="a1216-146">A value might not round-trip if a floating-point number is involved.</span></span> <span data-ttu-id="a1216-147">如果某个操作将原始浮点数转换为另一种格式，则会将值转换为舍入，而反向运算会将转换后的窗体转换回浮点数，最后浮点数等于原始的浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-147">A value is said to round-trip if an operation converts an original floating-point number to another form, an inverse operation transforms the converted form back to a floating-point number, and the final floating-point number is equal to the original floating-point number.</span></span> <span data-ttu-id="a1216-148">往返过程可能会失败，因为在转换过程中一个或多个最小有效位会丢失或更改。</span><span class="sxs-lookup"><span data-stu-id="a1216-148">The round trip might fail because one or more least significant digits are lost or changed in a conversion.</span></span> <span data-ttu-id="a1216-149">在下面的示例中，三个 <xref:System.Single> 值将转换为字符串，并保存在一个文件中。</span><span class="sxs-lookup"><span data-stu-id="a1216-149">In the following example, three <xref:System.Single> values are converted to strings and saved in a file.</span></span> <span data-ttu-id="a1216-150">如输出所示，尽管值看起来相同，但还原的值并不等于原始值。</span><span class="sxs-lookup"><span data-stu-id="a1216-150">As the output shows, although the values appear to be identical, the restored values are not equal to the original values.</span></span>  
  
     [!code-csharp[System.Single.Structure#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/precisionlist4a.cs#17)]
     [!code-vb[System.Single.Structure#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/PrecisionList4a.vb#17)]  
  
     <span data-ttu-id="a1216-151">在这种情况下，可以使用 "G9"[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)将值成功舍入，以保留 <xref:System.Single> 值的完全精度，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="a1216-151">In this case, the values can be successfully round-tripped by using the "G9" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to preserve the full precision of <xref:System.Single> values, as the following example shows.</span></span>  
  
     [!code-csharp[System.Single.Structure#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/PrecisionList5a.cs#18)]
     [!code-vb[System.Single.Structure#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/PrecisionList5a.vb#18)]  
  
-   <span data-ttu-id="a1216-152"><xref:System.Single> 值的精度低于 <xref:System.Double> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-152"><xref:System.Single> values have less precision than <xref:System.Double> values.</span></span> <span data-ttu-id="a1216-153">转换为看似等效的 <xref:System.Double> 的 <xref:System.Single> 值通常不等于 <xref:System.Double> 值，因为精度存在差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-153">A <xref:System.Single> value that is converted to a seemingly equivalent <xref:System.Double> often does not equal the <xref:System.Double> value because of differences in precision.</span></span> <span data-ttu-id="a1216-154">在下面的示例中，将相同除法运算的结果分配给 <xref:System.Double> 值和 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-154">In the following example, the result of identical division operations is assigned to a <xref:System.Double> value and a <xref:System.Single> value.</span></span> <span data-ttu-id="a1216-155">将 <xref:System.Single> 值强制转换为 <xref:System.Double>后，这两个值的比较表明它们不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-155">After the <xref:System.Single> value is cast to a <xref:System.Double>, a comparison of the two values shows that they are unequal.</span></span>  
  
     [!code-csharp[System.Double.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.double.structure/cs/precisionlist1.cs#5)]
     [!code-vb[System.Double.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.double.structure/vb/precisionlist1.vb#5)]  
  
     <span data-ttu-id="a1216-156">若要避免此问题，请使用 <xref:System.Double> 数据类型来代替 <xref:System.Single> 数据类型，或使用 <xref:System.Math.Round%2A> 方法，使这两个值具有相同的精度。</span><span class="sxs-lookup"><span data-stu-id="a1216-156">To avoid this problem, either use the <xref:System.Double> data type in place of the <xref:System.Single> data type, or use the <xref:System.Math.Round%2A> method so that both values have the same precision.</span></span>  
  
<a name="Equality"></a>   
## <a name="testing-for-equality"></a><span data-ttu-id="a1216-157">测试是否相等</span><span class="sxs-lookup"><span data-stu-id="a1216-157">Testing for equality</span></span>  
 <span data-ttu-id="a1216-158">若要被视为相等，两个 <xref:System.Single> 值必须表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="a1216-158">To be considered equal, two <xref:System.Single> values must represent identical values.</span></span> <span data-ttu-id="a1216-159">不过，由于值之间的精度差异，或由于一个或两个值的精度损失，应相同的浮点值通常会因其最小有效位之间的差异而不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-159">However, because of differences in precision between values, or because of a loss of precision by one or both values, floating-point values that are expected to be identical often turn out to be unequal due to differences in their least significant digits.</span></span> <span data-ttu-id="a1216-160">因此，调用 <xref:System.Single.Equals%2A> 方法来确定两个值是否相等，或调用 <xref:System.Single.CompareTo%2A> 方法来确定两个 <xref:System.Single> 值之间的关系，通常会产生意外结果。</span><span class="sxs-lookup"><span data-stu-id="a1216-160">As a result, calls to the <xref:System.Single.Equals%2A> method to determine whether two values are equal, or calls to the <xref:System.Single.CompareTo%2A> method to determine the relationship between two <xref:System.Single> values, often yield unexpected results.</span></span> <span data-ttu-id="a1216-161">这在下面的示例中很明显，其中两个明显相等 <xref:System.Single> 值是不相等的，因为第一个值的精度为7位，而第二个值为9。</span><span class="sxs-lookup"><span data-stu-id="a1216-161">This is evident in the following example, where two apparently equal <xref:System.Single> values turn out to be unequal, because the first value has 7 digits of precision, whereas the second value has 9.</span></span>  
  
 [!code-csharp[System.Single.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/comparison1.cs#9)]
 [!code-vb[System.Single.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/comparison1.vb#9)]  
  
 <span data-ttu-id="a1216-162">采用不同的代码路径并以不同的方式操作的计算值通常证明不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-162">Calculated values that follow different code paths and that are manipulated in different ways often prove to be unequal.</span></span> <span data-ttu-id="a1216-163">在下面的示例中，一 <xref:System.Single> 值为平方，然后计算平方根以还原原始值。</span><span class="sxs-lookup"><span data-stu-id="a1216-163">In the following example, one <xref:System.Single> value is squared, and then the square root is calculated to restore the original value.</span></span> <span data-ttu-id="a1216-164">在结果的平方根除以3.51 后，第二个 <xref:System.Single> 乘以3.51 和 squared，以还原原始值。</span><span class="sxs-lookup"><span data-stu-id="a1216-164">A second <xref:System.Single> is multiplied by 3.51 and squared before the square root of the result is divided by 3.51 to restore the original value.</span></span> <span data-ttu-id="a1216-165">尽管两个值看起来是相同的，但对 <xref:System.Single.Equals%28System.Single%29> 方法的调用指示它们不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-165">Although the two values appear to be identical, a call to the <xref:System.Single.Equals%28System.Single%29> method indicates that they are not equal.</span></span> <span data-ttu-id="a1216-166">使用 "G9" 标准格式字符串返回显示每个 <xref:System.Single> 值的所有有效位的结果字符串表明，第二个值 .0000000000001 小于第一个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-166">Using the "G9" standard format string to return a result string that displays all the significant digits of each <xref:System.Single> value shows that the second value is .0000000000001 less than the first.</span></span>  
  
 [!code-csharp[System.Single.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/comparison2.cs#10)]
 [!code-vb[System.Single.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/comparison2.vb#10)]  
  
 <span data-ttu-id="a1216-167">如果精度损失可能会影响比较结果，则可以使用以下技术，而不是调用 <xref:System.Single.Equals%2A> 或 <xref:System.Single.CompareTo%2A> 方法：</span><span class="sxs-lookup"><span data-stu-id="a1216-167">In cases where a loss of precision is likely to affect the result of a comparison, you can use the following techniques instead of calling the <xref:System.Single.Equals%2A> or <xref:System.Single.CompareTo%2A> method:</span></span>  
  
-   <span data-ttu-id="a1216-168">调用 <xref:System.Math.Round%2A?displayProperty=nameWithType> 方法，以确保两个值具有相同的精度。</span><span class="sxs-lookup"><span data-stu-id="a1216-168">Call the <xref:System.Math.Round%2A?displayProperty=nameWithType> method to ensure that both values have the same precision.</span></span> <span data-ttu-id="a1216-169">下面的示例修改了上一个示例，以使用此方法，以使两个小数值相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-169">The following example modifies a previous example to use this approach so that two fractional values are equivalent.</span></span>  
  
     [!code-csharp[System.Single.Structure#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/comparison3.cs#11)]
     [!code-vb[System.Single.Structure#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/comparison3.vb#11)]  
  
     <span data-ttu-id="a1216-170">请注意，精度问题仍适用于中点值的舍入。</span><span class="sxs-lookup"><span data-stu-id="a1216-170">Note that the problem of precision still applies to rounding of midpoint values.</span></span> <span data-ttu-id="a1216-171">有关更多信息，请参见 <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-171">For more information, see the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="a1216-172">测试近似相等性，而不是相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-172">Test for approximate equality instead of equality.</span></span> <span data-ttu-id="a1216-173">此方法要求您定义一个绝对量，而这两个值可能会不同，但仍相等，或者您定义较小值与较大值之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-173">This technique requires that you define either an absolute amount by which the two values can differ but still be equal, or that you define a relative amount by which the smaller value can diverge from the larger value.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="a1216-174">在测试相等性时，<xref:System.Single.Epsilon?displayProperty=nameWithType> 有时用作两个 <xref:System.Single> 值之间的距离的绝对度量值。</span><span class="sxs-lookup"><span data-stu-id="a1216-174"><xref:System.Single.Epsilon?displayProperty=nameWithType> is sometimes used as an absolute measure of the distance between two <xref:System.Single> values when testing for equality.</span></span>  <span data-ttu-id="a1216-175">但 <xref:System.Single.Epsilon?displayProperty=nameWithType> 度量值为零的 <xref:System.Single> 可以添加到或从中减去的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="a1216-175">However, <xref:System.Single.Epsilon?displayProperty=nameWithType> measures the smallest possible value that can be added to, or subtracted from, a <xref:System.Single> whose value is zero.</span></span> <span data-ttu-id="a1216-176">对于大多数正负 <xref:System.Single> 值，<xref:System.Single.Epsilon?displayProperty=nameWithType> 的值太小，无法检测到。</span><span class="sxs-lookup"><span data-stu-id="a1216-176">For most positive and negative <xref:System.Single> values, the value of <xref:System.Single.Epsilon?displayProperty=nameWithType> is too small to be detected.</span></span> <span data-ttu-id="a1216-177">因此，除了零值以外，不建议在测试中使用它是否相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-177">Therefore, except for values that are zero, we do not recommend its use in tests for equality.</span></span>  
  
     <span data-ttu-id="a1216-178">下面的示例使用后一种方法来定义一个 `IsApproximatelyEqual` 方法，该方法可测试两个值之间的相对差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-178">The following example uses the latter approach to define an `IsApproximatelyEqual` method that tests the relative difference between two values.</span></span> <span data-ttu-id="a1216-179">它还比较了对 `IsApproximatelyEqual` 方法和 <xref:System.Single.Equals%28System.Single%29> 方法的调用结果。</span><span class="sxs-lookup"><span data-stu-id="a1216-179">It also contrasts the result of calls to the `IsApproximatelyEqual` method and the <xref:System.Single.Equals%28System.Single%29> method.</span></span>  
  
     [!code-csharp[System.Single.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/comparison4.cs#12)]
     [!code-vb[System.Single.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/comparison4.vb#12)]  
  
<a name="Exceptions"></a>   
## <a name="floating-point-values-and-exceptions"></a><span data-ttu-id="a1216-180">浮点值和异常</span><span class="sxs-lookup"><span data-stu-id="a1216-180">Floating-point values and exceptions</span></span>  
 <span data-ttu-id="a1216-181">与整数类型的操作不同，具有浮点值的操作不会引发异常，这种操作在非法操作（如被零除或溢出）的情况下会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a1216-181">Operations with floating-point values do not throw exceptions, unlike operations with integral types, which throw exceptions in cases of illegal operations such as division by zero or overflow.</span></span>  <span data-ttu-id="a1216-182">相反，在这些情况下，浮点运算的结果为零、正无穷、负无穷或非数字（NaN）：</span><span class="sxs-lookup"><span data-stu-id="a1216-182">Instead, in these situations, the result of a floating-point operation is zero, positive infinity, negative infinity, or not a number (NaN):</span></span>  
  
-   <span data-ttu-id="a1216-183">如果浮点运算的结果对于目标格式来说太小，则结果为零。</span><span class="sxs-lookup"><span data-stu-id="a1216-183">If the result of a floating-point operation is too small for the destination format, the result is zero.</span></span> <span data-ttu-id="a1216-184">当两个非常小的浮点数相乘时，可能会出现这种情况，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="a1216-184">This can occur when two very small floating-point numbers are multiplied, as the following example shows.</span></span>  
  
     [!code-csharp[System.Single.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/exceptional1.cs#1)]
     [!code-vb[System.Single.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/exceptional1.vb#1)]  
  
-   <span data-ttu-id="a1216-185">如果浮点运算的结果量超过目标格式的范围，则操作的结果为 <xref:System.Single.PositiveInfinity> 或 <xref:System.Single.NegativeInfinity>，适用于结果的符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-185">If the magnitude of the result of a floating-point operation exceeds the range of the destination format, the result of the operation is <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity>, as appropriate for the sign of the result.</span></span> <span data-ttu-id="a1216-186">溢出 <xref:System.Single.MaxValue?displayProperty=nameWithType> 的操作的结果为 <xref:System.Single.PositiveInfinity>，溢出 <xref:System.Single.MinValue?displayProperty=nameWithType> 的操作的结果为 <xref:System.Single.NegativeInfinity>，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="a1216-186">The result of an operation that overflows <xref:System.Single.MaxValue?displayProperty=nameWithType> is <xref:System.Single.PositiveInfinity>, and the result of an operation that overflows <xref:System.Single.MinValue?displayProperty=nameWithType> is <xref:System.Single.NegativeInfinity>, as the following example shows.</span></span>  
  
     [!code-csharp[System.Single.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/exceptional2.cs#2)]
     [!code-vb[System.Single.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/exceptional2.vb#2)]  
  
     <span data-ttu-id="a1216-187"><xref:System.Single.PositiveInfinity> 还会导致除以零的除法运算，负被除数，并 <xref:System.Single.NegativeInfinity> 除以零的结果，并以负被除数。</span><span class="sxs-lookup"><span data-stu-id="a1216-187"><xref:System.Single.PositiveInfinity> also results from a division by zero with a positive dividend, and <xref:System.Single.NegativeInfinity> results from a division by zero with a negative dividend.</span></span>  
  
-   <span data-ttu-id="a1216-188">如果浮点操作无效，则操作的结果为 <xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="a1216-188">If a floating-point operation is invalid, the result of the operation is <xref:System.Single.NaN>.</span></span> <span data-ttu-id="a1216-189">例如，<xref:System.Single.NaN> 以下操作的结果：</span><span class="sxs-lookup"><span data-stu-id="a1216-189">For example, <xref:System.Single.NaN> results from the following operations:</span></span>  
  
    -   <span data-ttu-id="a1216-190">除数为零的除以零。</span><span class="sxs-lookup"><span data-stu-id="a1216-190">Division by zero with a dividend of zero.</span></span> <span data-ttu-id="a1216-191">请注意，除数为零的其他情况会导致 <xref:System.Single.PositiveInfinity> 或 <xref:System.Single.NegativeInfinity>。</span><span class="sxs-lookup"><span data-stu-id="a1216-191">Note that other cases of division by zero result in either <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity>.</span></span>  
  
    -   <span data-ttu-id="a1216-192">具有无效输入的任何浮点运算。</span><span class="sxs-lookup"><span data-stu-id="a1216-192">Any floating-point operation with invalid input.</span></span> <span data-ttu-id="a1216-193">例如，尝试查找负值的平方根将返回 <xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="a1216-193">For example, attempting to find the square root of a negative value returns <xref:System.Single.NaN>.</span></span>  
  
    -   <span data-ttu-id="a1216-194">任何具有参数值为 <xref:System.Single.NaN?displayProperty=nameWithType>的操作。</span><span class="sxs-lookup"><span data-stu-id="a1216-194">Any operation with an argument whose value is <xref:System.Single.NaN?displayProperty=nameWithType>.</span></span>  
  
<a name="Conversion"></a>   
## <a name="type-conversions-and-the-single-structure"></a><span data-ttu-id="a1216-195">类型转换和单结构</span><span class="sxs-lookup"><span data-stu-id="a1216-195">Type conversions and the Single structure</span></span>  
 <span data-ttu-id="a1216-196"><xref:System.Single> 结构未定义任何显式或隐式转换运算符;相反，转换是由编译器实现的。</span><span class="sxs-lookup"><span data-stu-id="a1216-196">The <xref:System.Single> structure does not define any explicit or implicit conversion operators; instead, conversions are implemented by the compiler.</span></span>  
  
 <span data-ttu-id="a1216-197">下表列出了其他基元数值类型的值可能转换为 <xref:System.Single> 值的情况，它还指示转换是扩大还是收缩转换，以及生成的 <xref:System.Single> 的精度是否低于原始值负值.</span><span class="sxs-lookup"><span data-stu-id="a1216-197">The following table lists the possible conversions of a value of the other primitive numeric types to a <xref:System.Single> value, It also indicates whether the conversion is widening or narrowing and whether the resulting <xref:System.Single> may have less precision than the original value.</span></span>  
  
|<span data-ttu-id="a1216-198">从</span><span class="sxs-lookup"><span data-stu-id="a1216-198">Conversion from</span></span>|<span data-ttu-id="a1216-199">扩大/收缩</span><span class="sxs-lookup"><span data-stu-id="a1216-199">Widening/narrowing</span></span>|<span data-ttu-id="a1216-200">可能丢失精度</span><span class="sxs-lookup"><span data-stu-id="a1216-200">Possible loss of precision</span></span>|  
|---------------------|-------------------------|--------------------------------|  
|<xref:System.Byte>|<span data-ttu-id="a1216-201">Widening</span><span class="sxs-lookup"><span data-stu-id="a1216-201">Widening</span></span>|<span data-ttu-id="a1216-202">No</span><span class="sxs-lookup"><span data-stu-id="a1216-202">No</span></span>|  
|<xref:System.Decimal>|<span data-ttu-id="a1216-203">Widening</span><span class="sxs-lookup"><span data-stu-id="a1216-203">Widening</span></span><br /><br /> <span data-ttu-id="a1216-204">请注意C# ，需要强制转换运算符。</span><span class="sxs-lookup"><span data-stu-id="a1216-204">Note that C# requires a cast operator.</span></span>|<span data-ttu-id="a1216-205">可以。</span><span class="sxs-lookup"><span data-stu-id="a1216-205">Yes.</span></span> <span data-ttu-id="a1216-206"><xref:System.Decimal> 支持29个十进制数字的精度;<xref:System.Single> 支持9。</span><span class="sxs-lookup"><span data-stu-id="a1216-206"><xref:System.Decimal> supports 29 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.Double>|<span data-ttu-id="a1216-207">收缩超出范围的值将转换为 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> 或 <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1216-207">Narrowing; out-of-range values are converted to <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> or <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="a1216-208">可以。</span><span class="sxs-lookup"><span data-stu-id="a1216-208">Yes.</span></span> <span data-ttu-id="a1216-209"><xref:System.Double> 支持17个十进制数字的精度;<xref:System.Single> 支持9。</span><span class="sxs-lookup"><span data-stu-id="a1216-209"><xref:System.Double> supports 17 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.Int16>|<span data-ttu-id="a1216-210">Widening</span><span class="sxs-lookup"><span data-stu-id="a1216-210">Widening</span></span>|<span data-ttu-id="a1216-211">No</span><span class="sxs-lookup"><span data-stu-id="a1216-211">No</span></span>|  
|<xref:System.Int32>|<span data-ttu-id="a1216-212">Widening</span><span class="sxs-lookup"><span data-stu-id="a1216-212">Widening</span></span>|<span data-ttu-id="a1216-213">可以。</span><span class="sxs-lookup"><span data-stu-id="a1216-213">Yes.</span></span> <span data-ttu-id="a1216-214"><xref:System.Int32> 支持10个十进制数字的精度;<xref:System.Single> 支持9。</span><span class="sxs-lookup"><span data-stu-id="a1216-214"><xref:System.Int32> supports 10 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.Int64>|<span data-ttu-id="a1216-215">Widening</span><span class="sxs-lookup"><span data-stu-id="a1216-215">Widening</span></span>|<span data-ttu-id="a1216-216">可以。</span><span class="sxs-lookup"><span data-stu-id="a1216-216">Yes.</span></span> <span data-ttu-id="a1216-217"><xref:System.Int64> 支持19个十进制数字的精度;<xref:System.Single> 支持9。</span><span class="sxs-lookup"><span data-stu-id="a1216-217"><xref:System.Int64> supports 19 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.SByte>|<span data-ttu-id="a1216-218">Widening</span><span class="sxs-lookup"><span data-stu-id="a1216-218">Widening</span></span>|<span data-ttu-id="a1216-219">No</span><span class="sxs-lookup"><span data-stu-id="a1216-219">No</span></span>|  
|<xref:System.UInt16>|<span data-ttu-id="a1216-220">Widening</span><span class="sxs-lookup"><span data-stu-id="a1216-220">Widening</span></span>|<span data-ttu-id="a1216-221">No</span><span class="sxs-lookup"><span data-stu-id="a1216-221">No</span></span>|  
|<xref:System.UInt32>|<span data-ttu-id="a1216-222">Widening</span><span class="sxs-lookup"><span data-stu-id="a1216-222">Widening</span></span>|<span data-ttu-id="a1216-223">可以。</span><span class="sxs-lookup"><span data-stu-id="a1216-223">Yes.</span></span> <span data-ttu-id="a1216-224"><xref:System.UInt32> 支持10个十进制数字的精度;<xref:System.Single> 支持9。</span><span class="sxs-lookup"><span data-stu-id="a1216-224"><xref:System.UInt32> supports 10 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
|<xref:System.UInt64>|<span data-ttu-id="a1216-225">Widening</span><span class="sxs-lookup"><span data-stu-id="a1216-225">Widening</span></span>|<span data-ttu-id="a1216-226">可以。</span><span class="sxs-lookup"><span data-stu-id="a1216-226">Yes.</span></span> <span data-ttu-id="a1216-227"><xref:System.Int64> 支持20个十进制数字的精度;<xref:System.Single> 支持9。</span><span class="sxs-lookup"><span data-stu-id="a1216-227"><xref:System.Int64> supports 20 decimal digits of precision; <xref:System.Single> supports 9.</span></span>|  
  
 <span data-ttu-id="a1216-228">下面的示例将其他基元数值类型的最小值或最大值转换为 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-228">The following example converts the minimum or maximum value of other primitive numeric types to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[System.Single.Structure#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/convert1.cs#20)]
 [!code-vb[System.Single.Structure#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/convert1.vb#20)]  
  
 <span data-ttu-id="a1216-229">此外，<xref:System.Double> 值 <xref:System.Double.NaN?displayProperty=nameWithType>、<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>和 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> 分别转换为 <xref:System.Single.NaN?displayProperty=nameWithType>、<xref:System.Single.PositiveInfinity?displayProperty=nameWithType>和 <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1216-229">In addition, the <xref:System.Double> values <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> covert to <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="a1216-230">请注意，某些数值类型的值到 <xref:System.Single> 值的转换可能会导致精度损失。</span><span class="sxs-lookup"><span data-stu-id="a1216-230">Note that the conversion of the value of some numeric types to a <xref:System.Single> value can involve a loss of precision.</span></span> <span data-ttu-id="a1216-231">如示例所示，将 <xref:System.Decimal>、<xref:System.Double>、<xref:System.Int32>、<xref:System.Int64>、<xref:System.UInt32>和 <xref:System.UInt64> 值转换为 <xref:System.Single> 值时，可能会丢失精度。</span><span class="sxs-lookup"><span data-stu-id="a1216-231">As the example illustrates, a loss of precision is possible when converting <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt32>, and <xref:System.UInt64> values to <xref:System.Single> values.</span></span>  
  
 <span data-ttu-id="a1216-232">将 <xref:System.Single> 值转换为 <xref:System.Double> 是扩大转换。</span><span class="sxs-lookup"><span data-stu-id="a1216-232">The conversion of a <xref:System.Single> value to a <xref:System.Double> is a widening conversion.</span></span> <span data-ttu-id="a1216-233">如果 <xref:System.Double> 类型没有 <xref:System.Single> 值的精确表示形式，转换可能会导致精度损失。</span><span class="sxs-lookup"><span data-stu-id="a1216-233">The conversion may result in a loss of precision if the <xref:System.Double> type does not have a precise representation for the <xref:System.Single> value.</span></span>  
  
 <span data-ttu-id="a1216-234">将 <xref:System.Single> 值转换为任何基元数值数据类型（而非 <xref:System.Double>）的值是收缩转换，需要转换运算符（在中C#）或转换方法（在 Visual Basic 中）。</span><span class="sxs-lookup"><span data-stu-id="a1216-234">The conversion of a <xref:System.Single> value to a value of any primitive numeric data type other than a <xref:System.Double> is a narrowing conversion and requires a cast operator (in C#) or a conversion method (in Visual Basic).</span></span> <span data-ttu-id="a1216-235">超出目标数据类型范围的值（由目标类型的 `MinValue` 和 `MaxValue` 属性定义）的行为如下表中所示。</span><span class="sxs-lookup"><span data-stu-id="a1216-235">Values that are outside the range of the target data type, which are defined by the target type's `MinValue` and `MaxValue` properties, behave as shown in the following table.</span></span>  
  
|<span data-ttu-id="a1216-236">目标类型</span><span class="sxs-lookup"><span data-stu-id="a1216-236">Target type</span></span>|<span data-ttu-id="a1216-237">结果</span><span class="sxs-lookup"><span data-stu-id="a1216-237">Result</span></span>|  
|-----------------|------------|  
|<span data-ttu-id="a1216-238">任何整型</span><span class="sxs-lookup"><span data-stu-id="a1216-238">Any integral type</span></span>|<span data-ttu-id="a1216-239">如果在检查的上下文中发生转换，则为 <xref:System.OverflowException> 异常。</span><span class="sxs-lookup"><span data-stu-id="a1216-239">An <xref:System.OverflowException> exception if the conversion occurs in a checked context.</span></span><br /><br /> <span data-ttu-id="a1216-240">如果转换发生在未检查的上下文中（默认为C#），则转换操作会成功，但值溢出。</span><span class="sxs-lookup"><span data-stu-id="a1216-240">If the conversion occurs in an unchecked context (the default in C#), the conversion operation succeeds but the value overflows.</span></span>|  
|<xref:System.Decimal>|<span data-ttu-id="a1216-241"><xref:System.OverflowException> 异常，</span><span class="sxs-lookup"><span data-stu-id="a1216-241">An <xref:System.OverflowException> exception,</span></span>|  
  
 <span data-ttu-id="a1216-242">此外，<xref:System.Single.NaN?displayProperty=nameWithType>、<xref:System.Single.PositiveInfinity?displayProperty=nameWithType>和 <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> 会引发用于转换为已检查上下文中的整数的 <xref:System.OverflowException>，但这些值在转换为未检查的上下文中的整数时溢出。</span><span class="sxs-lookup"><span data-stu-id="a1216-242">In addition, <xref:System.Single.NaN?displayProperty=nameWithType>, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> throw an <xref:System.OverflowException> for conversions to integers in a checked context, but these values overflow when converted to integers in an unchecked context.</span></span> <span data-ttu-id="a1216-243">为了转换到 <xref:System.Decimal>，它们始终引发 <xref:System.OverflowException>。</span><span class="sxs-lookup"><span data-stu-id="a1216-243">For conversions to <xref:System.Decimal>, they always throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="a1216-244">为了转换到 <xref:System.Double>，它们分别转换为 <xref:System.Double.NaN?displayProperty=nameWithType>、<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>和 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1216-244">For conversions to <xref:System.Double>, they convert to <xref:System.Double.NaN?displayProperty=nameWithType>, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, and <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="a1216-245">请注意，将 <xref:System.Single> 值转换为另一种数值类型可能会导致精度损失。</span><span class="sxs-lookup"><span data-stu-id="a1216-245">Note that a loss of precision may result from converting a <xref:System.Single> value to another numeric type.</span></span> <span data-ttu-id="a1216-246">在转换非整数 <xref:System.Single> 值的情况下，如示例的输出所示，当 <xref:System.Single> 值舍入（如 Visual Basic 中）或截断时（如在中C#），小数部分将丢失。</span><span class="sxs-lookup"><span data-stu-id="a1216-246">In the case of converting non-integral <xref:System.Single> values, as the output from the example shows, the fractional component is lost when the <xref:System.Single> value is either rounded (as in Visual Basic) or truncated (as in C#).</span></span> <span data-ttu-id="a1216-247">为转换 <xref:System.Decimal> 值，<xref:System.Single> 值在目标数据类型中可能没有精确的表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-247">For conversions to <xref:System.Decimal> values, the <xref:System.Single> value may not have a precise representation in the target data type.</span></span>  
  
 <span data-ttu-id="a1216-248">下面的示例将多个 <xref:System.Single> 值转换为多个其他数值类型。</span><span class="sxs-lookup"><span data-stu-id="a1216-248">The following example converts a number of <xref:System.Single> values to several other numeric types.</span></span> <span data-ttu-id="a1216-249">转换在 Visual Basic （默认值）和中C#的已检查上下文中发生（因为有[checked](~/docs/csharp/language-reference/keywords/checked.md)关键字）。</span><span class="sxs-lookup"><span data-stu-id="a1216-249">The conversions occur in a checked context in Visual Basic (the default) and in C# (because of the [checked](~/docs/csharp/language-reference/keywords/checked.md) keyword).</span></span> <span data-ttu-id="a1216-250">该示例的输出显示了已检查的未检查上下文中的转换结果。</span><span class="sxs-lookup"><span data-stu-id="a1216-250">The output from the example shows the result for conversions in both a checked an unchecked context.</span></span> <span data-ttu-id="a1216-251">您可以通过使用 `/removeintchecks+` 编译器开关进行编译，并C#通过注释掉 `checked` 语句，在 Visual Basic 中未检查的上下文中执行转换。</span><span class="sxs-lookup"><span data-stu-id="a1216-251">You can perform conversions in an unchecked context in Visual Basic by compiling with the `/removeintchecks+` compiler switch and in C# by commenting out the `checked` statement.</span></span>  
  
 [!code-csharp[System.Single.Structure#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/convert2.cs#21)]
 [!code-vb[System.Single.Structure#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/convert2.vb#21)]  
  
 <span data-ttu-id="a1216-252">有关数值类型转换的详细信息，请参阅 .NET Framework 和[类型转换表](~/docs/standard/base-types/conversion-tables.md)[中的类型转换](~/docs/standard/base-types/type-conversion.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-252">For more information on the conversion of numeric types, see [Type Conversion in the .NET Framework](~/docs/standard/base-types/type-conversion.md) and [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md).</span></span>  
  
<a name="Functionality"></a>   
## <a name="floating-point-functionality"></a><span data-ttu-id="a1216-253">浮点型功能</span><span class="sxs-lookup"><span data-stu-id="a1216-253">Floating-point functionality</span></span>  
 <span data-ttu-id="a1216-254"><xref:System.Single> 结构和相关类型提供了执行以下类别的操作的方法：</span><span class="sxs-lookup"><span data-stu-id="a1216-254">The <xref:System.Single> structure and related types provide methods to perform the following categories of operations:</span></span>  
  
-   <span data-ttu-id="a1216-255">**值比较**。</span><span class="sxs-lookup"><span data-stu-id="a1216-255">**Comparison of values**.</span></span> <span data-ttu-id="a1216-256">您可以调用 <xref:System.Single.Equals%2A> 方法来确定两个 <xref:System.Single> 值是否相等，或 <xref:System.Single.CompareTo%2A> 方法来确定两个值之间的关系。</span><span class="sxs-lookup"><span data-stu-id="a1216-256">You can call the <xref:System.Single.Equals%2A> method to determine whether two <xref:System.Single> values are equal, or the <xref:System.Single.CompareTo%2A> method to determine the relationship between two values.</span></span>  
  
     <span data-ttu-id="a1216-257"><xref:System.Single> 结构还支持一组完整的比较运算符。</span><span class="sxs-lookup"><span data-stu-id="a1216-257">The <xref:System.Single> structure also supports a complete set of comparison operators.</span></span> <span data-ttu-id="a1216-258">例如，你可以测试是否相等或不相等，或确定一个值是否大于或等于另一个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-258">For example, you can test for equality or inequality, or determine whether one value is greater than or equal to another value.</span></span> <span data-ttu-id="a1216-259">如果其中一个操作数是 <xref:System.Double>，则在执行比较之前 <xref:System.Single> 值将转换为 <xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="a1216-259">If one of the operands is a <xref:System.Double>, the <xref:System.Single> value is converted to a <xref:System.Double> before performing the comparison.</span></span> <span data-ttu-id="a1216-260">如果其中一个操作数为整型类型，则在执行比较之前将其转换为 <xref:System.Single>。</span><span class="sxs-lookup"><span data-stu-id="a1216-260">If one of the operands is an integral type, it is converted to a <xref:System.Single> before performing the comparison.</span></span> <span data-ttu-id="a1216-261">尽管这些是扩大转换，但它们可能会损失精度。</span><span class="sxs-lookup"><span data-stu-id="a1216-261">Although these are widening conversions, they may involve a loss of precision.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="a1216-262">由于精度存在差异，因此两个预期相等 <xref:System.Single> 值可能会不相等，这将影响比较的结果。</span><span class="sxs-lookup"><span data-stu-id="a1216-262">Because of differences in precision, two <xref:System.Single> values that you expect to be equal may turn out to be unequal, which affects the result of the comparison.</span></span> <span data-ttu-id="a1216-263">请参阅[测试相等性](#Equality)部分，了解有关比较两个 <xref:System.Single> 值的详细信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-263">See the [Testing for equality](#Equality) section for more information about comparing two <xref:System.Single> values.</span></span>  
  
     <span data-ttu-id="a1216-264">还可以调用 <xref:System.Single.IsNaN%2A>、<xref:System.Single.IsInfinity%2A>、<xref:System.Single.IsPositiveInfinity%2A>和 <xref:System.Single.IsNegativeInfinity%2A> 方法来测试这些特殊值。</span><span class="sxs-lookup"><span data-stu-id="a1216-264">You can also call the <xref:System.Single.IsNaN%2A>, <xref:System.Single.IsInfinity%2A>, <xref:System.Single.IsPositiveInfinity%2A>, and <xref:System.Single.IsNegativeInfinity%2A> methods to test for these special values.</span></span>  
  
-   <span data-ttu-id="a1216-265">**数学运算**。</span><span class="sxs-lookup"><span data-stu-id="a1216-265">**Mathematical operations**.</span></span> <span data-ttu-id="a1216-266">常见算术运算（例如加法、减法、乘法和除法）由语言编译器和公共中间语言（CIL）指令实现，而不是通过 <xref:System.Single> 方法实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-266">Common arithmetic operations such as addition, subtraction, multiplication, and division are implemented by language compilers and Common Intermediate Language (CIL) instructions rather than by <xref:System.Single> methods.</span></span> <span data-ttu-id="a1216-267">如果数学运算中的另一个操作数是 <xref:System.Double>，则 <xref:System.Single> 在执行运算前转换为 <xref:System.Double>，并且操作的结果也是 <xref:System.Double> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-267">If the other operand in a mathematical operation is a <xref:System.Double>, the <xref:System.Single> is converted to a <xref:System.Double> before performing the operation, and the result of the operation is also a <xref:System.Double> value.</span></span> <span data-ttu-id="a1216-268">如果另一个操作数是整数类型，则在执行操作之前会将其转换为 <xref:System.Single>，并且操作的结果也是 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-268">If the other operand is an integral type, it is converted to a <xref:System.Single> before performing the operation, and the result of the operation is also a <xref:System.Single> value.</span></span>  
  
     <span data-ttu-id="a1216-269">您可以通过在 <xref:System.Math?displayProperty=nameWithType> 类中调用 `static` （`Shared` Visual Basic）方法来执行其他数学运算。</span><span class="sxs-lookup"><span data-stu-id="a1216-269">You can perform other mathematical operations by calling `static` (`Shared` in Visual Basic) methods in the <xref:System.Math?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="a1216-270">其中包括通常用于算法的其他方法（例如 <xref:System.Math.Abs%2A?displayProperty=nameWithType>、<xref:System.Math.Sign%2A?displayProperty=nameWithType>和 <xref:System.Math.Sqrt%2A?displayProperty=nameWithType>）、几何（如 <xref:System.Math.Cos%2A?displayProperty=nameWithType> 和 <xref:System.Math.Sin%2A?displayProperty=nameWithType>）以及微积分（如 <xref:System.Math.Log%2A?displayProperty=nameWithType>）。</span><span class="sxs-lookup"><span data-stu-id="a1216-270">These include additional methods commonly used for arithmetic (such as <xref:System.Math.Abs%2A?displayProperty=nameWithType>, <xref:System.Math.Sign%2A?displayProperty=nameWithType>, and <xref:System.Math.Sqrt%2A?displayProperty=nameWithType>), geometry (such as <xref:System.Math.Cos%2A?displayProperty=nameWithType> and <xref:System.Math.Sin%2A?displayProperty=nameWithType>), and calculus (such as <xref:System.Math.Log%2A?displayProperty=nameWithType>).</span></span>  <span data-ttu-id="a1216-271">在所有情况下，<xref:System.Single> 值都将转换为 <xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="a1216-271">In all cases, the <xref:System.Single> value is converted to a <xref:System.Double>.</span></span>  
  
     <span data-ttu-id="a1216-272">还可以操作 <xref:System.Single> 值中的单个位。</span><span class="sxs-lookup"><span data-stu-id="a1216-272">You can also manipulate the individual bits in a <xref:System.Single> value.</span></span> <span data-ttu-id="a1216-273"><xref:System.BitConverter.GetBytes%28System.Single%29?displayProperty=nameWithType> 方法将其位模式返回到字节数组中。</span><span class="sxs-lookup"><span data-stu-id="a1216-273">The <xref:System.BitConverter.GetBytes%28System.Single%29?displayProperty=nameWithType> method returns its bit pattern in a byte array.</span></span>  <span data-ttu-id="a1216-274">通过将该字节数组传递到 <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> 方法，还可以保留32位整数中的 <xref:System.Single> 值的位模式。</span><span class="sxs-lookup"><span data-stu-id="a1216-274">By passing that byte array to the <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> method, you can also preserve the <xref:System.Single> value's bit pattern in a 32-bit integer.</span></span>  
  
-   <span data-ttu-id="a1216-275">**舍入**。</span><span class="sxs-lookup"><span data-stu-id="a1216-275">**Rounding**.</span></span> <span data-ttu-id="a1216-276">舍入通常用作一种方法，用于降低由于浮点表示形式和精度问题导致的值之间的差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-276">Rounding is often used as a technique for reducing the impact of differences between values caused by problems of floating-point representation and precision.</span></span> <span data-ttu-id="a1216-277">可以通过调用 <xref:System.Math.Round%2A?displayProperty=nameWithType> 方法来舍入 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-277">You can round a <xref:System.Single> value by calling the <xref:System.Math.Round%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a1216-278">但请注意，在调用方法之前，<xref:System.Single> 值将转换为 <xref:System.Double>，转换可能会导致精度损失。</span><span class="sxs-lookup"><span data-stu-id="a1216-278">However, note  that the <xref:System.Single> value is converted to a <xref:System.Double> before the method is called, and the conversion can involve a loss of precision.</span></span>  
  
-   <span data-ttu-id="a1216-279">**格式设置**。</span><span class="sxs-lookup"><span data-stu-id="a1216-279">**Formatting**.</span></span> <span data-ttu-id="a1216-280">可以通过调用 <xref:System.Single.ToString%2A> 方法或通过使用[复合格式设置](~/docs/standard/base-types/composite-formatting.md)功能，将 <xref:System.Single> 值转换为其字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-280">You can convert a <xref:System.Single> value to its string representation by calling the <xref:System.Single.ToString%2A> method or by using the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature.</span></span> <span data-ttu-id="a1216-281">有关格式字符串如何控制浮点值的字符串表示形式的信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)主题。</span><span class="sxs-lookup"><span data-stu-id="a1216-281">For information about how format strings control the string representation of floating-point values, see the [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md) topics.</span></span>  
  
-   <span data-ttu-id="a1216-282">**分析字符串**。</span><span class="sxs-lookup"><span data-stu-id="a1216-282">**Parsing strings**.</span></span> <span data-ttu-id="a1216-283">可以通过调用 <xref:System.Single.Parse%2A> 或 <xref:System.Single.TryParse%2A> 方法，将浮点值的字符串表示形式转换为 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-283">You can convert the string representation of a floating-point value to a <xref:System.Single> value by calling the <xref:System.Single.Parse%2A> or <xref:System.Single.TryParse%2A> method.</span></span> <span data-ttu-id="a1216-284">如果分析操作失败，<xref:System.Single.Parse%2A> 方法会引发异常，而 <xref:System.Single.TryParse%2A> 方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="a1216-284">If the parse operation fails, the <xref:System.Single.Parse%2A> method throws an exception, whereas the <xref:System.Single.TryParse%2A> method returns `false`.</span></span>  
  
-   <span data-ttu-id="a1216-285">**类型转换**。</span><span class="sxs-lookup"><span data-stu-id="a1216-285">**Type conversion**.</span></span> <span data-ttu-id="a1216-286"><xref:System.Single> 结构提供 <xref:System.IConvertible> 接口的显式接口实现，该接口支持任意两种标准 .NET Framework 数据类型之间的转换。</span><span class="sxs-lookup"><span data-stu-id="a1216-286">The <xref:System.Single> structure provides an explicit interface implementation for the <xref:System.IConvertible> interface, which supports conversion between any two standard .NET Framework data types.</span></span> <span data-ttu-id="a1216-287">语言编译器还支持所有其他标准数值类型的值的隐式转换，但 <xref:System.Double> 转换为 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-287">Language compilers also support the implicit conversion of values for all other standard numeric types except for the conversion of <xref:System.Double> to <xref:System.Single> values.</span></span> <span data-ttu-id="a1216-288">将 <xref:System.Double> 以外的任何标准数值类型的值转换为 <xref:System.Single> 是扩大转换，不需要使用强制转换运算符或转换方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-288">Conversion of a value of any standard numeric type other than a <xref:System.Double> to a <xref:System.Single> is a widening conversion and does not require the use of a casting operator or conversion method.</span></span>  
  
     <span data-ttu-id="a1216-289">但是，32位和64位整数值的转换可能会导致精度损失。</span><span class="sxs-lookup"><span data-stu-id="a1216-289">However, conversion of 32-bit and 64-bit integer values can involve a loss of precision.</span></span> <span data-ttu-id="a1216-290">下表列出了32位、64位和 <xref:System.Double> 类型的精度差异：</span><span class="sxs-lookup"><span data-stu-id="a1216-290">The following table lists the differences in precision for 32-bit, 64-bit, and <xref:System.Double> types:</span></span>  
  
    |<span data-ttu-id="a1216-291">类型</span><span class="sxs-lookup"><span data-stu-id="a1216-291">Type</span></span>|<span data-ttu-id="a1216-292">最大精度（十进制数字）</span><span class="sxs-lookup"><span data-stu-id="a1216-292">Maximum precision (in decimal digits)</span></span>|<span data-ttu-id="a1216-293">内部精度（十进制数字）</span><span class="sxs-lookup"><span data-stu-id="a1216-293">Internal precision (in decimal digits)</span></span>|  
    |----------|---------------------------------------------|----------------------------------------------|  
    |<xref:System.Double>|<span data-ttu-id="a1216-294">15</span><span class="sxs-lookup"><span data-stu-id="a1216-294">15</span></span>|<span data-ttu-id="a1216-295">17</span><span class="sxs-lookup"><span data-stu-id="a1216-295">17</span></span>|  
    |<span data-ttu-id="a1216-296"><xref:System.Int32> 和 <xref:System.UInt32></span><span class="sxs-lookup"><span data-stu-id="a1216-296"><xref:System.Int32> and <xref:System.UInt32></span></span>|<span data-ttu-id="a1216-297">10</span><span class="sxs-lookup"><span data-stu-id="a1216-297">10</span></span>|<span data-ttu-id="a1216-298">10</span><span class="sxs-lookup"><span data-stu-id="a1216-298">10</span></span>|  
    |<span data-ttu-id="a1216-299"><xref:System.Int64> 和 <xref:System.UInt64></span><span class="sxs-lookup"><span data-stu-id="a1216-299"><xref:System.Int64> and <xref:System.UInt64></span></span>|<span data-ttu-id="a1216-300">19</span><span class="sxs-lookup"><span data-stu-id="a1216-300">19</span></span>|<span data-ttu-id="a1216-301">19</span><span class="sxs-lookup"><span data-stu-id="a1216-301">19</span></span>|  
    |<xref:System.Single>|<span data-ttu-id="a1216-302">7</span><span class="sxs-lookup"><span data-stu-id="a1216-302">7</span></span>|<span data-ttu-id="a1216-303">9</span><span class="sxs-lookup"><span data-stu-id="a1216-303">9</span></span>|  
  
     <span data-ttu-id="a1216-304">精确的问题会影响转换为 <xref:System.Double> 值 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-304">The problem of precision most frequently affects <xref:System.Single> values that are converted to <xref:System.Double> values.</span></span> <span data-ttu-id="a1216-305">在下面的示例中，两个由相同除法运算生成的值是不相等的，因为其中一个值是转换为 <xref:System.Double>的单精度浮点值。</span><span class="sxs-lookup"><span data-stu-id="a1216-305">In the following example, two values produced by identical division operations are unequal, because one of the values is a single-precision floating point value that is converted to a <xref:System.Double>.</span></span>  
  
     [!code-csharp[System.Single.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.structure/cs/precisionlist1.cs#5)]
     [!code-vb[System.Single.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.structure/vb/precisionlist1.vb#5)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="a1216-306">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="a1216-306">All members of this type are thread safe.</span></span> <span data-ttu-id="a1216-307">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="a1216-307">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="a1216-308">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="a1216-308">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Decimal" />
    <altmember cref="T:System.Double" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1216-309">将此实例与指定对象或其他 <see cref="T:System.Single" /> 实例进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定对象或其他 <see cref="T:System.Single" /> 实例的值。</span><span class="sxs-lookup"><span data-stu-id="a1216-309">Compares this instance to a specified object or to another <see cref="T:System.Single" /> instance and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or the other <see cref="T:System.Single" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="single.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a1216-310">要比较的对象，或为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-310">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a1216-311">将此实例与指定对象进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定对象的值。</span><span class="sxs-lookup"><span data-stu-id="a1216-311">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="a1216-312">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="a1216-312">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a1216-313">返回值</span><span class="sxs-lookup"><span data-stu-id="a1216-313">Return Value</span></span> 
 </term><description> <span data-ttu-id="a1216-314">说明</span><span class="sxs-lookup"><span data-stu-id="a1216-314">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="a1216-315">小于零</span><span class="sxs-lookup"><span data-stu-id="a1216-315">Less than zero</span></span> 
 </term><description> <span data-ttu-id="a1216-316">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-316">This instance is less than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="a1216-317">或</span><span class="sxs-lookup"><span data-stu-id="a1216-317">-or-</span></span> 
<span data-ttu-id="a1216-318">此实例不是数字 (<see cref="F:System.Single.NaN" />) 而 <paramref name="value" /> 是数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-318">This instance is not a number (<see cref="F:System.Single.NaN" />) and <paramref name="value" /> is a number.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a1216-319">零</span><span class="sxs-lookup"><span data-stu-id="a1216-319">Zero</span></span> 
 </term><description> <span data-ttu-id="a1216-320">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-320">This instance is equal to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="a1216-321">或</span><span class="sxs-lookup"><span data-stu-id="a1216-321">-or-</span></span> 
<span data-ttu-id="a1216-322">此实例和值都不是数字 (<see cref="F:System.Single.NaN" />)、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-322">This instance and value are both not a number (<see cref="F:System.Single.NaN" />), <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a1216-323">大于零</span><span class="sxs-lookup"><span data-stu-id="a1216-323">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="a1216-324">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-324">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="a1216-325">或</span><span class="sxs-lookup"><span data-stu-id="a1216-325">-or-</span></span> 
<span data-ttu-id="a1216-326">此实例是数字而 <paramref name="value" /> 不是数字 (<see cref="F:System.Single.NaN" />)。</span><span class="sxs-lookup"><span data-stu-id="a1216-326">This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Single.NaN" />).</span></span>  
  
<span data-ttu-id="a1216-327">或</span><span class="sxs-lookup"><span data-stu-id="a1216-327">-or-</span></span> 
 <span data-ttu-id="a1216-328"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-328"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-329">`value` 参数必须 `null` 或 <xref:System.Single>的实例;否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a1216-329">The `value` parameter must be `null` or an instance of <xref:System.Single>; otherwise, an exception is thrown.</span></span> <span data-ttu-id="a1216-330">任何 <xref:System.Single> 的实例（无论其值如何）都视为大于 `null`。</span><span class="sxs-lookup"><span data-stu-id="a1216-330">Any instance of <xref:System.Single>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="a1216-331">值必须完全相同，才能视为相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-331">Values must be identical to be considered equal.</span></span> <span data-ttu-id="a1216-332">特别是当浮点值依赖于多个数学运算时，通常情况下，它们会丢失精度，并且它们的值几乎完全相同，只是它们的最小有效位除外。</span><span class="sxs-lookup"><span data-stu-id="a1216-332">Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</span></span> <span data-ttu-id="a1216-333">因此，<xref:System.Single.CompareTo%2A> 方法的返回值可能会很奇怪。</span><span class="sxs-lookup"><span data-stu-id="a1216-333">Because of this, the return value of the <xref:System.Single.CompareTo%2A> method may seem surprising at times.</span></span> <span data-ttu-id="a1216-334">例如，按某个特定值（后跟同一个值相除）的乘法应生成原始值，但在下面的示例中，计算所得的值将变为大于原始值。</span><span class="sxs-lookup"><span data-stu-id="a1216-334">For example, multiplication by a particular value followed by division by the same value should produce the original value, but in the following example, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="a1216-335">使用 "R"[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)显示这两个值的所有有效位数，表示计算所得的值与最小有效位中的原始值不同。</span><span class="sxs-lookup"><span data-stu-id="a1216-335">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="a1216-336">有关处理此类比较的信息，请参阅 <xref:System.Single.Equals%28System.Single%29> 方法的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-336">For information about handling such comparisons, see the Remarks section of the <xref:System.Single.Equals%28System.Single%29> method.</span></span>  
  
 [!code-csharp[System.Single.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.compareto/cs/compareto3.cs#2)]
 [!code-vb[System.Single.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.compareto/vb/compareto3.vb#2)]  
  
 <span data-ttu-id="a1216-337">实现此方法是为了支持 <xref:System.IComparable> 接口。</span><span class="sxs-lookup"><span data-stu-id="a1216-337">This method is implemented to support the <xref:System.IComparable> interface.</span></span> <span data-ttu-id="a1216-338">请注意，虽然 <xref:System.Single.NaN> 不被视为等于其他 <xref:System.Single.NaN> （甚至是自身），<xref:System.IComparable> 接口要求 `A.CompareTo(A)` 返回零。</span><span class="sxs-lookup"><span data-stu-id="a1216-338">Note that, although a <xref:System.Single.NaN> is not considered to be equal to another <xref:System.Single.NaN> (even itself), the <xref:System.IComparable> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="a1216-339">比较中的精度</span><span class="sxs-lookup"><span data-stu-id="a1216-339">Precision in Comparisons</span></span>  
 <span data-ttu-id="a1216-340">超出所记录精度的浮点数的精度特定于 .NET Framework 的实现和版本。</span><span class="sxs-lookup"><span data-stu-id="a1216-340">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="a1216-341">因此，两个特定数字的比较可能会在 .NET Framework 的不同版本之间发生变化，因为数字的内部表示形式的精度可能会改变。</span><span class="sxs-lookup"><span data-stu-id="a1216-341">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-342">下面的代码示例演示 <xref:System.Single.CompareTo%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-342">The following code example demonstrates the <xref:System.Single.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[System.Single#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#16)]
 [!code-csharp[System.Single#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#16)]
 [!code-vb[System.Single#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1216-343"><paramref name="value" /> 不是 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-343"><paramref name="value" /> is not a <see cref="T:System.Single" />.</span></span></exception>
        <altmember cref="M:System.Single.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.CompareTo(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(float value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : single -&gt; int&#xA;override this.CompareTo : single -&gt; int" Usage="single.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a1216-344">要比较的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-344">A single-precision floating-point number to compare.</span></span></param>
        <summary><span data-ttu-id="a1216-345">将此实例与指定的单精度浮点数进行比较，并返回一个整数，该整数指示此实例的值是小于、等于还是大于指定单精度浮点数的值。</span><span class="sxs-lookup"><span data-stu-id="a1216-345">Compares this instance to a specified single-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="a1216-346">一个带符号数字，指示此实例和 <paramref name="value" /> 的相对值。</span><span class="sxs-lookup"><span data-stu-id="a1216-346">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a1216-347">返回值</span><span class="sxs-lookup"><span data-stu-id="a1216-347">Return Value</span></span> 
 </term><description> <span data-ttu-id="a1216-348">说明</span><span class="sxs-lookup"><span data-stu-id="a1216-348">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="a1216-349">小于零</span><span class="sxs-lookup"><span data-stu-id="a1216-349">Less than zero</span></span> 
 </term><description> <span data-ttu-id="a1216-350">此实例小于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-350">This instance is less than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="a1216-351">或</span><span class="sxs-lookup"><span data-stu-id="a1216-351">-or-</span></span> 
<span data-ttu-id="a1216-352">此实例不是数字 (<see cref="F:System.Single.NaN" />) 而 <paramref name="value" /> 是数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-352">This instance is not a number (<see cref="F:System.Single.NaN" />) and <paramref name="value" /> is a number.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a1216-353">零</span><span class="sxs-lookup"><span data-stu-id="a1216-353">Zero</span></span> 
 </term><description> <span data-ttu-id="a1216-354">此实例等于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-354">This instance is equal to <paramref name="value" />.</span></span>  
  
<span data-ttu-id="a1216-355">或</span><span class="sxs-lookup"><span data-stu-id="a1216-355">-or-</span></span> 
<span data-ttu-id="a1216-356">此实例和 <paramref name="value" /> 都不是数字 (<see cref="F:System.Single.NaN" />)、<see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-356">Both this instance and <paramref name="value" /> are not a number (<see cref="F:System.Single.NaN" />), <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a1216-357">大于零</span><span class="sxs-lookup"><span data-stu-id="a1216-357">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="a1216-358">此实例大于 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-358">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="a1216-359">或</span><span class="sxs-lookup"><span data-stu-id="a1216-359">-or-</span></span> 
<span data-ttu-id="a1216-360">此实例是数字而 <paramref name="value" /> 不是数字 (<see cref="F:System.Single.NaN" />)。</span><span class="sxs-lookup"><span data-stu-id="a1216-360">This instance is a number and <paramref name="value" /> is not a number (<see cref="F:System.Single.NaN" />).</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-361">值必须完全相同，才能视为相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-361">Values must be identical to be considered equal.</span></span> <span data-ttu-id="a1216-362">浮点值通常会丢失精度，并且几乎完全相同，只是它们的最小有效位除外，特别是当值依赖于多个数学运算时。</span><span class="sxs-lookup"><span data-stu-id="a1216-362">It is common for floating-point values to lose precision and to become nearly identical except for their least significant digits, especially when the values depend on multiple mathematical operations.</span></span> <span data-ttu-id="a1216-363">因此，<xref:System.Single.CompareTo%2A> 方法的返回值的时间可能看起来很奇怪。</span><span class="sxs-lookup"><span data-stu-id="a1216-363">Because of this, the return value of the <xref:System.Single.CompareTo%2A> method at times may seem surprising.</span></span> <span data-ttu-id="a1216-364">例如，如果将任何值乘以相同值相除的任何值，则应生成原始值。</span><span class="sxs-lookup"><span data-stu-id="a1216-364">For example, multiplication by any value followed by division by the same value should produce the original value.</span></span> <span data-ttu-id="a1216-365">但是，在下面的示例中，计算所得的值为大于原始值。</span><span class="sxs-lookup"><span data-stu-id="a1216-365">However, in the following example, the computed value turns out to be greater than the original value.</span></span> <span data-ttu-id="a1216-366">使用 "R"[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)显示这两个值的所有有效位数，表示计算所得的值与最小有效位中的原始值不同。</span><span class="sxs-lookup"><span data-stu-id="a1216-366">Showing all significant digits of the two values by using the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) indicates that the computed value differs from the original value in its least significant digits.</span></span> <span data-ttu-id="a1216-367">有关处理此类比较的信息，请参阅 <xref:System.Single.Equals%28System.Single%29> 方法的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-367">For information about handling such comparisons, see the Remarks section of the <xref:System.Single.Equals%28System.Single%29> method.</span></span>  
  
 [!code-csharp[System.Single.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.compareto/cs/compareto2.cs#1)]
 [!code-vb[System.Single.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.compareto/vb/compareto2.vb#1)]  
  
 <span data-ttu-id="a1216-368">此方法实现 <xref:System.IComparable%601?displayProperty=nameWithType> 接口，并比 <xref:System.Single.CompareTo%2A?displayProperty=nameWithType> 方法稍微好些，因为它不必将 `value` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-368">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Single.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="a1216-369">请注意，尽管值为 <xref:System.Single.NaN> 的对象不被视为等于其值为 <xref:System.Single.NaN> 的另一个对象（即使是自身），<xref:System.IComparable%601> 接口要求 `A.CompareTo(A)` 返回零。</span><span class="sxs-lookup"><span data-stu-id="a1216-369">Note that, although an object whose value is <xref:System.Single.NaN> is not considered equal to another object whose value is <xref:System.Single.NaN> (even itself), the <xref:System.IComparable%601> interface requires that `A.CompareTo(A)` return zero.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="a1216-370">扩大转换</span><span class="sxs-lookup"><span data-stu-id="a1216-370">Widening Conversions</span></span>  
 <span data-ttu-id="a1216-371">根据您的编程语言，可能会将 <xref:System.Single.CompareTo%2A> 方法编码，其中参数类型的位数（比实例类型小）。</span><span class="sxs-lookup"><span data-stu-id="a1216-371">Depending on your programming language, it might be possible to code a <xref:System.Single.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="a1216-372">这是可能的，因为某些编程语言会执行将参数表示为类型的隐式扩大转换，该类型的位数与实例的位数一样多。</span><span class="sxs-lookup"><span data-stu-id="a1216-372">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="a1216-373">例如，假设实例类型为 <xref:System.Single> 并且参数类型为 <xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="a1216-373">For example, suppose the instance type is <xref:System.Single> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="a1216-374">Microsoft C#编译器生成说明，以将参数的值表示为 <xref:System.Single> 对象，然后生成一个 <xref:System.Single.CompareTo%28System.Single%29?displayProperty=nameWithType> 方法，该方法将实例的值与参数的加宽表示形式进行比较。</span><span class="sxs-lookup"><span data-stu-id="a1216-374">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Single> object, then generates a <xref:System.Single.CompareTo%28System.Single%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="a1216-375">请查阅编程语言的文档，以确定其编译器是否执行数值类型的隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="a1216-375">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="a1216-376">有关详细信息，请参阅[类型转换表](~/docs/standard/base-types/conversion-tables.md)主题。</span><span class="sxs-lookup"><span data-stu-id="a1216-376">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="a1216-377">比较中的精度</span><span class="sxs-lookup"><span data-stu-id="a1216-377">Precision in Comparisons</span></span>  
 <span data-ttu-id="a1216-378">超出所记录精度的浮点数的精度特定于 .NET Framework 的实现和版本。</span><span class="sxs-lookup"><span data-stu-id="a1216-378">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="a1216-379">因此，两个特定数字的比较可能会在 .NET Framework 的不同版本之间发生变化，因为数字的内部表示形式的精度可能会改变。</span><span class="sxs-lookup"><span data-stu-id="a1216-379">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-380">下面的代码示例演示了多个值和引用类型 <xref:System.Single.CompareTo%2A> 方法的泛型和非泛型版本。</span><span class="sxs-lookup"><span data-stu-id="a1216-380">The following code example demonstrates generic and nongeneric versions of the <xref:System.Single.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Epsilon">
      <MemberSignature Language="C#" Value="public const float Epsilon = 1.401298E-45;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 Epsilon = float32(1.401298E-45)" />
      <MemberSignature Language="DocId" Value="F:System.Single.Epsilon" />
      <MemberSignature Language="VB.NET" Value="Public Const Epsilon As Single  = 1.401298E-45" />
      <MemberSignature Language="C++ CLI" Value="public: float Epsilon = 1.401298E-45;" />
      <MemberSignature Language="F#" Value="val mutable Epsilon : single" Usage="System.single.Epsilon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1.401298E-45</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1216-381">表示大于零的最小正 <see cref="T:System.Single" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-381">Represents the smallest positive <see cref="T:System.Single" /> value that is greater than zero.</span></span> <span data-ttu-id="a1216-382">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="a1216-382">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-383">如果 <xref:System.Single> 实例的值为零，则 <xref:System.Single.Epsilon> 属性的值将反映数值运算或比较中重要的最小正 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-383">The value of the <xref:System.Single.Epsilon> property reflects the smallest positive <xref:System.Single> value that is significant in numeric operations or comparisons when the value of the <xref:System.Single> instance is zero.</span></span> <span data-ttu-id="a1216-384">例如，下面的代码显示零和 <xref:System.Single.Epsilon> 被视为不相等的值，而零和一半 <xref:System.Single.Epsilon> 的值被视为相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-384">For example, the following code shows that zero and <xref:System.Single.Epsilon> are considered to be unequal values, whereas zero and half the value of <xref:System.Single.Epsilon> are considered to be equal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/epsilon.cs#5)]
 [!code-vb[System.Single.Epsilon#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/epsilon.vb#5)]  
  
 <span data-ttu-id="a1216-385">更准确地说，单精度浮点格式由符号、23位尾数或有效位数以及8位指数组成。</span><span class="sxs-lookup"><span data-stu-id="a1216-385">More precisely, the single-precision floating-point format consists of a sign, a 23-bit mantissa or significand, and an 8-bit exponent.</span></span> <span data-ttu-id="a1216-386">如下面的示例所示，零的指数为-126，尾数为0。</span><span class="sxs-lookup"><span data-stu-id="a1216-386">As the following example shows, zero has an exponent of -126 and a mantissa of 0.</span></span> <span data-ttu-id="a1216-387"><xref:System.Single.Epsilon> 的指数为-126，尾数为1。</span><span class="sxs-lookup"><span data-stu-id="a1216-387"><xref:System.Single.Epsilon> has an exponent of -126 and a mantissa of 1.</span></span> <span data-ttu-id="a1216-388">这意味着 <xref:System.Single.Epsilon?displayProperty=nameWithType> 为大于零的最小正 <xref:System.Single> 值，并表示指数为-126 的 <xref:System.Single> 的最小可能值和可能的最小增量。</span><span class="sxs-lookup"><span data-stu-id="a1216-388">This means that <xref:System.Single.Epsilon?displayProperty=nameWithType> is the smallest positive <xref:System.Single> value that is greater than zero and represents the smallest possible value and the smallest possible increment for a <xref:System.Single> whose exponent is -126.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/epsilon1.cs#6)]
 [!code-vb[System.Single.Epsilon#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/epsilon1.vb#6)]  
  
 <span data-ttu-id="a1216-389">但 <xref:System.Single.Epsilon> 属性不是 <xref:System.Single> 类型的精度的一般度量值;它仅适用于值为零的 <xref:System.Single> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1216-389">However, the <xref:System.Single.Epsilon> property is not a general measure of precision of the <xref:System.Single> type; it applies only to <xref:System.Single> instances that have a value of zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1216-390"><xref:System.Single.Epsilon> 属性的值与计算机 epsilon 不等效，后者表示相对错误的上限，因为浮点算法中的舍入。</span><span class="sxs-lookup"><span data-stu-id="a1216-390">The value of the <xref:System.Single.Epsilon> property is not equivalent to machine epsilon, which represents the upper bound of the relative error due to rounding in floating-point arithmetic.</span></span>  
  
 <span data-ttu-id="a1216-391">此常量的值为 1.4 e-45。</span><span class="sxs-lookup"><span data-stu-id="a1216-391">The value of this constant is 1.4e-45.</span></span>  
  
 <span data-ttu-id="a1216-392">两个显然等效的浮点数可能不相等，因为其最小有效位之间存在差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-392">Two apparently equivalent floating-point numbers might not compare equal because of differences in their least significant digits.</span></span> <span data-ttu-id="a1216-393">例如， C#表达式 `(float)1/3 == (float)0.33333` 的比较结果不相等，因为左侧的除法运算具有最大的精度，而右侧的常数仅精确到指定的位数。</span><span class="sxs-lookup"><span data-stu-id="a1216-393">For example, the C# expression, `(float)1/3 == (float)0.33333`, does not compare equal because the division operation on the left side has maximum precision while the constant on the right side is precise only to the specified digits.</span></span> <span data-ttu-id="a1216-394">如果您创建一个自定义算法来确定是否可以将两个浮点数视为相等，则必须使用大于 <xref:System.Single.Epsilon> 常量的值来建立要考虑的两个值的差异的可接受绝对边距=.</span><span class="sxs-lookup"><span data-stu-id="a1216-394">If you create a custom algorithm that determines whether two floating-point numbers can be considered equal, you must use a value that is greater than the <xref:System.Single.Epsilon> constant to establish the acceptable absolute margin of difference for the two values to be considered equal.</span></span> <span data-ttu-id="a1216-395">（通常情况下，差值幅度大于 <xref:System.Single.Epsilon>。）</span><span class="sxs-lookup"><span data-stu-id="a1216-395">(Typically, that margin of difference is many times greater than <xref:System.Single.Epsilon>.)</span></span>  
  
## <a name="platform-notes"></a><span data-ttu-id="a1216-396">平台说明</span><span class="sxs-lookup"><span data-stu-id="a1216-396">Platform Notes</span></span>  
 <span data-ttu-id="a1216-397">在 ARM 系统上，<xref:System.Single.Epsilon> 常量的值太小，无法检测到，因此它等于零。</span><span class="sxs-lookup"><span data-stu-id="a1216-397">On ARM systems, the value of the <xref:System.Single.Epsilon> constant is too small to be detected, so it equates to zero.</span></span> <span data-ttu-id="a1216-398">可以改为定义等于 1.175494351 E-38 的备用 epsilon 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-398">You can define an alternative epsilon value that equals 1.175494351E-38 instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1216-399">返回一个值，该值指示 <see cref="T:System.Single" /> 的两个实例是否表示同一个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-399">Returns a value indicating whether two instances of <see cref="T:System.Single" /> represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="single.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a1216-400">与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-400">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="a1216-401">返回一个值，该值指示此实例是否等于指定的对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-401">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="a1216-402">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.Single" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-402"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Single" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-403">应慎用 <xref:System.Single.Equals%2A> 方法，因为两个值的精度不同，因此两个明显等效的值可能不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-403">The <xref:System.Single.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</span></span> <span data-ttu-id="a1216-404">下面的示例报告 <xref:System.Single> 值3333和除以3相除返回的 <xref:System.Single> 不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-404">The following example reports that the <xref:System.Single> value .3333 and the <xref:System.Single> returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/SingleEquals_25051.cs#3)]
 [!code-vb[System.Single.Epsilon#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/SingleEquals_25051.vb#3)]  
  
 <span data-ttu-id="a1216-405">建议的一种方法是定义两个值（例如其中一个值的 .01%）之间的差异，而不是比较是否相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-405">Rather than comparing for equality, one recommended technique involves defining an acceptable margin of difference between two values (such as .01% of one of the values).</span></span> <span data-ttu-id="a1216-406">如果这两个值之差的绝对值小于或等于该边距，则差异可能是由于精度的不同而导致的，因此，这些值可能是相等的。</span><span class="sxs-lookup"><span data-stu-id="a1216-406">If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to differences in precision and, therefore, the values are likely to be equal.</span></span> <span data-ttu-id="a1216-407">下面的示例使用此方法来比较. 33333 和1/3，前面的代码示例发现的两个 <xref:System.Single> 值是不相等的。</span><span class="sxs-lookup"><span data-stu-id="a1216-407">The following example uses this technique to compare .33333 and 1/3, the two <xref:System.Single> values that the previous code example found to be unequal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/SingleEquals_25051.cs#4)]
 [!code-vb[System.Single.Epsilon#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/SingleEquals_25051.vb#4)]  
  
 <span data-ttu-id="a1216-408">在这种情况下，值相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-408">In this case, the values are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1216-409">由于 <xref:System.Single.Epsilon> 定义其范围接近零的正值的最小表达式，因此差异的边距必须大于 <xref:System.Single.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="a1216-409">Because <xref:System.Single.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference must be greater than <xref:System.Single.Epsilon>.</span></span> <span data-ttu-id="a1216-410">通常情况下，它的数量大于 <xref:System.Single.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="a1216-410">Typically, it is many times greater than <xref:System.Single.Epsilon>.</span></span>  
  
 <span data-ttu-id="a1216-411">超出所记录精度的浮点数的精度特定于 .NET Framework 的实现和版本。</span><span class="sxs-lookup"><span data-stu-id="a1216-411">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="a1216-412">因此，两个特定数字的比较可能会在 .NET Framework 的不同版本之间发生变化，因为数字的内部表示形式的精度可能会改变。</span><span class="sxs-lookup"><span data-stu-id="a1216-412">Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-413">下面的代码示例演示 <xref:System.Single.Equals%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-413">The following code example demonstrates the <xref:System.Single.Equals%2A> method.</span></span>  
  
 [!code-cpp[System.Single#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#17)]
 [!code-csharp[System.Single#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#17)]
 [!code-vb[System.Single#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#17)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="a1216-414">编译器重载决策可能会考虑两 <see cref="M:System.Single.Equals(System.Object)" /> 方法重载的行为中的明显差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-414">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Single.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="a1216-415">如果定义了 <paramref name="obj" /> 参数与 <see cref="T:System.Single" /> 之间的隐式转换，并且参数未类型化为 <see cref="T:System.Object" />，则编译器可能会执行隐式转换并调用 <see cref="M:System.Single.Equals(System.Single)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-415">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Single" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Single.Equals(System.Single)" /> method.</span></span> <span data-ttu-id="a1216-416">否则，它们调用 <see cref="M:System.Single.Equals(System.Object)" /> 方法，如果其 <paramref name="obj" /> 参数不是 <see cref="T:System.Single" /> 值，则它始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-416">Otherwise, they call the <see cref="M:System.Single.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Single" /> value.</span></span> <span data-ttu-id="a1216-417">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-417">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="a1216-418">对于除 Visual Basic 中的 <see cref="T:System.Double" /> 之外的所有基元数值类型和中C#除 <see cref="T:System.Decimal" /> 和 <see cref="T:System.Double" /> 以外的所有基元数值类型，第一个比较返回 <see langword="true" />，因为编译器会自动执行扩大转换并调用 <see cref="M:System.Single.Equals(System.Single)" />方法，而第二个比较返回 <see langword="false" />，因为编译器调用 <see cref="M:System.Single.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-418">In the case of all primitive numeric types except for <see cref="T:System.Double" /> in Visual Basic and except for <see cref="T:System.Decimal" /> and <see cref="T:System.Double" /> in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Single.Equals(System.Single)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Single.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="a1216-419">[！ code-csharp[system.web. Equals # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsoverl.cs#2)][！ code-vb[system.web. Equals # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="a1216-419">[!code-csharp[System.Single.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Single.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Single.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (float obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(float32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Equals(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(float obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : single -&gt; bool" Usage="single.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a1216-420">与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-420">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="a1216-421">返回一个值，该值指示此实例和指定的 <see cref="T:System.Single" /> 对象是否表示相同的值。</span><span class="sxs-lookup"><span data-stu-id="a1216-421">Returns a value indicating whether this instance and a specified <see cref="T:System.Single" /> object represent the same value.</span></span></summary>
        <returns><span data-ttu-id="a1216-422">如果 <see langword="true" /> 与此实例相等，则为 <paramref name="obj" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-422"><see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-423">此方法实现 <xref:System.IEquatable%601?displayProperty=nameWithType> 接口，并且执行的效果略优于 <xref:System.Single.Equals%2A>，因为它不必将 `obj` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-423">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Single.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
## <a name="widening-conversions"></a><span data-ttu-id="a1216-424">扩大转换</span><span class="sxs-lookup"><span data-stu-id="a1216-424">Widening Conversions</span></span>  
 <span data-ttu-id="a1216-425">根据您的编程语言，可能会编写一个 <xref:System.Single.Equals%2A> 方法，其中参数类型的位数（比实例类型小）。</span><span class="sxs-lookup"><span data-stu-id="a1216-425">Depending on your programming language, it might be possible to code an <xref:System.Single.Equals%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="a1216-426">这是可能的，因为某些编程语言会执行将参数表示为类型的隐式扩大转换，该类型的位数与实例的位数一样多。</span><span class="sxs-lookup"><span data-stu-id="a1216-426">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="a1216-427">例如，假设实例类型为 <xref:System.Single> 并且参数类型为 <xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="a1216-427">For example, suppose the instance type is <xref:System.Single> and the parameter type is <xref:System.Int32>.</span></span> <span data-ttu-id="a1216-428">Microsoft C#编译器将生成说明，以将参数的值表示为 <xref:System.Single> 对象，然后生成一个 <xref:System.Single.Equals%28System.Single%29?displayProperty=nameWithType> 方法，该方法将实例的值与参数的加宽表示形式进行比较。</span><span class="sxs-lookup"><span data-stu-id="a1216-428">The Microsoft C# compiler generates instructions to represent the value of the parameter as a <xref:System.Single> object, and then generates a <xref:System.Single.Equals%28System.Single%29?displayProperty=nameWithType> method that compares the values of the instance and the widened representation of the parameter.</span></span>  
  
 <span data-ttu-id="a1216-429">请查阅编程语言的文档，以确定其编译器是否执行数值类型的隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="a1216-429">Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</span></span> <span data-ttu-id="a1216-430">有关详细信息，请参阅[类型转换表](~/docs/standard/base-types/conversion-tables.md)主题。</span><span class="sxs-lookup"><span data-stu-id="a1216-430">For more information, see the [Type Conversion Tables](~/docs/standard/base-types/conversion-tables.md) topic.</span></span>  
  
## <a name="precision-in-comparisons"></a><span data-ttu-id="a1216-431">比较中的精度</span><span class="sxs-lookup"><span data-stu-id="a1216-431">Precision in Comparisons</span></span>  
 <span data-ttu-id="a1216-432">应慎用 <xref:System.Single.Equals%2A> 方法，因为两个值的精度不同，因此两个明显等效的值可能不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-432">The <xref:System.Single.Equals%2A> method should be used with caution, because two apparently equivalent values can be unequal because of the differing precision of the two values.</span></span> <span data-ttu-id="a1216-433">下面的示例报告 <xref:System.Single> 值3333和除以3相除返回的 <xref:System.Single> 不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-433">The following example reports that the <xref:System.Single> value .3333 and the <xref:System.Single> returned by dividing 1 by 3 are unequal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/SingleEquals_25051.cs#1)]
 [!code-vb[System.Single.Epsilon#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/SingleEquals_25051.vb#1)]  
  
 <span data-ttu-id="a1216-434">避免与比较相等性相关的问题的一种比较方法是定义两个值之间的差异的可接受边距（如其中一个值的 .01%）。</span><span class="sxs-lookup"><span data-stu-id="a1216-434">One comparison technique that avoids the problems associated with comparing for equality involves defining an acceptable margin of difference between two values (such as .01% of one of the values).</span></span> <span data-ttu-id="a1216-435">如果这两个值之差的绝对值小于或等于该边距，则差异可能是精度的结果，因此，这些值可能是相等的。</span><span class="sxs-lookup"><span data-stu-id="a1216-435">If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be an outcome of differences in precision and, therefore, the values are likely to be equal.</span></span> <span data-ttu-id="a1216-436">下面的示例使用此方法来比较. 33333 和1/3，这是前面的代码示例发现不相等的两个 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-436">The following example uses this technique to compare .33333 and 1/3, which are the two <xref:System.Single> values that the previous code example found to be unequal.</span></span>  
  
 [!code-csharp[System.Single.Epsilon#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Epsilon/cs/SingleEquals_25051.cs#2)]
 [!code-vb[System.Single.Epsilon#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Epsilon/vb/SingleEquals_25051.vb#2)]  
  
 <span data-ttu-id="a1216-437">在这种情况下，值相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-437">In this case, the values are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1216-438">由于 <xref:System.Single.Epsilon> 定义其范围接近零的正值的最小表达式，因此差异的边距必须大于 <xref:System.Single.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="a1216-438">Because <xref:System.Single.Epsilon> defines the minimum expression of a positive value whose range is near zero, the margin of difference must be greater than <xref:System.Single.Epsilon>.</span></span> <span data-ttu-id="a1216-439">通常情况下，它的数量大于 <xref:System.Single.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="a1216-439">Typically, it is many times greater than <xref:System.Single.Epsilon>.</span></span> <span data-ttu-id="a1216-440">因此，建议不要在比较 <xref:System.Double> 值是否相等时使用 <xref:System.Double.Epsilon>。</span><span class="sxs-lookup"><span data-stu-id="a1216-440">Because of this, we recommend that you do not use <xref:System.Double.Epsilon> when comparing <xref:System.Double> values for equality.</span></span>  
  
 <span data-ttu-id="a1216-441">避免与比较相等性相关的问题的第二种方法是将两个浮点数之间的差与某个绝对值进行比较。</span><span class="sxs-lookup"><span data-stu-id="a1216-441">A second technique that avoids the problems associated with comparing for equality involves comparing the difference between two floating-point numbers with some absolute value.</span></span> <span data-ttu-id="a1216-442">如果差异小于或等于该绝对值，则数字相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-442">If the difference is less than or equal to that absolute value, the numbers are equal.</span></span> <span data-ttu-id="a1216-443">如果大于，则数字不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-443">If it is greater, the numbers are not equal.</span></span> <span data-ttu-id="a1216-444">执行此操作的一种方法是任意选择一个绝对值。</span><span class="sxs-lookup"><span data-stu-id="a1216-444">One way to do this is to arbitrarily select an absolute value.</span></span> <span data-ttu-id="a1216-445">但是，这是有问题的，因为可接受的差异幅度取决于 <xref:System.Single> 值的量。</span><span class="sxs-lookup"><span data-stu-id="a1216-445">However, this is problematic, because an acceptable margin of difference depends on the magnitude of the <xref:System.Single> values.</span></span> <span data-ttu-id="a1216-446">第二种方式利用了浮点格式的设计功能：两个浮点值的整数表示形式中的尾数组件之间的差异指示可能的浮点值的数目，这些值用于分隔两个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-446">A second way takes advantage of a design feature of the floating-point format: The difference between the mantissa components in the integer representations of two floating-point values indicates the number of possible floating-point values that separates the two values.</span></span> <span data-ttu-id="a1216-447">例如，0.0 和 <xref:System.Single.Epsilon> 之间的差值为1，因为 <xref:System.Single.Epsilon> 在处理值为零的 <xref:System.Single> 时是最小的可表示值。</span><span class="sxs-lookup"><span data-stu-id="a1216-447">For example, the difference between 0.0 and <xref:System.Single.Epsilon> is 1, because <xref:System.Single.Epsilon> is the smallest representable value when working with a <xref:System.Single> whose value is zero.</span></span> <span data-ttu-id="a1216-448">下面的示例使用此方法来比较. 33333 和1/3，这两个值是 <xref:System.Single.Equals%28System.Single%29> 方法方法不相等的两个 <xref:System.Double> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-448">The following example uses this technique to compare .33333 and 1/3, which are the two <xref:System.Double> values that the previous code example with the <xref:System.Single.Equals%28System.Single%29> method found to be unequal.</span></span> <span data-ttu-id="a1216-449">请注意，该示例使用 <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> 和 <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> 方法将单精度浮点值转换为其整数表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-449">Note that the example uses the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> and <xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType> methods to convert a single-precision floating-point value to its integer representation.</span></span>  
  
 [!code-csharp[System.Single.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsabs1.cs#1)]
 [!code-vb[System.Single.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsabs1.vb#1)]  
  
 <span data-ttu-id="a1216-450">超出所记录精度的浮点数的精度特定于 .NET Framework 的实现和版本。</span><span class="sxs-lookup"><span data-stu-id="a1216-450">The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</span></span> <span data-ttu-id="a1216-451">因此，两个数字的比较可能会产生不同的结果，具体取决于 .NET Framework 的版本，因为数字的内部表示形式的精度可能会改变。</span><span class="sxs-lookup"><span data-stu-id="a1216-451">Consequently, a comparison of two numbers might produce different results depending on the version of the .NET Framework, because the precision of the numbers' internal representation might change.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="a1216-452">编译器重载决策可能会考虑两 <see cref="M:System.Single.Equals(System.Object)" /> 方法重载的行为中的明显差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-452">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Single.Equals(System.Object)" /> method overloads.</span></span> <span data-ttu-id="a1216-453">如果定义了 <paramref name="obj" /> 参数与 <see cref="T:System.Single" /> 之间的隐式转换，并且参数未类型化为 <see cref="T:System.Object" />，则编译器可能会执行隐式转换并调用 <see cref="M:System.Single.Equals(System.Single)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-453">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.Single" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers may perform an implicit conversion and call the <see cref="M:System.Single.Equals(System.Single)" /> method.</span></span> <span data-ttu-id="a1216-454">否则，它们调用 <see cref="M:System.Single.Equals(System.Object)" /> 方法，如果其 <paramref name="obj" /> 参数不是 <see cref="T:System.Single" /> 值，则它始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-454">Otherwise, they call the <see cref="M:System.Single.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.Single" /> value.</span></span> <span data-ttu-id="a1216-455">下面的示例演示两个方法重载之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-455">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="a1216-456">对于除 Visual Basic 中的 <see cref="T:System.Double" /> 之外的所有基元数值类型和中C#除 <see cref="T:System.Decimal" /> 和 <see cref="T:System.Double" /> 以外的所有基元数值类型，第一个比较返回 <see langword="true" />，因为编译器会自动执行扩大转换并调用 <see cref="M:System.Single.Equals(System.Single)" />方法，而第二个比较返回 <see langword="false" />，因为编译器调用 <see cref="M:System.Single.Equals(System.Object)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-456">In the case of all primitive numeric types except for <see cref="T:System.Double" /> in Visual Basic and except for <see cref="T:System.Decimal" /> and <see cref="T:System.Double" /> in C#, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Single.Equals(System.Single)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Single.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="a1216-457">[！ code-csharp[system.web. Equals # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsoverl.cs#2)][！ code-vb[system.web. Equals # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsoverl.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="a1216-457">[!code-csharp[System.Single.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.equals/cs/equalsoverl.cs#2)] [!code-vb[System.Single.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.equals/vb/equalsoverl.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Single.Equals(System.Object)" />
        <altmember cref="Overload:System.Single.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="single.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1216-458">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="a1216-458">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="a1216-459">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="a1216-459">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="single.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1216-460">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-460">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-461">枚举常数 <see cref="F:System.TypeCode.Single" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-461">The enumerated constant, <see cref="F:System.TypeCode.Single" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="IsFinite">
      <MemberSignature Language="C#" Value="public static bool IsFinite (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFinite(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsFinite(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFinite (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFinite(float f);" />
      <MemberSignature Language="F#" Value="static member IsFinite : single -&gt; bool" Usage="System.single.IsFinite f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="f"><span data-ttu-id="a1216-462">单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-462">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a1216-463">确定指定值是否为有限（零、次正规数或正规数）。</span><span class="sxs-lookup"><span data-stu-id="a1216-463">Determines whether the specified value is finite (zero, subnormal or normal).</span></span></summary>
        <returns><span data-ttu-id="a1216-464">如果指定值是有限的（零、次正规数或正规数），则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-464"><see langword="true" /> if the specified value is finite (zero, subnormal or normal); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInfinity">
      <MemberSignature Language="C#" Value="public static bool IsInfinity (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinity(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsInfinity(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInfinity (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInfinity(float f);" />
      <MemberSignature Language="F#" Value="static member IsInfinity : single -&gt; bool" Usage="System.single.IsInfinity f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f"><span data-ttu-id="a1216-465">单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-465">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a1216-466">返回一个值，该值指示指定数字是计算为负无穷大还是正无穷大。</span><span class="sxs-lookup"><span data-stu-id="a1216-466">Returns a value indicating whether the specified number evaluates to negative or positive infinity.</span></span></summary>
        <returns><span data-ttu-id="a1216-467">如果 <paramref name="f" /> 的计算结果为 <see cref="F:System.Single.PositiveInfinity" /> 或 <see cref="F:System.Single.NegativeInfinity" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-467"><see langword="true" /> if <paramref name="f" /> evaluates to <see cref="F:System.Single.PositiveInfinity" /> or <see cref="F:System.Single.NegativeInfinity" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-468">浮点运算返回 <xref:System.Single.PositiveInfinity> 或 <xref:System.Single.NegativeInfinity> 以指示溢出情况。</span><span class="sxs-lookup"><span data-stu-id="a1216-468">Floating-point operations return <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-469">下面的代码示例演示 <xref:System.Single.IsInfinity%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-469">The following code example demonstrates the <xref:System.Single.IsInfinity%2A> method.</span></span>  
  
 [!code-cpp[System.Single#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#11)]
 [!code-csharp[System.Single#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#11)]
 [!code-vb[System.Single#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsPositiveInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsNegativeInfinity(System.Single)" />
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNaN">
      <MemberSignature Language="C#" Value="public static bool IsNaN (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNaN(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsNaN(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNaN (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNaN(float f);" />
      <MemberSignature Language="F#" Value="static member IsNaN : single -&gt; bool" Usage="System.single.IsNaN f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f"><span data-ttu-id="a1216-470">单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-470">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a1216-471">返回一个值，该值指示指定的值是否不为数字 (<see cref="F:System.Single.NaN" />)。</span><span class="sxs-lookup"><span data-stu-id="a1216-471">Returns a value that indicates whether the specified value is not a number (<see cref="F:System.Single.NaN" />).</span></span></summary>
        <returns><span data-ttu-id="a1216-472">如果 <paramref name="f" /> 计算为非数字 (<see cref="F:System.Single.NaN" />)，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-472"><see langword="true" /> if <paramref name="f" /> evaluates to not a number (<see cref="F:System.Single.NaN" />); otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-473">浮点运算返回 <xref:System.Single.NaN> 表示操作结果未定义。</span><span class="sxs-lookup"><span data-stu-id="a1216-473">Floating-point operations return <xref:System.Single.NaN> to signal that result of the operation is undefined.</span></span> <span data-ttu-id="a1216-474">例如，将0.0 除以0.0 会导致 <xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="a1216-474">For example, dividing 0.0 by 0.0 results in <xref:System.Single.NaN>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1216-475">如果 <xref:System.Single> 值 <xref:System.Single.PositiveInfinity> 或 <xref:System.Single.NegativeInfinity>，则 <xref:System.Single.IsNaN%2A> 返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="a1216-475"><xref:System.Single.IsNaN%2A> returns `false` if a <xref:System.Single> value is either <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity>.</span></span> <span data-ttu-id="a1216-476">若要测试这些值，请使用 <xref:System.Single.IsInfinity%2A>、<xref:System.Single.IsPositiveInfinity%2A> 和 <xref:System.Single.IsNegativeInfinity%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-476">To test for these values, use the <xref:System.Single.IsInfinity%2A>, <xref:System.Single.IsPositiveInfinity%2A>, and <xref:System.Single.IsNegativeInfinity%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-477">下面的代码示例演示 <xref:System.Single.IsNaN%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-477">The following code example demonstrates the <xref:System.Single.IsNaN%2A> method.</span></span>  
  
 [!code-cpp[System.Single#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#8)]
 [!code-csharp[System.Single#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#8)]
 [!code-vb[System.Single#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Single.NaN" />
      </Docs>
    </Member>
    <Member MemberName="IsNegative">
      <MemberSignature Language="C#" Value="public static bool IsNegative (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegative(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsNegative(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegative (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegative(float f);" />
      <MemberSignature Language="F#" Value="static member IsNegative : single -&gt; bool" Usage="System.single.IsNegative f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="f"><span data-ttu-id="a1216-478">单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-478">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a1216-479">确定指定值是否为负值。</span><span class="sxs-lookup"><span data-stu-id="a1216-479">Determines whether the specified value is negative.</span></span></summary>
        <returns><span data-ttu-id="a1216-480">如果为负值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-480"><see langword="true" /> if negative, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNegativeInfinity">
      <MemberSignature Language="C#" Value="public static bool IsNegativeInfinity (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNegativeInfinity(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsNegativeInfinity(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNegativeInfinity (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNegativeInfinity(float f);" />
      <MemberSignature Language="F#" Value="static member IsNegativeInfinity : single -&gt; bool" Usage="System.single.IsNegativeInfinity f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f"><span data-ttu-id="a1216-481">单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-481">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a1216-482">返回一个值，通过该值指示指定数字是否计算为负无穷大。</span><span class="sxs-lookup"><span data-stu-id="a1216-482">Returns a value indicating whether the specified number evaluates to negative infinity.</span></span></summary>
        <returns><span data-ttu-id="a1216-483">如果 <paramref name="f" /> 的计算结果为 <see cref="F:System.Single.NegativeInfinity" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-483"><see langword="true" /> if <paramref name="f" /> evaluates to <see cref="F:System.Single.NegativeInfinity" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-484">浮点运算返回 <xref:System.Single.NegativeInfinity> 以指示溢出情况。</span><span class="sxs-lookup"><span data-stu-id="a1216-484">Floating-point operations return <xref:System.Single.NegativeInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-485">下面的代码示例演示 <xref:System.Single.IsNegativeInfinity%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-485">The following code example demonstrates the <xref:System.Single.IsNegativeInfinity%2A> method.</span></span>  
  
 [!code-cpp[System.Single#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#13)]
 [!code-csharp[System.Single#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#13)]
 [!code-vb[System.Single#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsPositiveInfinity(System.Single)" />
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsNormal">
      <MemberSignature Language="C#" Value="public static bool IsNormal (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNormal(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsNormal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNormal (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNormal(float f);" />
      <MemberSignature Language="F#" Value="static member IsNormal : single -&gt; bool" Usage="System.single.IsNormal f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="f"><span data-ttu-id="a1216-486">单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-486">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a1216-487">确定指定值是否为正规数。</span><span class="sxs-lookup"><span data-stu-id="a1216-487">Determines whether the specified value is normal.</span></span></summary>
        <returns><span data-ttu-id="a1216-488">如果 <paramref name="f" /> 为正规数，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-488"><see langword="true" /> if <paramref name="f" /> is normal; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPositiveInfinity">
      <MemberSignature Language="C#" Value="public static bool IsPositiveInfinity (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPositiveInfinity(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsPositiveInfinity(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPositiveInfinity (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPositiveInfinity(float f);" />
      <MemberSignature Language="F#" Value="static member IsPositiveInfinity : single -&gt; bool" Usage="System.single.IsPositiveInfinity f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="f"><span data-ttu-id="a1216-489">单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-489">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a1216-490">返回一个值，通过该值指示指定数字是否计算为正无穷大。</span><span class="sxs-lookup"><span data-stu-id="a1216-490">Returns a value indicating whether the specified number evaluates to positive infinity.</span></span></summary>
        <returns><span data-ttu-id="a1216-491">如果 <paramref name="f" /> 的计算结果为 <see cref="F:System.Single.PositiveInfinity" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-491"><see langword="true" /> if <paramref name="f" /> evaluates to <see cref="F:System.Single.PositiveInfinity" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-492">浮点运算返回 <xref:System.Single.PositiveInfinity> 以指示溢出情况。</span><span class="sxs-lookup"><span data-stu-id="a1216-492">Floating-point operations return <xref:System.Single.PositiveInfinity> to signal an overflow condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-493">下面的代码示例演示 <xref:System.Single.IsPositiveInfinity%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-493">The following code example demonstrates the <xref:System.Single.IsPositiveInfinity%2A> method.</span></span>  
  
 [!code-cpp[System.Single#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#12)]
 [!code-csharp[System.Single#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#12)]
 [!code-vb[System.Single#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsNegativeInfinity(System.Single)" />
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="IsSubnormal">
      <MemberSignature Language="C#" Value="public static bool IsSubnormal (float f);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSubnormal(float32 f) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.IsSubnormal(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSubnormal (f As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSubnormal(float f);" />
      <MemberSignature Language="F#" Value="static member IsSubnormal : single -&gt; bool" Usage="System.single.IsSubnormal f" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="f"><span data-ttu-id="a1216-494">单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-494">A single-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="a1216-495">确定指定值是否是次正规数。</span><span class="sxs-lookup"><span data-stu-id="a1216-495">Determines whether the specified value is subnormal.</span></span></summary>
        <returns><span data-ttu-id="a1216-496">如果 <paramref name="f" /> 是次正规数，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-496"><see langword="true" /> if <paramref name="f" /> is subnormal; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const float MaxValue = 3.402823E+38;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 MaxValue = float32(3.402823E+38)" />
      <MemberSignature Language="DocId" Value="F:System.Single.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Single  = 3.402823E+38" />
      <MemberSignature Language="C++ CLI" Value="public: float MaxValue = 3.402823E+38;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : single" Usage="System.single.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>3.402823E+38</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1216-497">表示 <see cref="T:System.Single" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="a1216-497">Represents the largest possible value of <see cref="T:System.Single" />.</span></span> <span data-ttu-id="a1216-498">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="a1216-498">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-499">此常量的值为正 3.40282347 E + 38。</span><span class="sxs-lookup"><span data-stu-id="a1216-499">The value of this constant is positive 3.40282347E+38.</span></span>  
  
 <span data-ttu-id="a1216-500">超出 <xref:System.Single.MaxValue?displayProperty=nameWithType> 的操作的结果 <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1216-500">The result of an operation that exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType> is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1216-501">在下面的示例中，当结果超出 <xref:System.Single.MaxValue?displayProperty=nameWithType>时，<xref:System.Single.PositiveInfinity?displayProperty=nameWithType> 加法、乘法和幂运算的结果。</span><span class="sxs-lookup"><span data-stu-id="a1216-501">In the following example, <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> results from addition, multiplication, and exponentiation operations when the result exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Single.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.maxvalue/cs/maxvalueex.cs#1)]
 [!code-vb[System.Single.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.maxvalue/vb/maxvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="a1216-502">下面的代码示例演示 <xref:System.Single.MaxValue> 常量。</span><span class="sxs-lookup"><span data-stu-id="a1216-502">The following code example demonstrates the <xref:System.Single.MaxValue> constant.</span></span>  
  
 [!code-cpp[System.Single#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#4)]
 [!code-csharp[System.Single#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#4)]
 [!code-vb[System.Single#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Single.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const float MinValue = -3.402823E+38;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 MinValue = float32(-3.402823E+38)" />
      <MemberSignature Language="DocId" Value="F:System.Single.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Single  = -3.402823E+38" />
      <MemberSignature Language="C++ CLI" Value="public: float MinValue = -3.402823E+38;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : single" Usage="System.single.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>-3.402823E+38</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1216-503">表示 <see cref="T:System.Single" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="a1216-503">Represents the smallest possible value of <see cref="T:System.Single" />.</span></span> <span data-ttu-id="a1216-504">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="a1216-504">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-505">此常量的值为负 3.402823 e 38。</span><span class="sxs-lookup"><span data-stu-id="a1216-505">The value of this constant is negative 3.402823e38.</span></span>  
  
 <span data-ttu-id="a1216-506"><xref:System.Single.NegativeInfinity?displayProperty=nameWithType>为小于 <xref:System.Single.MinValue?displayProperty=nameWithType> 的操作的结果。</span><span class="sxs-lookup"><span data-stu-id="a1216-506">The result of an operation that is less than <xref:System.Single.MinValue?displayProperty=nameWithType> is <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1216-507">在下面的示例中，当结果小于 <xref:System.Single.MinValue?displayProperty=nameWithType>时，<xref:System.Single.NegativeInfinity?displayProperty=nameWithType> 减法运算和乘法运算结果。</span><span class="sxs-lookup"><span data-stu-id="a1216-507">In the following example, <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> results from subtraction and multiplication operations when the result is less than <xref:System.Single.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Single.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.minvalue/cs/minvalueex.cs#1)]
 [!code-vb[System.Single.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.minvalue/vb/minvalueex.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="a1216-508">下面的代码示例演示 <xref:System.Single.MinValue> 常量。</span><span class="sxs-lookup"><span data-stu-id="a1216-508">The following code example demonstrates the <xref:System.Single.MinValue> constant.</span></span>  
  
 [!code-cpp[System.Single#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#5)]
 [!code-csharp[System.Single#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#5)]
 [!code-vb[System.Single#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Single.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="NaN">
      <MemberSignature Language="C#" Value="public const float NaN = NaN;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 NaN = float32(NaN)" />
      <MemberSignature Language="DocId" Value="F:System.Single.NaN" />
      <MemberSignature Language="VB.NET" Value="Public Const NaN As Single  = NaN" />
      <MemberSignature Language="C++ CLI" Value="public: float NaN = NaN;" />
      <MemberSignature Language="F#" Value="val mutable NaN : single" Usage="System.single.NaN" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>NaN</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1216-509">表示非数字 (<see langword="NaN" />)。</span><span class="sxs-lookup"><span data-stu-id="a1216-509">Represents not a number (<see langword="NaN" />).</span></span> <span data-ttu-id="a1216-510">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="a1216-510">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-511">当操作的结果不确定时，方法或运算符返回 <xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="a1216-511">A method or operator returns <xref:System.Single.NaN> when the result of an operation is undefined.</span></span> <span data-ttu-id="a1216-512">例如，零除以零的结果为 <xref:System.Single.NaN>，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="a1216-512">For example, the result of dividing zero by zero is <xref:System.Single.NaN>, as the following example shows.</span></span> <span data-ttu-id="a1216-513">（但请注意，如果将非零数除以零，将返回 <xref:System.Single.PositiveInfinity> 或 <xref:System.Single.NegativeInfinity>，具体取决于除数的符号。）</span><span class="sxs-lookup"><span data-stu-id="a1216-513">(But note that dividing a non-zero number by zero returns either <xref:System.Single.PositiveInfinity> or <xref:System.Single.NegativeInfinity>, depending on the sign of the divisor.)</span></span>  
  
 [!code-csharp[System.Single.NaN#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.nan/cs/nan1.cs#1)]
 [!code-vb[System.Single.NaN#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.nan/vb/nan1.vb#1)]  
  
 <span data-ttu-id="a1216-514">此外，对 <xref:System.Single.NaN> 值使用 <xref:System.Single.NaN> 值或操作的方法调用将返回 <xref:System.Single.NaN>，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="a1216-514">In addition, a method call with a <xref:System.Single.NaN> value or an operation on a <xref:System.Single.NaN> value returns <xref:System.Single.NaN>, as the following example shows.</span></span>  
  
 [!code-csharp[System.Single.NaN#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.nan/cs/nan1.cs#2)]
 [!code-vb[System.Single.NaN#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.nan/vb/nan1.vb#2)]  
  
 <span data-ttu-id="a1216-515">使用 <xref:System.Single.IsNaN%2A> 方法来确定某个值是否不是数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-515">Use the <xref:System.Single.IsNaN%2A> method to determine whether a value is not a number.</span></span> <span data-ttu-id="a1216-516">通常，<xref:System.Single> 运算符不能用于将 <xref:System.Single.NaN?displayProperty=nameWithType> 与其他 <xref:System.Single> 值进行比较，不过比较方法（如 <xref:System.Single.Equals%2A> 和 <xref:System.Single.CompareTo%2A>）可以。</span><span class="sxs-lookup"><span data-stu-id="a1216-516">In general, <xref:System.Single> operators cannot be used to compare <xref:System.Single.NaN?displayProperty=nameWithType> with other <xref:System.Single> values, although comparison methods (such as <xref:System.Single.Equals%2A> and <xref:System.Single.CompareTo%2A>) can.</span></span> <span data-ttu-id="a1216-517">下面的示例说明 <xref:System.Single> 比较运算符与方法之间的行为差异。</span><span class="sxs-lookup"><span data-stu-id="a1216-517">The following example illustrates the difference in behavior between <xref:System.Single> comparison operators and methods.</span></span>  
  
 [!code-csharp[System.Single.NaN#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.nan/cs/single.nan4.cs#4)]
 [!code-vb[System.Single.NaN#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.nan/vb/single.nan4.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="a1216-518">下面的示例演示 <xref:System.Single.NaN> 常量。</span><span class="sxs-lookup"><span data-stu-id="a1216-518">The following example demonstrates the <xref:System.Single.NaN> constant.</span></span>  
  
 [!code-cpp[System.Single#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#7)]
 [!code-csharp[System.Single#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#7)]
 [!code-vb[System.Single#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsNaN(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinity">
      <MemberSignature Language="C#" Value="public const float NegativeInfinity = -Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 NegativeInfinity = float32(-Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Single.NegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const NegativeInfinity As Single  = -Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: float NegativeInfinity = -Infinity;" />
      <MemberSignature Language="F#" Value="val mutable NegativeInfinity : single" Usage="System.single.NegativeInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>-Infinity</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1216-519">表示负无穷。</span><span class="sxs-lookup"><span data-stu-id="a1216-519">Represents negative infinity.</span></span> <span data-ttu-id="a1216-520">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="a1216-520">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-521">此常量的值是负数除以零所得的结果。</span><span class="sxs-lookup"><span data-stu-id="a1216-521">The value of this constant is the result of dividing a negative number by zero.</span></span>  
  
 <span data-ttu-id="a1216-522">当操作的结果小于 <xref:System.Single.MinValue> 时，将返回此常数。</span><span class="sxs-lookup"><span data-stu-id="a1216-522">This constant is returned when the result of an operation is less than <xref:System.Single.MinValue>.</span></span>  
  
 <span data-ttu-id="a1216-523">使用 <xref:System.Single.IsNegativeInfinity%2A> 确定某个值是否计算为负无穷大。</span><span class="sxs-lookup"><span data-stu-id="a1216-523">Use <xref:System.Single.IsNegativeInfinity%2A> to determine whether a value evaluates to negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-524">下面的代码示例演示 <xref:System.Single.NegativeInfinity> 常量。</span><span class="sxs-lookup"><span data-stu-id="a1216-524">The following code example demonstrates the <xref:System.Single.NegativeInfinity> constant.</span></span>  
  
 [!code-cpp[System.Single#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#9)]
 [!code-csharp[System.Single#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#9)]
 [!code-vb[System.Single#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsNegativeInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsInfinity(System.Single)" />
        <altmember cref="F:System.Single.PositiveInfinity" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_Equality(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : single * single -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Single" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a1216-525">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-525">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a1216-526">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-526">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a1216-527">返回一个值，该值指示两个指定的 <see cref="T:System.Single" /> 值是否相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-527">Returns a value that indicates whether two specified <see cref="T:System.Single" /> values are equal.</span></span></summary>
        <returns><span data-ttu-id="a1216-528">如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-528"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-529"><xref:System.Single.op_Equality%2A> 方法定义 <xref:System.Single> 值的相等运算符。</span><span class="sxs-lookup"><span data-stu-id="a1216-529">The <xref:System.Single.op_Equality%2A> method defines the equality operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_GreaterThan(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : single * single -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Single" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a1216-530">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-530">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a1216-531">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-531">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a1216-532">返回一个值，该值指示指定的 <see cref="T:System.Single" /> 值是否大于另一个指定的 <see cref="T:System.Single" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-532">Returns a value that indicates whether a specified <see cref="T:System.Single" /> value is greater than another specified <see cref="T:System.Single" /> value.</span></span></summary>
        <returns><span data-ttu-id="a1216-533">如果 <see langword="true" /> 大于 <paramref name="left" />，则为 <paramref name="right" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-533"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-534"><xref:System.Single.op_GreaterThan%2A> 方法为 <xref:System.Single> 值定义大于运算符的运算。</span><span class="sxs-lookup"><span data-stu-id="a1216-534">The <xref:System.Single.op_GreaterThan%2A> method defines the operation of the greater-than operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : single * single -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Single" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a1216-535">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-535">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a1216-536">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-536">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a1216-537">返回一个值，该值指示指定的 <see cref="T:System.Single" /> 值是否大于或等于另一个指定的 <see cref="T:System.Single" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-537">Returns a value that indicates whether a specified <see cref="T:System.Single" /> value is greater than or equal to another specified <see cref="T:System.Single" /> value.</span></span></summary>
        <returns><span data-ttu-id="a1216-538">如果 <paramref name="left" /> 大于等于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-538"><see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-539"><xref:System.Single.op_GreaterThanOrEqual%2A> 方法为 <xref:System.Single> 值定义大于或等于运算符的运算。</span><span class="sxs-lookup"><span data-stu-id="a1216-539">The <xref:System.Single.op_GreaterThanOrEqual%2A> method defines the operation of the greater-than-or-equal operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_Inequality(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(float left, float right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : single * single -&gt; bool" Usage="System.single.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Single" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a1216-540">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-540">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a1216-541">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-541">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a1216-542">返回一个值，该值指示两个指定的 <see cref="T:System.Single" /> 值是否不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-542">Returns a value that indicates whether two specified <see cref="T:System.Single" /> values are not equal.</span></span></summary>
        <returns><span data-ttu-id="a1216-543">如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-543"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-544"><xref:System.Single.op_Inequality%2A> 方法定义了 <xref:System.Single> 值的不相等运算符。</span><span class="sxs-lookup"><span data-stu-id="a1216-544">The <xref:System.Single.op_Inequality%2A> method defines the inequality operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_LessThan(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : single * single -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Single" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a1216-545">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-545">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a1216-546">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-546">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a1216-547">返回一个值，该值指示指定的 <see cref="T:System.Single" /> 值是否小于另一个指定的 <see cref="T:System.Single" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-547">Returns a value that indicates whether a specified <see cref="T:System.Single" /> value is less than another specified <see cref="T:System.Single" /> value.</span></span></summary>
        <returns><span data-ttu-id="a1216-548">如果 <paramref name="left" /> 小于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-548"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-549"><xref:System.Single.op_LessThan%2A> 方法定义 <xref:System.Single> 值的小于运算符的运算。</span><span class="sxs-lookup"><span data-stu-id="a1216-549">The <xref:System.Single.op_LessThan%2A> method defines the operation of the less-than operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (float left, float right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(float32 left, float32 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Single, right As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(float left, float right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : single * single -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Single" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="a1216-550">要比较的第一个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-550">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="a1216-551">要比较的第二个值。</span><span class="sxs-lookup"><span data-stu-id="a1216-551">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="a1216-552">返回一个值，该值指示指定的 <see cref="T:System.Single" /> 值是否小于或等于另一个指定的 <see cref="T:System.Single" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-552">Returns a value that indicates whether a specified <see cref="T:System.Single" /> value is less than or equal to another specified <see cref="T:System.Single" /> value.</span></span></summary>
        <returns><span data-ttu-id="a1216-553">如果 <paramref name="left" /> 小于等于 <paramref name="right" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-553"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-554"><xref:System.Single.op_LessThanOrEqual%2A> 方法定义 <xref:System.Single> 值的小于或等于运算符的运算。</span><span class="sxs-lookup"><span data-stu-id="a1216-554">The <xref:System.Single.op_LessThanOrEqual%2A> method defines the operation of the less-than-or-equal operator for <xref:System.Single> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1216-555">将数字的字符串表示形式转换为它的等效单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-555">Converts the string representation of a number to its single-precision floating-point number equivalent.</span></span></summary>
        <altmember cref="Overload:System.Single.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; single" Usage="System.single.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a1216-556">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1216-556">A string that contains a number to convert.</span></span></param>
        <summary><span data-ttu-id="a1216-557">将数字的字符串表示形式转换为它的等效单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-557">Converts the string representation of a number to its single-precision floating-point number equivalent.</span></span></summary>
        <returns><span data-ttu-id="a1216-558">与 <paramref name="s" /> 中指定的数值或符号等效的单精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-558">A single-precision floating-point number equivalent to the numeric value or symbol specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-559">`s` 参数可以包含当前区域性的 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>或格式的字符串：</span><span class="sxs-lookup"><span data-stu-id="a1216-559">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="a1216-560">[*ws*][*sign*][*整数位数*[*，*]]*整数位数*[*。*[*小数位数*]][e [*sign*]*指数-数字*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="a1216-560">[*ws*][*sign*] [*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][e[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="a1216-561">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="a1216-561">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="a1216-562">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="a1216-562">The following table describes each element.</span></span>  
  
|<span data-ttu-id="a1216-563">元素</span><span class="sxs-lookup"><span data-stu-id="a1216-563">Element</span></span>|<span data-ttu-id="a1216-564">说明</span><span class="sxs-lookup"><span data-stu-id="a1216-564">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="a1216-565">*ws*</span><span class="sxs-lookup"><span data-stu-id="a1216-565">*ws*</span></span>|<span data-ttu-id="a1216-566">一系列空白字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-566">A series of white space characters.</span></span>|  
|<span data-ttu-id="a1216-567">*sign*</span><span class="sxs-lookup"><span data-stu-id="a1216-567">*sign*</span></span>|<span data-ttu-id="a1216-568">负号符号或正号符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-568">A negative sign symbol or a positive sign symbol.</span></span> <span data-ttu-id="a1216-569">有效的符号字符由当前区域性的 <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> 属性确定。</span><span class="sxs-lookup"><span data-stu-id="a1216-569">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="a1216-570">只能使用前导符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-570">Only a leading sign can be used.</span></span>|  
|<span data-ttu-id="a1216-571">*整数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-571">*integral-digits*</span></span>|<span data-ttu-id="a1216-572">一系列从0到9之间的数字，用于指定数字的整数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-572">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="a1216-573">*整数位数*的运行可以通过组分隔符进行分区。</span><span class="sxs-lookup"><span data-stu-id="a1216-573">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="a1216-574">例如，在某些区域性中，逗号（，）分隔上千组。</span><span class="sxs-lookup"><span data-stu-id="a1216-574">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="a1216-575">如果字符串包含*小数位数*元素，则可以不存在*整数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-575">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="a1216-576">*，*</span><span class="sxs-lookup"><span data-stu-id="a1216-576">*,*</span></span>|<span data-ttu-id="a1216-577">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-577">A culture-specific thousands separator symbol.</span></span>|  
|<span data-ttu-id="a1216-578">*.*</span><span class="sxs-lookup"><span data-stu-id="a1216-578">*.*</span></span>|<span data-ttu-id="a1216-579">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-579">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="a1216-580">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-580">*fractional-digits*</span></span>|<span data-ttu-id="a1216-581">一系列从0到9之间的数字，用于指定数字的小数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-581">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="a1216-582">E</span><span class="sxs-lookup"><span data-stu-id="a1216-582">E</span></span>|<span data-ttu-id="a1216-583">"E" 或 "E" 字符，指示值以指数（科学型）表示法表示。</span><span class="sxs-lookup"><span data-stu-id="a1216-583">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="a1216-584">*指数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-584">*exponential-digits*</span></span>|<span data-ttu-id="a1216-585">一系列从0到9之间的数字，用于指定指数。</span><span class="sxs-lookup"><span data-stu-id="a1216-585">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="a1216-586">`s` 参数使用 <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志的组合来进行解释。</span><span class="sxs-lookup"><span data-stu-id="a1216-586">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="a1216-587">这意味着允许使用空格和千位分隔符，但不允许货币符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-587">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="a1216-588">若要显式定义可出现在 `s`中的元素（如货币符号、千位分隔符和空格），请使用 <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="a1216-588">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method overload.</span></span>  
  
 <span data-ttu-id="a1216-589">`s` 参数是使用为当前系统区域性初始化 <xref:System.Globalization.NumberFormatInfo> 对象中的格式设置信息分析的。</span><span class="sxs-lookup"><span data-stu-id="a1216-589">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="a1216-590">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1216-590">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="a1216-591">若要通过使用特定区域性的格式设置信息分析字符串，请使用 <xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29> 或 <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-591">To parse a string by using the formatting information of a specific culture, use the <xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="a1216-592">通常，如果将 <xref:System.Single.Parse%2A> 方法传递到通过调用 <xref:System.Single.ToString%2A> 方法创建的字符串，则将返回原始的 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-592">Ordinarily, if you pass the <xref:System.Single.Parse%2A> method a string that is created by calling the <xref:System.Single.ToString%2A> method, the original <xref:System.Single> value is returned.</span></span> <span data-ttu-id="a1216-593">但是，由于精度损失，值可能不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-593">However, because of a loss of precision, the values may not be equal.</span></span>  
  
 <span data-ttu-id="a1216-594">如果在执行分析操作期间在 `s` 参数中遇到分隔符，并且适用的货币或小数分隔符和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-594">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="a1216-595">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1216-595">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-596">下面的示例使用 <xref:System.Single.Parse%28System.String%29> 方法将字符串数组转换为等效的 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-596">The following example uses the <xref:System.Single.Parse%28System.String%29> method to convert an array of strings to equivalent <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Single.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Parse/CS/parse1.cs#2)]
 [!code-vb[System.Single.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Parse/VB/parse1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1216-597"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-597"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="a1216-598"><paramref name="s" /> 不表示具有有效格式的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-598"><paramref name="s" /> does not represent a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a1216-599"><paramref name="s" /> 表示一个小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-599"><paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Single.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="a1216-600">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="a1216-600">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; single" Usage="System.single.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a1216-601">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1216-601">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="a1216-602">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-602">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="a1216-603">一个用来指定的典型值为 <see cref="F:System.Globalization.NumberStyles.Float" /> 与 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 的组合。</span><span class="sxs-lookup"><span data-stu-id="a1216-603">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span></span></param>
        <summary><span data-ttu-id="a1216-604">将具有指定样式的数字的字符串表示形式转换为它的等效单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-604">Converts the string representation of a number in a specified style to its single-precision floating-point number equivalent.</span></span></summary>
        <returns><span data-ttu-id="a1216-605">与在 <paramref name="s" /> 中指定的数值或符号等效的单精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-605">A single-precision floating-point number that is equivalent to the numeric value or symbol specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-606">`style` 参数定义在 `s` 参数中允许的样式元素（如空格、千位分隔符和货币符号），以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="a1216-606">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="a1216-607">它必须是 <xref:System.Globalization.NumberStyles> 枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="a1216-607">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="a1216-608">以下 <xref:System.Globalization.NumberStyles> 成员不受支持：</span><span class="sxs-lookup"><span data-stu-id="a1216-608">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="a1216-609">`s` 参数可以包含当前区域性的 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A><xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1216-609">The `s` parameter can contain the current culture's <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>.</span></span> <span data-ttu-id="a1216-610">根据 `style` 的值，它还可以采用以下格式：</span><span class="sxs-lookup"><span data-stu-id="a1216-610">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="a1216-611">[*ws*][*$*][*sign*][*整数位数*[*，*]]*整数位数*[*。*[*小数位数*]][E [*sign*]*指数-数字*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="a1216-611">[*ws*][*$*][*sign*][*integral-digits*[*,*]]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="a1216-612">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="a1216-612">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="a1216-613">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="a1216-613">The following table describes each element.</span></span>  
  
 <span data-ttu-id="a1216-614">*ws*</span><span class="sxs-lookup"><span data-stu-id="a1216-614">*ws*</span></span>  
 <span data-ttu-id="a1216-615">一系列空白字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-615">A series of white-space characters.</span></span> <span data-ttu-id="a1216-616">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，则空格可以出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾。</span><span class="sxs-lookup"><span data-stu-id="a1216-616">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>  
  
 $  
 <span data-ttu-id="a1216-617">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-617">A culture-specific currency symbol.</span></span> <span data-ttu-id="a1216-618">其在字符串中的位置由当前区域性的 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="a1216-618">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="a1216-619">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 标志，当前区域性的货币符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-619">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="a1216-620">*sign*</span><span class="sxs-lookup"><span data-stu-id="a1216-620">*sign*</span></span>  
 <span data-ttu-id="a1216-621">负号符号（-）或正号符号（+）。</span><span class="sxs-lookup"><span data-stu-id="a1216-621">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="a1216-622">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志，则符号会出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾处。</span><span class="sxs-lookup"><span data-stu-id="a1216-622">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a1216-623">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 标志，则可以在 `s` 中使用括号来表示负值。</span><span class="sxs-lookup"><span data-stu-id="a1216-623">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="a1216-624">*整数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-624">*integral-digits*</span></span>  
 <span data-ttu-id="a1216-625">一系列从0到9之间的数字，用于指定数字的整数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-625">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="a1216-626">如果字符串包含*小数位数*元素，则可以不存在*整数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-626">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>  
  
 <span data-ttu-id="a1216-627">,</span><span class="sxs-lookup"><span data-stu-id="a1216-627">,</span></span>  
 <span data-ttu-id="a1216-628">区域性特定的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-628">A culture-specific group separator.</span></span> <span data-ttu-id="a1216-629">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志，则当前区域性的组分隔符符号可以出现在 `s` 中</span><span class="sxs-lookup"><span data-stu-id="a1216-629">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>  
  
 <span data-ttu-id="a1216-630">。</span><span class="sxs-lookup"><span data-stu-id="a1216-630">.</span></span>  
 <span data-ttu-id="a1216-631">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-631">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="a1216-632">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，当前区域性的小数点符号会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-632">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="a1216-633">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-633">*fractional-digits*</span></span>  
 <span data-ttu-id="a1216-634">一系列从0到9之间的数字，用于指定数字的小数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-634">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="a1216-635">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，则小数位会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-635">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="a1216-636">E</span><span class="sxs-lookup"><span data-stu-id="a1216-636">E</span></span>  
 <span data-ttu-id="a1216-637">"E" 或 "E" 字符，指示值以指数（科学型）表示法表示。</span><span class="sxs-lookup"><span data-stu-id="a1216-637">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="a1216-638">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `value` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-638">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="a1216-639">*指数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-639">*exponential-digits*</span></span>  
 <span data-ttu-id="a1216-640">一系列从0到9之间的数字，用于指定指数。</span><span class="sxs-lookup"><span data-stu-id="a1216-640">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="a1216-641">无论 `style` 参数的值是什么，分析操作都将忽略 `s` 中任何终止的 NUL （U + 0000）字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-641">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="a1216-642">只包含数字的字符串（对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式）始终会成功分析。</span><span class="sxs-lookup"><span data-stu-id="a1216-642">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="a1216-643">其余 <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> 成员控制可能存在但不需要存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-643">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="a1216-644">下表指示单个 <xref:System.Globalization.NumberStyles> 标志如何影响可能出现在 `s`中的元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-644">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="a1216-645">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="a1216-645">NumberStyles value</span></span>|<span data-ttu-id="a1216-646">`s` 中允许的元素以及数字</span><span class="sxs-lookup"><span data-stu-id="a1216-646">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="a1216-647">仅限*整数数字*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-647">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="a1216-648">小数点（*.*）和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-648">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="a1216-649">"E" 或 "E" 字符，指示指数表示法。</span><span class="sxs-lookup"><span data-stu-id="a1216-649">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="a1216-650">此标志本身*支持格式为*E*位*的值;若要成功地分析包含正号或负号和小数点符号的字符串，需要其他标志。</span><span class="sxs-lookup"><span data-stu-id="a1216-650">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="a1216-651">`s`开头的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-651">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="a1216-652">`s`末尾的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-652">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="a1216-653">`s`开头的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-653">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="a1216-654">`s`末尾的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-654">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="a1216-655">用括号括起数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-655">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="a1216-656">千位分隔符（，）元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-656">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="a1216-657">货币符号（$）。</span><span class="sxs-lookup"><span data-stu-id="a1216-657">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="a1216-658">所有元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-658">All elements.</span></span> <span data-ttu-id="a1216-659">但 `s` 不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-659">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="a1216-660">`s`开头或结尾处的*ws*元素、`s`开头的*符号*，以及小数点（.）符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-660">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="a1216-661">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="a1216-661">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="a1216-662">`ws`、`sign`、千位分隔符（，）和小数点（.）元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-662">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="a1216-663">所有元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-663">All elements.</span></span> <span data-ttu-id="a1216-664">但 `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="a1216-664">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="a1216-665">`s` 的一些示例包括 "100"、"-123456789"、"123.45 e + 6"、"+ 500"、"5e2"、"3.1416"、"600"、"-. 123" 和 "-无限大"。</span><span class="sxs-lookup"><span data-stu-id="a1216-665">Some examples of `s` are "100", "-123,456,789", "123.45e+6", "+500", "5e2", "3.1416", "600.", "-.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="a1216-666">`s` 参数是使用为当前系统区域性初始化 <xref:System.Globalization.NumberFormatInfo> 对象中的格式设置信息分析的。</span><span class="sxs-lookup"><span data-stu-id="a1216-666">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="a1216-667">若要指定其格式设置信息用于分析操作的区域性，请调用 <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 重载。</span><span class="sxs-lookup"><span data-stu-id="a1216-667">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
 <span data-ttu-id="a1216-668">通常，如果将 <xref:System.Single.Parse%2A> 方法传递到通过调用 <xref:System.Single.ToString%2A> 方法创建的字符串，则将返回原始的 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-668">Ordinarily, if you pass the <xref:System.Single.Parse%2A> method a string that is created by calling the <xref:System.Single.ToString%2A> method, the original <xref:System.Single> value is returned.</span></span> <span data-ttu-id="a1216-669">但是，由于精度损失，值可能不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-669">However, because of a loss of precision, the values may not be equal.</span></span>  
  
 <span data-ttu-id="a1216-670">如果在执行分析操作期间在 `s` 参数中遇到分隔符，并且适用的货币或小数分隔符和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-670">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="a1216-671">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1216-671">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-672">下面的示例使用 <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> 方法来分析 <xref:System.Single> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-672">The following example uses the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Single> values.</span></span> <span data-ttu-id="a1216-673">该示例使用 en-us 区域性的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-673">The example uses formatting information for the en-US culture.</span></span>  
  
 [!code-csharp[System.Single.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Parse/CS/parse2.cs#3)]
 [!code-vb[System.Single.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Parse/VB/parse2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1216-674"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-674"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="a1216-675"><paramref name="s" /> 不是一个具有有效格式的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-675"><paramref name="s" /> is not a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a1216-676"><paramref name="s" /> 表示一个小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-676"><paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1216-677"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-677"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="a1216-678">或</span><span class="sxs-lookup"><span data-stu-id="a1216-678">-or-</span></span> 
 <span data-ttu-id="a1216-679"><paramref name="style" /> 包括 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-679"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="M:System.Single.ToString" />
        <altmember cref="Overload:System.Single.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="a1216-680">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="a1216-680">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; single" Usage="System.single.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a1216-681">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1216-681">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="a1216-682">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-682">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="a1216-683">将具有指定区域性特定格式的数字的字符串表示形式转换为它的等效单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-683">Converts the string representation of a number in a specified culture-specific format to its single-precision floating-point number equivalent.</span></span></summary>
        <returns><span data-ttu-id="a1216-684">与 <paramref name="s" /> 中指定的数值或符号等效的单精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-684">A single-precision floating-point number equivalent to the numeric value or symbol specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-685">此重载通常用于将可以多种方式设置格式的文本转换为 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-685">This overload is typically used to convert text that can be formatted in a variety of ways to a <xref:System.Single> value.</span></span> <span data-ttu-id="a1216-686">例如，它可用于将用户输入的文本转换为一个数字值。</span><span class="sxs-lookup"><span data-stu-id="a1216-686">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="a1216-687">`s` 参数使用 <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志的组合来进行解释。</span><span class="sxs-lookup"><span data-stu-id="a1216-687">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="a1216-688">`s` 参数可以包含 `provider`指定的区域性 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>或 <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>，也可以包含以下形式的字符串：</span><span class="sxs-lookup"><span data-stu-id="a1216-688">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`, or it can contain a string of the form:</span></span>  
  
 <span data-ttu-id="a1216-689">[*ws*][*sign*]*整数位数*[*。*[*小数位数*]][E [*sign*]*指数-数字*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="a1216-689">[*ws*][*sign*]*integral-digits*[*.*[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="a1216-690">可选元素括在方括号（[和]）中。</span><span class="sxs-lookup"><span data-stu-id="a1216-690">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="a1216-691">包含术语 "数字" 的元素包含一系列从0到9之间的数字字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-691">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span>  
  
|<span data-ttu-id="a1216-692">元素</span><span class="sxs-lookup"><span data-stu-id="a1216-692">Element</span></span>|<span data-ttu-id="a1216-693">说明</span><span class="sxs-lookup"><span data-stu-id="a1216-693">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="a1216-694">*ws*</span><span class="sxs-lookup"><span data-stu-id="a1216-694">*ws*</span></span>|<span data-ttu-id="a1216-695">一系列空白字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-695">A series of white-space characters.</span></span>|  
|<span data-ttu-id="a1216-696">*sign*</span><span class="sxs-lookup"><span data-stu-id="a1216-696">*sign*</span></span>|<span data-ttu-id="a1216-697">负号符号（-）或正号符号（+）。</span><span class="sxs-lookup"><span data-stu-id="a1216-697">A negative sign symbol (-) or a positive sign symbol (+).</span></span>|  
|<span data-ttu-id="a1216-698">*整数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-698">*integral-digits*</span></span>|<span data-ttu-id="a1216-699">一系列从0到9之间的数字，用于指定数字的整数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-699">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="a1216-700">*整数位数*的运行可以通过组分隔符进行分区。</span><span class="sxs-lookup"><span data-stu-id="a1216-700">Runs of *integral-digits* can be partitioned by a group-separator symbol.</span></span> <span data-ttu-id="a1216-701">例如，在某些区域性中，逗号（，）分隔上千组。</span><span class="sxs-lookup"><span data-stu-id="a1216-701">For example, in some cultures a comma (,) separates groups of thousands.</span></span> <span data-ttu-id="a1216-702">如果字符串包含*小数位数*元素，则可以不存在*整数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-702">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="a1216-703">。</span><span class="sxs-lookup"><span data-stu-id="a1216-703">.</span></span>|<span data-ttu-id="a1216-704">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-704">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="a1216-705">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-705">*fractional-digits*</span></span>|<span data-ttu-id="a1216-706">一系列从0到9之间的数字，用于指定数字的小数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-706">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="a1216-707">E</span><span class="sxs-lookup"><span data-stu-id="a1216-707">E</span></span>|<span data-ttu-id="a1216-708">"E" 或 "E" 字符，指示值以指数（科学型）表示法表示。</span><span class="sxs-lookup"><span data-stu-id="a1216-708">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="a1216-709">*指数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-709">*exponential-digits*</span></span>|<span data-ttu-id="a1216-710">一系列从0到9之间的数字，用于指定指数。</span><span class="sxs-lookup"><span data-stu-id="a1216-710">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="a1216-711">有关数字格式的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)主题。</span><span class="sxs-lookup"><span data-stu-id="a1216-711">For more information about numeric formats, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic.</span></span>  
  
 <span data-ttu-id="a1216-712">`provider` 参数是一个 <xref:System.IFormatProvider> 实现，其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回提供区域性特定格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-712">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="a1216-713">调用 <xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29> 方法时，它将调用 `provider` 参数的 <xref:System.IFormatProvider.GetFormat%2A> 方法，并向其传递一个表示 <xref:System.Globalization.NumberFormatInfo> 类型的 <xref:System.Type> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-713">When the <xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="a1216-714">然后 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关 `s` 参数格式的信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-714">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `s` parameter.</span></span> <span data-ttu-id="a1216-715">有三种方法可以使用 `provider` 参数向分析操作提供自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="a1216-715">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="a1216-716">可以传递表示提供格式设置信息的区域性的 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-716">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="a1216-717">它的 <xref:System.Globalization.CultureInfo.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供该区域性的数字格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-717">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="a1216-718">可以传递提供数字格式设置信息的实际 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-718">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="a1216-719">（其 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 的实现只返回自身。）</span><span class="sxs-lookup"><span data-stu-id="a1216-719">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="a1216-720">可以传递实现 <xref:System.IFormatProvider>的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-720">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="a1216-721">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法实例化并返回提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-721">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="a1216-722">如果 `provider` `null` 或无法获取 <xref:System.Globalization.NumberFormatInfo>，则使用当前系统区域性的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-722">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> cannot be obtained, the formatting information for the current system culture is used.</span></span>  
  
 <span data-ttu-id="a1216-723">如果在执行分析操作期间在 `s` 参数中遇到分隔符，并且适用的货币或小数分隔符和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-723">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="a1216-724">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1216-724">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
 <span data-ttu-id="a1216-725">`s` 的一些示例包括 "100"、"-123456789"、"123.45 e + 6"、"+ 500"、"5e2"、"3.1416"、"600"、"-. 123" 和 "-无限大"。</span><span class="sxs-lookup"><span data-stu-id="a1216-725">Some examples of `s` are "100", "-123,456,789", "123.45e+6", "+500", "5e2", "3.1416", "600.", "-.123", and "-Infinity".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-726">下面的示例是 Web 窗体的按钮单击事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="a1216-726">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="a1216-727">它使用 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> 属性返回的数组来确定用户的区域设置。</span><span class="sxs-lookup"><span data-stu-id="a1216-727">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="a1216-728">然后，它将实例化与该区域设置相对应的 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-728">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="a1216-729">然后，将属于该 <xref:System.Globalization.CultureInfo> 对象的 <xref:System.Globalization.NumberFormatInfo> 对象传递到 <xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29> 方法，以将用户的输入转换为 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-729">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Single> value.</span></span>  
  
 [!code-csharp[ParseMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#1)]
 [!code-vb[ParseMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1216-730"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-730"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="a1216-731"><paramref name="s" /> 不表示具有有效格式的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-731"><paramref name="s" /> does not represent a number in a valid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a1216-732"><paramref name="s" /> 表示一个小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-732"><paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Single.ToString" />
        <altmember cref="Overload:System.Single.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="a1216-733">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="a1216-733">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.AllowDecimalPoint | System.Globalization.NumberStyles.AllowExponent | System.Globalization.NumberStyles.AllowLeadingSign | System.Globalization.NumberStyles.AllowLeadingWhite | System.Globalization.NumberStyles.AllowThousands | System.Globalization.NumberStyles.AllowTrailingWhite | System.Globalization.NumberStyles.Float | System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Single" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; single" Usage="System.single.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static float Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; single" Usage="System.single.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a1216-734">包含要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1216-734">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="a1216-735">枚举值的按位组合，用于指示可出现在 <paramref name="s" /> 中的样式元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-735">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="a1216-736">一个用来指定的典型值为 <see cref="F:System.Globalization.NumberStyles.Float" /> 与 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 的组合。</span><span class="sxs-lookup"><span data-stu-id="a1216-736">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span></span></param>
        <param name="provider"><span data-ttu-id="a1216-737">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-737">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="a1216-738">将具有指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-738">Converts the string representation of a number in a specified style and culture-specific format to its single-precision floating-point number equivalent.</span></span></summary>
        <returns><span data-ttu-id="a1216-739">与 <paramref name="s" /> 中指定的数值或符号等效的单精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-739">A single-precision floating-point number equivalent to the numeric value or symbol specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-740">`style` 参数定义在 `s` 参数中允许的样式元素（如空格、千位分隔符和货币符号），以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="a1216-740">The `style` parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="a1216-741">它必须是 <xref:System.Globalization.NumberStyles> 枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="a1216-741">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="a1216-742">以下 <xref:System.Globalization.NumberStyles> 成员不受支持：</span><span class="sxs-lookup"><span data-stu-id="a1216-742">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber>  
  
 <span data-ttu-id="a1216-743">`s` 参数可以包含 `provider`指定的区域性的 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>或 <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1216-743">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType>, or <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType> for the culture specified by `provider`.</span></span> <span data-ttu-id="a1216-744">根据 `style` 的值，它还可以采用以下格式：</span><span class="sxs-lookup"><span data-stu-id="a1216-744">Depending on the value of `style`, it can also take the form:</span></span>  
  
 <span data-ttu-id="a1216-745">[*ws*][*$*][*sign*][*整数位数*，]*整数位数*[. [*小数位数*]][E [*sign*]*指数-数字*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="a1216-745">[*ws*] [*$*] [*sign*][*integral-digits*,]*integral-digits*[.[*fractional-digits*]][E[*sign*]*exponential-digits*][*ws*]</span></span>  
  
 <span data-ttu-id="a1216-746">括在方括号（[和]）中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="a1216-746">Elements framed in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="a1216-747">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="a1216-747">The following table describes each element.</span></span>  
  
|<span data-ttu-id="a1216-748">元素</span><span class="sxs-lookup"><span data-stu-id="a1216-748">Element</span></span>|<span data-ttu-id="a1216-749">说明</span><span class="sxs-lookup"><span data-stu-id="a1216-749">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="a1216-750">*ws*</span><span class="sxs-lookup"><span data-stu-id="a1216-750">*ws*</span></span>|<span data-ttu-id="a1216-751">一系列空白字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-751">A series of white-space characters.</span></span> <span data-ttu-id="a1216-752">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，则空格可以出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾。</span><span class="sxs-lookup"><span data-stu-id="a1216-752">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|$|<span data-ttu-id="a1216-753">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-753">A culture-specific currency symbol.</span></span> <span data-ttu-id="a1216-754">其在字符串中的位置由当前区域性的 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="a1216-754">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="a1216-755">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 标志，当前区域性的货币符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-755">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-756">*sign*</span><span class="sxs-lookup"><span data-stu-id="a1216-756">*sign*</span></span>|<span data-ttu-id="a1216-757">负号符号（-）或正号符号（+）。</span><span class="sxs-lookup"><span data-stu-id="a1216-757">A negative sign symbol (-) or a positive sign symbol (+).</span></span> <span data-ttu-id="a1216-758">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志，则符号会出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾处。</span><span class="sxs-lookup"><span data-stu-id="a1216-758">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a1216-759">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 标志，则可以在 `s` 中使用括号来表示负值。</span><span class="sxs-lookup"><span data-stu-id="a1216-759">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-760">*整数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-760">*integral-digits*</span></span>|<span data-ttu-id="a1216-761">一系列从0到9之间的数字，用于指定数字的整数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-761">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="a1216-762">如果字符串包含*小数位数*元素，则可以不存在*整数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-762">The *integral-digits* element can be absent if the string contains the *fractional-digits* element.</span></span>|  
|<span data-ttu-id="a1216-763">,</span><span class="sxs-lookup"><span data-stu-id="a1216-763">,</span></span>|<span data-ttu-id="a1216-764">区域性特定的组分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-764">A culture-specific group separator.</span></span> <span data-ttu-id="a1216-765">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志，则当前区域性的组分隔符符号可以出现在 `s` 中</span><span class="sxs-lookup"><span data-stu-id="a1216-765">The current culture's group separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag</span></span>|  
|<span data-ttu-id="a1216-766">。</span><span class="sxs-lookup"><span data-stu-id="a1216-766">.</span></span>|<span data-ttu-id="a1216-767">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-767">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="a1216-768">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，当前区域性的小数点符号会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-768">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-769">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-769">*fractional-digits*</span></span>|<span data-ttu-id="a1216-770">一系列从0到9之间的数字，用于指定数字的小数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-770">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="a1216-771">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，则小数位会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-771">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-772">E</span><span class="sxs-lookup"><span data-stu-id="a1216-772">E</span></span>|<span data-ttu-id="a1216-773">"E" 或 "E" 字符，指示值以指数（科学型）表示法表示。</span><span class="sxs-lookup"><span data-stu-id="a1216-773">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="a1216-774">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-774">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-775">*指数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-775">*exponential-digits*</span></span>|<span data-ttu-id="a1216-776">一系列从0到9之间的数字，用于指定指数。</span><span class="sxs-lookup"><span data-stu-id="a1216-776">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="a1216-777">无论 `style` 参数的值是什么，分析操作都将忽略 `s` 中任何终止的 NUL （U + 0000）字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-777">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="a1216-778">只包含数字的字符串（对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式）始终会成功分析。</span><span class="sxs-lookup"><span data-stu-id="a1216-778">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="a1216-779">其余 <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> 成员控制可能存在但不需要存在于输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-779">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="a1216-780">下表指示单个 <xref:System.Globalization.NumberStyles> 标志如何影响可能出现在 `s`中的元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-780">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="a1216-781">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="a1216-781">NumberStyles value</span></span>|<span data-ttu-id="a1216-782">`s` 中允许的元素以及数字</span><span class="sxs-lookup"><span data-stu-id="a1216-782">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="a1216-783">仅限*整数数字*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-783">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="a1216-784">小数点（*.*）和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-784">The decimal point (*.*) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="a1216-785">"E" 或 "E" 字符，指示指数表示法。</span><span class="sxs-lookup"><span data-stu-id="a1216-785">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="a1216-786">此标志本身*支持格式为*E*位*的值;若要成功地分析包含正号或负号和小数点符号的字符串，需要其他标志。</span><span class="sxs-lookup"><span data-stu-id="a1216-786">This flag by itself supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="a1216-787">`s`开头的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-787">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="a1216-788">`s`末尾的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-788">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="a1216-789">`s`开头的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-789">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="a1216-790">`s`末尾的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-790">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="a1216-791">用括号括起数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-791">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="a1216-792">千位分隔符（，）元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-792">The thousands separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="a1216-793">货币符号（$）。</span><span class="sxs-lookup"><span data-stu-id="a1216-793">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="a1216-794">所有元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-794">All elements.</span></span> <span data-ttu-id="a1216-795">但 `s` 不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-795">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="a1216-796">`s`开头或结尾处的*ws*元素、`s`开头的*符号*，以及小数点（.）符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-796">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="a1216-797">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="a1216-797">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="a1216-798">`ws`、`sign`、千位分隔符（，）和小数点（.）元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-798">The `ws`, `sign`, thousands separator (,) and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="a1216-799">所有元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-799">All elements.</span></span> <span data-ttu-id="a1216-800">但 `s` 不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="a1216-800">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="a1216-801">`provider` 参数是一个 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-801">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="a1216-802">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法返回一个 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关 `value`格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-802">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="a1216-803">通常，`provider` 可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="a1216-803">Typically, `provider` can be any one of the following:</span></span>  
  
-   <span data-ttu-id="a1216-804">一个 <xref:System.Globalization.CultureInfo> 对象，该对象表示提供数字格式设置信息的区域性。</span><span class="sxs-lookup"><span data-stu-id="a1216-804">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="a1216-805">它的 <xref:System.Globalization.CultureInfo.GetFormat%2A> 方法返回提供数字格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-805">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>  
  
-   <span data-ttu-id="a1216-806">提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-806">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="a1216-807">（其 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 的实现只返回自身。）</span><span class="sxs-lookup"><span data-stu-id="a1216-807">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="a1216-808">一个实现 <xref:System.IFormatProvider> 并使用 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 方法来实例化和返回提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-808">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="a1216-809">如果 `null``provider`，则使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-809">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
 <span data-ttu-id="a1216-810">如果在执行分析操作期间在 `s` 参数中遇到分隔符，并且适用的货币或小数分隔符和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-810">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="a1216-811">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1216-811">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-812">下面的代码示例使用 <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 方法来分析 <xref:System.Single> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-812">The following code example uses the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to parse the string representations of <xref:System.Single> values.</span></span> <span data-ttu-id="a1216-813">数组中的每个字符串都使用 en-us、nl、NL 和自定义区域性的格式设置约定进行分析。</span><span class="sxs-lookup"><span data-stu-id="a1216-813">Each string in an array is parsed using the formatting conventions of the en-US, nl-NL, and a custom culture.</span></span> <span data-ttu-id="a1216-814">自定义区域性将其组分隔符符号定义为下划线（"_"），其组大小为2。</span><span class="sxs-lookup"><span data-stu-id="a1216-814">The custom culture defines its group separator symbol as the underscore ("_") and its group size as two.</span></span>  
  
 [!code-csharp[System.Single.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.Parse/CS/parse3.cs#4)]
 [!code-vb[System.Single.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.Parse/VB/parse3.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1216-815"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-815"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="a1216-816"><paramref name="s" /> 不表示一个数值。</span><span class="sxs-lookup"><span data-stu-id="a1216-816"><paramref name="s" /> does not represent a numeric value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1216-817"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-817"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="a1216-818">或</span><span class="sxs-lookup"><span data-stu-id="a1216-818">-or-</span></span> 
 <span data-ttu-id="a1216-819"><paramref name="style" /> 是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-819"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a1216-820"><paramref name="s" /> 表示一个小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-820"><paramref name="s" /> represents a number that is less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Single.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="a1216-821">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="a1216-821">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinity">
      <MemberSignature Language="C#" Value="public const float PositiveInfinity = Infinity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 PositiveInfinity = float32(Infinity)" />
      <MemberSignature Language="DocId" Value="F:System.Single.PositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="Public Const PositiveInfinity As Single  = Infinity" />
      <MemberSignature Language="C++ CLI" Value="public: float PositiveInfinity = Infinity;" />
      <MemberSignature Language="F#" Value="val mutable PositiveInfinity : single" Usage="System.single.PositiveInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>Infinity</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a1216-822">表示正无穷。</span><span class="sxs-lookup"><span data-stu-id="a1216-822">Represents positive infinity.</span></span> <span data-ttu-id="a1216-823">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="a1216-823">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-824">此常量的值是将正数除以零所得的结果。</span><span class="sxs-lookup"><span data-stu-id="a1216-824">The value of this constant is the result of dividing a positive number by zero.</span></span>  
  
 <span data-ttu-id="a1216-825">当操作的结果大于 <xref:System.Single.MaxValue> 时，将返回此常数。</span><span class="sxs-lookup"><span data-stu-id="a1216-825">This constant is returned when the result of an operation is greater than <xref:System.Single.MaxValue>.</span></span>  
  
 <span data-ttu-id="a1216-826">使用 <xref:System.Single.IsPositiveInfinity%2A> 确定某个值是否计算为正无穷大。</span><span class="sxs-lookup"><span data-stu-id="a1216-826">Use <xref:System.Single.IsPositiveInfinity%2A> to determine whether a value evaluates to positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-827">下面的代码示例演示 <xref:System.Single.PositiveInfinity> 常量。</span><span class="sxs-lookup"><span data-stu-id="a1216-827">The following code example demonstrates the <xref:System.Single.PositiveInfinity> constant.</span></span>  
  
 [!code-cpp[System.Single#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#10)]
 [!code-csharp[System.Single#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#10)]
 [!code-vb[System.Single#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.IsPositiveInfinity(System.Single)" />
        <altmember cref="M:System.Single.IsInfinity(System.Single)" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-828">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-828">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-829">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-829">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-830">如果当前实例的值不为零，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-830"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-831">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-831">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-832">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-832">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-833">建议的替代项是调用 <xref:System.Convert.ToBoolean%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-833">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-834">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-834">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-835">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-835">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-836">当前实例的值，已转换为 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-836">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-837">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-837">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-838">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-838">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-839">建议的替代项是调用 <xref:System.Convert.ToByte%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-839">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-840">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-840">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-841">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="a1216-841">This conversion is not supported.</span></span> <span data-ttu-id="a1216-842">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-842">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-843">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="a1216-843">This conversion is not supported.</span></span> <span data-ttu-id="a1216-844">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="a1216-844">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a1216-845">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="a1216-845">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-846">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-846">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-847">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="a1216-847">This conversion is not supported.</span></span> <span data-ttu-id="a1216-848">尝试使用此方法将引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-848">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-849">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="a1216-849">This conversion is not supported.</span></span> <span data-ttu-id="a1216-850">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="a1216-850">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a1216-851">在所有情况下。</span><span class="sxs-lookup"><span data-stu-id="a1216-851">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-852">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-852">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-853">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-853">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-854">当前实例的值，已转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-854">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-855">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-855">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-856">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-856">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-857">建议的替代项是调用 <xref:System.Convert.ToDecimal%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-857">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-858">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-858">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-859">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-859">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-860">当前实例的值，已转换为 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-860">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-861">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-861">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-862">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-862">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-863">建议的替代项是调用 <xref:System.Convert.ToDouble%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-863">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-864">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-864">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-865">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-865">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-866">当前实例的值，已转换为 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-866">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-867">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-867">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-868">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-868">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-869">建议的替代项是调用 <xref:System.Convert.ToInt16%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-869">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-870">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-870">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-871">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-871">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-872">当前实例的值，已转换为 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-872">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-873">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-873">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-874">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-874">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-875">建议的替代项是调用 <xref:System.Convert.ToInt32%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-875">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-876">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-876">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-877">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-877">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-878">当前实例的值，已转换为 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-878">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-879">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-879">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-880">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-880">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-881">建议的替代项是调用 <xref:System.Convert.ToInt64%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-881">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-882">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-882">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-883">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-883">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-884">当前实例的值，已转换为 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-884">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-885">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-885">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-886">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-886">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-887">建议的替代项是调用 <xref:System.Convert.ToSByte%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-887">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-888">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-888">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-889">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-889">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-890">当前实例的值，未更改。</span><span class="sxs-lookup"><span data-stu-id="a1216-890">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-891">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-891">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-892">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-892">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a1216-893">此 <see cref="T:System.Single" /> 值要转换为的类型。</span><span class="sxs-lookup"><span data-stu-id="a1216-893">The type to which to convert this <see cref="T:System.Single" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="a1216-894">提供有关返回值格式信息的对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-894">An object that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="a1216-895">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-895">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-896">当前实例的值，已转换为 <paramref name="type" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-896">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-897">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-897">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-898">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-898">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-899">建议的替代方法是调用 `static` （Visual Basic） <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> 方法中的`Shared`。</span><span class="sxs-lookup"><span data-stu-id="a1216-899">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-900">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-900">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-901">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-901">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-902">当前实例的值，已转换为 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-902">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-903">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-903">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-904">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-904">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-905">建议的替代项是调用 <xref:System.Convert.ToUInt16%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-905">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-906">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-906">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-907">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-907">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-908">当前实例的值，已转换为 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-908">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-909">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-909">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-910">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-910">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-911">建议的替代项是调用 <xref:System.Convert.ToUInt32%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-911">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-912">忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="a1216-912">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="a1216-913">有关此成员的说明，请参见 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-913">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="a1216-914">当前实例的值，已转换为 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-914">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-915">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-915">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1216-916">它只能在 <xref:System.Single> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-916">It can be used only when the <xref:System.Single> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="a1216-917">建议的替代项是调用 <xref:System.Convert.ToUInt64%28System.Single%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-917">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Single%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1216-918">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-918">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="single.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1216-919">将此实例的数值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-919">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="a1216-920">此实例的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-920">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-921"><xref:System.Single.ToString> 方法使用当前区域性的默认值（"G" 或 "常规"）格式设置 <xref:System.Single> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="a1216-921">The <xref:System.Single.ToString> method formats a <xref:System.Single> value in the default ("G", or general) format of the current culture.</span></span> <span data-ttu-id="a1216-922">如果要指定其他格式或区域性，请使用 <xref:System.Single.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="a1216-922">If you want to specify a different format or culture, use the other overloads of the <xref:System.Single.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="a1216-923">使用格式</span><span class="sxs-lookup"><span data-stu-id="a1216-923">To use format</span></span>|<span data-ttu-id="a1216-924">对于区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-924">For culture</span></span>|<span data-ttu-id="a1216-925">使用重载</span><span class="sxs-lookup"><span data-stu-id="a1216-925">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="a1216-926">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="a1216-926">Default ("G") format</span></span>|<span data-ttu-id="a1216-927">特定区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-927">A specific culture</span></span>|<xref:System.Single.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="a1216-928">特定格式</span><span class="sxs-lookup"><span data-stu-id="a1216-928">A specific format</span></span>|<span data-ttu-id="a1216-929">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-929">Default (current) culture</span></span>|<xref:System.Single.ToString%28System.String%29>|  
|<span data-ttu-id="a1216-930">特定格式</span><span class="sxs-lookup"><span data-stu-id="a1216-930">A specific format</span></span>|<span data-ttu-id="a1216-931">特定区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-931">A specific culture</span></span>|<xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="a1216-932">返回值可以是 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A> 或格式的字符串：</span><span class="sxs-lookup"><span data-stu-id="a1216-932">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="a1216-933">[sign] 整数位数 [. [小数位数]] [e [sign] 指数-数字]</span><span class="sxs-lookup"><span data-stu-id="a1216-933">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="a1216-934">可选元素括在方括号（[和]）中。</span><span class="sxs-lookup"><span data-stu-id="a1216-934">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="a1216-935">包含术语 "数字" 的元素包含一系列从0到9之间的数字字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-935">Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="a1216-936">下表列出了每个元素：</span><span class="sxs-lookup"><span data-stu-id="a1216-936">The following table lists each element:</span></span>  
  
|<span data-ttu-id="a1216-937">元素</span><span class="sxs-lookup"><span data-stu-id="a1216-937">Element</span></span>|<span data-ttu-id="a1216-938">说明</span><span class="sxs-lookup"><span data-stu-id="a1216-938">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="a1216-939">*sign*</span><span class="sxs-lookup"><span data-stu-id="a1216-939">*sign*</span></span>|<span data-ttu-id="a1216-940">负号或正号符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-940">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="a1216-941">*整数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-941">*integral-digits*</span></span>|<span data-ttu-id="a1216-942">指定数字的整数部分的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-942">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="a1216-943">如果有小数位数，则可以不存在整数位数。</span><span class="sxs-lookup"><span data-stu-id="a1216-943">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="a1216-944">'.'</span><span class="sxs-lookup"><span data-stu-id="a1216-944">'.'</span></span>|<span data-ttu-id="a1216-945">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-945">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="a1216-946">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-946">*fractional-digits*</span></span>|<span data-ttu-id="a1216-947">指定数字小数部分的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-947">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="a1216-948">电邮</span><span class="sxs-lookup"><span data-stu-id="a1216-948">'e'</span></span>|<span data-ttu-id="a1216-949">小写字符 "e"，指示指数（科学型）表示法。</span><span class="sxs-lookup"><span data-stu-id="a1216-949">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="a1216-950">*指数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-950">*exponential-digits*</span></span>|<span data-ttu-id="a1216-951">指定指数的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-951">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="a1216-952">返回值的一些示例包括 "100"、"-123456789"、"123.45 e + 6"、"500"、"3.1416"、"600"、"-0.123" 和 "-无限大"。</span><span class="sxs-lookup"><span data-stu-id="a1216-952">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="a1216-953">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="a1216-953">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="a1216-954">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-954">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="a1216-955">有关格式设置的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-955">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-956">下面的示例使用默认 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 方法来显示若干 <xref:System.Single> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-956">The following example uses the default <xref:System.Single.ToString%2A?displayProperty=nameWithType> method to display the string representations of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Single.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString1.cs#1)]
 [!code-vb[System.Single.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString1.vb#1)]  
  
 <span data-ttu-id="a1216-957">下面的代码示例演示如何将 <xref:System.Single.Parse%28System.String%29> 方法与 <xref:System.Single.ToString> 方法一起使用。</span><span class="sxs-lookup"><span data-stu-id="a1216-957">The following code example illustrates the use of the <xref:System.Single.Parse%28System.String%29> method along with the <xref:System.Single.ToString> method.</span></span>  
  
 [!code-cpp[System.Single#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Single/CPP/singlesample.cpp#3)]
 [!code-csharp[System.Single#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single/CS/singlesample.cs#3)]
 [!code-vb[System.Single#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single/VB/singlesample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="a1216-958">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="a1216-958">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Single.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="single.ToString provider" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a1216-959">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-959">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="a1216-960">使用指定的区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-960">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="a1216-961">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="a1216-961">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-962"><xref:System.Single.ToString%28System.IFormatProvider%29> 方法使用指定区域性的默认值（"G" 或 "常规"）格式设置 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-962">The <xref:System.Single.ToString%28System.IFormatProvider%29> method formats a <xref:System.Single> value in the default ("G", or general) format of a specified culture.</span></span> <span data-ttu-id="a1216-963">如果要指定其他格式或当前区域性，请使用 <xref:System.Single.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="a1216-963">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Single.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="a1216-964">使用格式</span><span class="sxs-lookup"><span data-stu-id="a1216-964">To use format</span></span>|<span data-ttu-id="a1216-965">对于区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-965">For culture</span></span>|<span data-ttu-id="a1216-966">使用重载</span><span class="sxs-lookup"><span data-stu-id="a1216-966">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="a1216-967">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="a1216-967">Default ("G") format</span></span>|<span data-ttu-id="a1216-968">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-968">Default (current) culture</span></span>|<xref:System.Single.ToString>|  
|<span data-ttu-id="a1216-969">特定格式</span><span class="sxs-lookup"><span data-stu-id="a1216-969">A specific format</span></span>|<span data-ttu-id="a1216-970">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-970">Default (current) culture</span></span>|<xref:System.Single.ToString%28System.String%29>|  
|<span data-ttu-id="a1216-971">特定格式</span><span class="sxs-lookup"><span data-stu-id="a1216-971">A specific format</span></span>|<span data-ttu-id="a1216-972">特定区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-972">A specific culture</span></span>|<xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="a1216-973">返回值可以是 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A> 或格式的字符串：</span><span class="sxs-lookup"><span data-stu-id="a1216-973">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or a string of the form:</span></span>  
  
 <span data-ttu-id="a1216-974">[sign] 整数位数 [. [小数位数]] [e [sign] 指数-数字]</span><span class="sxs-lookup"><span data-stu-id="a1216-974">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</span></span>  
  
 <span data-ttu-id="a1216-975">可选元素括在方括号（[和]）中。</span><span class="sxs-lookup"><span data-stu-id="a1216-975">Optional elements are framed in square brackets ([ and ]).</span></span> <span data-ttu-id="a1216-976">包含术语 "数字" 的元素包含一系列从0到9之间的数字字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-976">Elements containing the term "digits" consist of a series of numeric characters ranging from 0 to 9.</span></span> <span data-ttu-id="a1216-977">下表列出了每个元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-977">The following table lists each element.</span></span>  
  
|<span data-ttu-id="a1216-978">元素</span><span class="sxs-lookup"><span data-stu-id="a1216-978">Element</span></span>|<span data-ttu-id="a1216-979">说明</span><span class="sxs-lookup"><span data-stu-id="a1216-979">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="a1216-980">Sign</span><span class="sxs-lookup"><span data-stu-id="a1216-980">sign</span></span>|<span data-ttu-id="a1216-981">负号或正号符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-981">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="a1216-982">整数位数</span><span class="sxs-lookup"><span data-stu-id="a1216-982">integral-digits</span></span>|<span data-ttu-id="a1216-983">指定数字的整数部分的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-983">A series of digits specifying the integral part of the number.</span></span> <span data-ttu-id="a1216-984">如果有小数位数，则可以不存在整数位数。</span><span class="sxs-lookup"><span data-stu-id="a1216-984">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="a1216-985">'.'</span><span class="sxs-lookup"><span data-stu-id="a1216-985">'.'</span></span>|<span data-ttu-id="a1216-986">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-986">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="a1216-987">小数位数</span><span class="sxs-lookup"><span data-stu-id="a1216-987">fractional-digits</span></span>|<span data-ttu-id="a1216-988">指定数字小数部分的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-988">A series of digits specifying the fractional part of the number.</span></span>|  
|<span data-ttu-id="a1216-989">电邮</span><span class="sxs-lookup"><span data-stu-id="a1216-989">'e'</span></span>|<span data-ttu-id="a1216-990">小写字符 "e"，指示指数（科学型）表示法。</span><span class="sxs-lookup"><span data-stu-id="a1216-990">A lowercase character 'e', indicating exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="a1216-991">指数位数</span><span class="sxs-lookup"><span data-stu-id="a1216-991">exponential-digits</span></span>|<span data-ttu-id="a1216-992">指定指数的一系列数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-992">A series of digits specifying an exponent.</span></span>|  
  
 <span data-ttu-id="a1216-993">返回值的一些示例包括 "100"、"-123456789"、"123.45 e + 6"、"500"、"3.1416"、"600"、"-0.123" 和 "-无限大"。</span><span class="sxs-lookup"><span data-stu-id="a1216-993">Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</span></span>  
  
 <span data-ttu-id="a1216-994">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="a1216-994">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="a1216-995">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-995">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="a1216-996">有关格式设置的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-996">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="a1216-997">`provider` 参数是其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象的 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-997">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="a1216-998">通常，`provider` 是 <xref:System.Globalization.CultureInfo> 对象或 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-998">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="a1216-999">`provider` 参数提供用于设置格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-999">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="a1216-1000">如果 `null``provider`，则使用当前区域性的 <xref:System.Globalization.NumberFormatInfo> 数据对返回值进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="a1216-1000">If `provider` is `null`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> data for the current culture.</span></span>  
  
 <span data-ttu-id="a1216-1001">若要使用指定的区域性和特定格式字符串将 <xref:System.Single> 值转换为其字符串表示形式，请调用 <xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1216-1001">To convert a <xref:System.Single> value to its string representation using a specified culture and a specific format string, call the <xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-1002">下面的示例使用表示多个不同区域性的 <xref:System.Globalization.CultureInfo> 对象显示两个 <xref:System.Single> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-1002">The following example displays the string representation of two <xref:System.Single> values using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Single.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString1.cs#2)]
 [!code-vb[System.Single.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="a1216-1003">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1003">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="single.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="a1216-1004">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="a1216-1004">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="a1216-1005">使用指定的格式，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-1005">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="a1216-1006">此实例的值的字符串表示形式，由 <paramref name="format" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="a1216-1006">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-1007"><xref:System.Single.ToString%28System.String%29> 方法使用当前区域性的约定来设置指定格式的 <xref:System.Single> 值的格式。</span><span class="sxs-lookup"><span data-stu-id="a1216-1007">The <xref:System.Single.ToString%28System.String%29> method formats a <xref:System.Single> value in a specified format by using the conventions of the current culture.</span></span> <span data-ttu-id="a1216-1008">如果要使用默认格式（"G" 或 "常规"）或指定不同的区域性，请使用 <xref:System.Single.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="a1216-1008">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Single.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="a1216-1009">使用格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1009">To use format</span></span>|<span data-ttu-id="a1216-1010">对于区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-1010">For culture</span></span>|<span data-ttu-id="a1216-1011">使用重载</span><span class="sxs-lookup"><span data-stu-id="a1216-1011">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="a1216-1012">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1012">Default ("G") format</span></span>|<span data-ttu-id="a1216-1013">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-1013">Default (current) culture</span></span>|<xref:System.Single.ToString>|  
|<span data-ttu-id="a1216-1014">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1014">Default ("G") format</span></span>|<span data-ttu-id="a1216-1015">特定区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-1015">A specific culture</span></span>|<xref:System.Single.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="a1216-1016">特定格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1016">A specific format</span></span>|<span data-ttu-id="a1216-1017">特定区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-1017">A specific culture</span></span>|<xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="a1216-1018">返回值可以是 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>或当前实例的值的字符串表示形式，由 `format`指定。</span><span class="sxs-lookup"><span data-stu-id="a1216-1018">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of the value of the current instance, as specified by `format`.</span></span>  
  
 <span data-ttu-id="a1216-1019">`format` 参数可以是任何有效的标准数值格式说明符（D 和 X 除外）以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="a1216-1019">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="a1216-1020">如果 format 为 `null` 或空字符串，则返回值的格式为常规数值格式说明符（"G"）。</span><span class="sxs-lookup"><span data-stu-id="a1216-1020">If format is `null` or an empty string, the return value is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="a1216-1021">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="a1216-1021">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="a1216-1022">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-1022">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="a1216-1023">有关格式设置的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-1023">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="a1216-1024">默认情况下，返回值仅包含7位数的精度，尽管它在内部维护最多9位数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-1024">By default, the return value only contains 7 digits of precision although a maximum of 9 digits is maintained internally.</span></span> <span data-ttu-id="a1216-1025">如果此实例的值的位数大于7，<xref:System.Single.ToString%28System.String%29> 将返回 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> 或 <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>，而不是预期的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-1025">If the value of this instance has greater than 7 digits, <xref:System.Single.ToString%28System.String%29> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="a1216-1026">如果需要更高的精度，则指定 `format`，格式为 "G9" 格式规范，它始终返回9位精度，或 "R"，如果数字可以用该精度表示，则返回7位数，如果数字只能用来表示，则返回9位数。最大精度。</span><span class="sxs-lookup"><span data-stu-id="a1216-1026">If you require more precision, specify `format` with the "G9" format specification, which always returns 9 digits of precision, or "R", which returns 7 digits if the number can be represented with that precision or 9 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-1027">下面的示例定义一个数值，并使用 "C" 标准数字格式字符串将其格式设置为货币值，并使用 "N" 标准数字格式字符串将其设置为三个小数位数的数字值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1027">The following example defines a numeric value and formats it as a currency value by using the "C" standard numeric format string and as a numeric value to three decimal places by using the "N" standard numeric format string.</span></span> <span data-ttu-id="a1216-1028">使用 en-us 区域性的约定对结果字符串进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="a1216-1028">The result strings are formatted by using the conventions of the en-US culture.</span></span> <span data-ttu-id="a1216-1029">有关数字格式字符串的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-1029">For more information on numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
 [!code-csharp[System.Single.ToString#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString7.cs#7)]
 [!code-vb[System.Single.ToString#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString7.vb#7)]  
  
 <span data-ttu-id="a1216-1030">下面的示例使用每个受支持的标准数值格式说明符和两个自定义数字格式字符串来显示若干 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1030">The following example displays several <xref:System.Single> values using each of the supported standard numeric format specifiers together with two custom numeric format strings.</span></span> <span data-ttu-id="a1216-1031">其中一个自定义格式字符串说明了如何用前导零填充 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1031">One of those custom format strings illustrates how to pad a <xref:System.Single> value with leading zeros.</span></span> <span data-ttu-id="a1216-1032">将数值转换为字符串时，此示例使用 en-us 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="a1216-1032">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Single.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString1.cs#3)]
 [!code-vb[System.Single.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="a1216-1033"><paramref name="format" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="a1216-1033"><paramref name="format" /> is invalid.</span></span></exception>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="a1216-1034">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1034">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="a1216-1035">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="a1216-1035">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="single.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="a1216-1036">一个数值格式字符串。</span><span class="sxs-lookup"><span data-stu-id="a1216-1036">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="a1216-1037">一个提供区域性特定的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-1037">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="a1216-1038">使用指定的格式和区域性特定格式信息，将此实例的数值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="a1216-1038">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="a1216-1039">此实例的值的字符串表示形式，由 <paramref name="format" /> 和 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="a1216-1039">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-1040"><xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29> 方法将 <xref:System.Single> 值的格式设置为指定区域性的指定格式。</span><span class="sxs-lookup"><span data-stu-id="a1216-1040">The <xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Single> value in a specified format of a specified culture.</span></span> <span data-ttu-id="a1216-1041">如果要使用默认格式或区域性设置，请使用 <xref:System.Single.ToString%2A> 方法的其他重载，如下所示：</span><span class="sxs-lookup"><span data-stu-id="a1216-1041">If you want to use default format or culture settings, use the other overloads of the <xref:System.Single.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="a1216-1042">使用格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1042">To use format</span></span>|<span data-ttu-id="a1216-1043">对于区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-1043">For culture</span></span>|<span data-ttu-id="a1216-1044">使用重载</span><span class="sxs-lookup"><span data-stu-id="a1216-1044">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="a1216-1045">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1045">Default ("G") format</span></span>|<span data-ttu-id="a1216-1046">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-1046">Default (current) culture</span></span>|<xref:System.Single.ToString>|  
|<span data-ttu-id="a1216-1047">默认值（"G"）格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1047">Default ("G") format</span></span>|<span data-ttu-id="a1216-1048">特定区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-1048">A specific culture</span></span>|<xref:System.Single.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="a1216-1049">特定格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1049">A specific format</span></span>|<span data-ttu-id="a1216-1050">默认（当前）区域性</span><span class="sxs-lookup"><span data-stu-id="a1216-1050">Default (current) culture</span></span>|<xref:System.Single.ToString%28System.String%29>|  
  
 <span data-ttu-id="a1216-1051">返回值可以是 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>或当前实例的值的字符串表示形式，由 `format`指定。</span><span class="sxs-lookup"><span data-stu-id="a1216-1051">The return value can be <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, or the string representation of the value of the current instance, as specified by `format`.</span></span>  
  
 <span data-ttu-id="a1216-1052">`format` 参数可以是任何有效的标准数值格式说明符（D 和 X 除外）以及自定义数字格式说明符的任意组合。</span><span class="sxs-lookup"><span data-stu-id="a1216-1052">The `format` parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="a1216-1053">如果 `format` `null` 或空字符串，则此实例的返回值将使用通用数值格式说明符（"G"）进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="a1216-1053">If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="a1216-1054">.NET Framework 提供了广泛的格式设置支持，以下格式设置主题更详细地介绍了这些支持：</span><span class="sxs-lookup"><span data-stu-id="a1216-1054">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="a1216-1055">有关数字格式说明符的详细信息，请参阅[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)和[自定义数字格式字符串](~/docs/standard/base-types/custom-numeric-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-1055">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="a1216-1056">有关格式设置的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="a1216-1056">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="a1216-1057">`provider` 参数是其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象的 <xref:System.IFormatProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="a1216-1057">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="a1216-1058">通常，`provider` 是 <xref:System.Globalization.CultureInfo> 对象或 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-1058">Typically, `provider` is a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="a1216-1059">`provider` 参数提供用于设置格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-1059">The `provider` parameter supplies culture-specific information used in formatting.</span></span> <span data-ttu-id="a1216-1060">如果 `null``provider`，则将返回值的格式设置为当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-1060">If `provider` is `null`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
 <span data-ttu-id="a1216-1061">默认情况下，返回值仅包含7位数的精度，尽管它在内部维护最多9位数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-1061">By default, the return value only contains 7 digits of precision although a maximum of 9 digits is maintained internally.</span></span> <span data-ttu-id="a1216-1062">如果此实例的值的位数大于7，<xref:System.Single.ToString%2A> 将返回 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> 或 <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>，而不是预期的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-1062">If the value of this instance has greater than 7 digits, <xref:System.Single.ToString%2A> returns <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A> or <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> instead of the expected number.</span></span> <span data-ttu-id="a1216-1063">如果需要更高的精度，则指定 `format`，格式为 "G9" 格式规范，它始终返回9位精度，或 "R"，如果数字可以用该精度表示，则返回7位数，如果数字只能用来表示，则返回9位数。最大精度。</span><span class="sxs-lookup"><span data-stu-id="a1216-1063">If you require more precision, specify `format` with the "G9" format specification, which always returns 9 digits of precision, or "R", which returns 7 digits if the number can be represented with that precision or 9 digits if the number can only be represented with maximum precision.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-1064">下面的示例使用多个不同区域性的每个受支持的标准数值格式说明符显示 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1064">The following example displays a <xref:System.Single> value using each of the supported standard numeric format specifiers for several different cultures.</span></span>  
  
 [!code-csharp[System.Single.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Single.ToString/CS/ToString1.cs#4)]
 [!code-vb[System.Single.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Single.ToString/VB/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="a1216-1065">设置 .NET 中类型的格式</span><span class="sxs-lookup"><span data-stu-id="a1216-1065">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="a1216-1066">如何：用前导零填充数字</span><span class="sxs-lookup"><span data-stu-id="a1216-1066">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="single.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1216-1067">将数字的字符串表示形式转换为它的等效单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-1067">Converts the string representation of a number to its single-precision floating-point number equivalent.</span></span> <span data-ttu-id="a1216-1068">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1068">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Single.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] float32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryParse(System.ReadOnlySpan{System.Char},System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] float % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * single -&gt; bool" Usage="System.single.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Single" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] float32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryParse(System.String,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] float % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * single -&gt; bool" Usage="System.single.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Single" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a1216-1069">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1216-1069">A string representing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="a1216-1070">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 所包含的数值或符号等效的单精度浮点数字；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="a1216-1070">When this method returns, contains single-precision floating-point number equivalent to the numeric value or symbol contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="a1216-1071">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、不是有效格式的数字，或者表示的数字小于 <see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" />，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="a1216-1071">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not a number in a valid format, or represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span></span> <span data-ttu-id="a1216-1072">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="a1216-1072">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="a1216-1073">将数字的字符串表示形式转换为它的等效单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-1073">Converts the string representation of a number to its single-precision floating-point number equivalent.</span></span> <span data-ttu-id="a1216-1074">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1074">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="a1216-1075">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-1075"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-1076">此重载与 <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> 方法的不同之处在于，返回一个布尔值，该值指示分析操作是否成功，而不是返回已分析的数值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1076">This overload differs from the <xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="a1216-1077">当 `s` 无效且无法成功分析时，无需使用异常处理来测试 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="a1216-1077">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="a1216-1078">`s` 参数可以包含 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A> （字符串比较区分大小写）或格式的字符串：</span><span class="sxs-lookup"><span data-stu-id="a1216-1078">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A> (the string comparison is case-sensitive), or a string of the form:</span></span>  
  
 <span data-ttu-id="a1216-1079">ws表明[整数位数，] 整数位数 [. [小数位数]] [e [sign] 指数-数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="a1216-1079">[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="a1216-1080">括号中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="a1216-1080">Elements in square brackets are optional.</span></span> <span data-ttu-id="a1216-1081">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="a1216-1081">The following table describes each element.</span></span>  
  
|<span data-ttu-id="a1216-1082">元素</span><span class="sxs-lookup"><span data-stu-id="a1216-1082">Element</span></span>|<span data-ttu-id="a1216-1083">说明</span><span class="sxs-lookup"><span data-stu-id="a1216-1083">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="a1216-1084">*ws*</span><span class="sxs-lookup"><span data-stu-id="a1216-1084">*ws*</span></span>|<span data-ttu-id="a1216-1085">一系列空白字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-1085">A series of white-space characters.</span></span>|  
|<span data-ttu-id="a1216-1086">*sign*</span><span class="sxs-lookup"><span data-stu-id="a1216-1086">*sign*</span></span>|<span data-ttu-id="a1216-1087">负号或正号符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-1087">A negative sign or positive sign symbol.</span></span>|  
|<span data-ttu-id="a1216-1088">*整数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-1088">*integral-digits*</span></span>|<span data-ttu-id="a1216-1089">一系列从0到9之间的数字字符，用于指定数字的整数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-1089">A series of numeric characters ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="a1216-1090">如果有小数位数，则可以不存在整数位数。</span><span class="sxs-lookup"><span data-stu-id="a1216-1090">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="a1216-1091">*，*</span><span class="sxs-lookup"><span data-stu-id="a1216-1091">*,*</span></span>|<span data-ttu-id="a1216-1092">区域性特定的组分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-1092">A culture-specific group separator symbol.</span></span>|  
|<span data-ttu-id="a1216-1093">*.*</span><span class="sxs-lookup"><span data-stu-id="a1216-1093">*.*</span></span>|<span data-ttu-id="a1216-1094">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-1094">A culture-specific decimal point symbol.</span></span>|  
|<span data-ttu-id="a1216-1095">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-1095">*fractional-digits*</span></span>|<span data-ttu-id="a1216-1096">指定数字小数部分的一系列数字字符，范围为0到9。</span><span class="sxs-lookup"><span data-stu-id="a1216-1096">A series of numeric characters ranging from 0 to 9 that specify the fractional part of the number.</span></span>|  
|<span data-ttu-id="a1216-1097">*E*</span><span class="sxs-lookup"><span data-stu-id="a1216-1097">*E*</span></span>|<span data-ttu-id="a1216-1098">大写或小写字符 "e"，指示指数（科学型）表示法。</span><span class="sxs-lookup"><span data-stu-id="a1216-1098">An uppercase or lowercase character 'e', that indicates exponential (scientific) notation.</span></span>|  
|<span data-ttu-id="a1216-1099">*指数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-1099">*exponential-digits*</span></span>|<span data-ttu-id="a1216-1100">指定指数的一系列数字字符，范围为0到9。</span><span class="sxs-lookup"><span data-stu-id="a1216-1100">A series of numeric characters ranging from 0 to 9 that specify an exponent.</span></span>|  
  
 <span data-ttu-id="a1216-1101">`s` 参数使用 <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> 和 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志的组合来进行解释。</span><span class="sxs-lookup"><span data-stu-id="a1216-1101">The `s` parameter is interpreted using a combination of the <xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="a1216-1102">这意味着允许使用空格和千位分隔符，但不允许货币符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-1102">This means that white space and thousands separators are allowed but currency symbols are not.</span></span> <span data-ttu-id="a1216-1103">若要显式定义可出现在 `s`中的元素（如货币符号、千位分隔符和空格），请使用 <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="a1216-1103">To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29> method overload.</span></span>  
  
 <span data-ttu-id="a1216-1104">`s` 参数是使用为当前系统区域性初始化 <xref:System.Globalization.NumberFormatInfo> 对象中的格式设置信息分析的。</span><span class="sxs-lookup"><span data-stu-id="a1216-1104">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="a1216-1105">有关详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1216-1105">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1216-1106">若要使用其他指定的区域性的格式设置信息分析字符串，请使用 <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="a1216-1106">To parse a string using the formatting information of some other specified culture, use the <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29> method overload.</span></span>  
  
 <span data-ttu-id="a1216-1107">通常，如果将 <xref:System.Single.TryParse%2A?displayProperty=nameWithType> 方法传递到通过调用 <xref:System.Single.ToString%2A?displayProperty=nameWithType> 方法创建的字符串，则将返回原始的 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1107">Ordinarily, if you pass the <xref:System.Single.TryParse%2A?displayProperty=nameWithType> method a string that is created by calling the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method, the original <xref:System.Single> value is returned.</span></span> <span data-ttu-id="a1216-1108">但是，由于精度损失，值可能不相等。</span><span class="sxs-lookup"><span data-stu-id="a1216-1108">However, because of a loss of precision, the values may not be equal.</span></span>  
  
 <span data-ttu-id="a1216-1109">如果在执行分析操作期间在 `s` 参数中遇到分隔符，并且适用的货币或小数分隔符和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-1109">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="a1216-1110">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1216-1110">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-1111">下面的示例使用 <xref:System.Single.TryParse%28System.String%2CSystem.Single%40%29> 方法将数值的字符串表示形式转换为 <xref:System.Single> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1111">The following example uses the <xref:System.Single.TryParse%28System.String%2CSystem.Single%40%29> method to convert the string representations of numeric values to <xref:System.Single> values.</span></span> <span data-ttu-id="a1216-1112">它假定 en-us 为当前区域性。</span><span class="sxs-lookup"><span data-stu-id="a1216-1112">It assumes that en-US is the current culture.</span></span>  
  
 [!code-csharp[System.Single.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Single.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="M:System.Single.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="a1216-1113">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="a1216-1113">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] float % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * single -&gt; bool" Usage="System.single.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Single" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out float result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] float32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] float % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * single -&gt; bool" Usage="System.single.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Single" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="a1216-1114">表示要转换的数字的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1216-1114">A string representing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="a1216-1115">枚举值的一个按位组合，指示 <paramref name="s" /> 所允许的格式。</span><span class="sxs-lookup"><span data-stu-id="a1216-1115">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="a1216-1116">一个用来指定的典型值为 <see cref="F:System.Globalization.NumberStyles.Float" /> 与 <see cref="F:System.Globalization.NumberStyles.AllowThousands" /> 的组合。</span><span class="sxs-lookup"><span data-stu-id="a1216-1116">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Float" /> combined with <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</span></span></param>
        <param name="provider"><span data-ttu-id="a1216-1117">一个对象，提供有关 <paramref name="s" /> 的区域性特定格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-1117">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="a1216-1118">当此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 所包含的数值或符号等效的单精度浮点数字；如果转换失败，则包含零。</span><span class="sxs-lookup"><span data-stu-id="a1216-1118">When this method returns, contains the single-precision floating-point number equivalent to the numeric value or symbol contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="a1216-1119">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />、格式不符合 <paramref name="style" />、表示的数字小于<see cref="F:System.Single.MinValue" /> 或大于 <see cref="F:System.Single.MaxValue" />，或者 <paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 枚举的常数的有效组合，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="a1216-1119">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />, or if <paramref name="style" /> is not a valid combination of <see cref="T:System.Globalization.NumberStyles" /> enumerated constants.</span></span> <span data-ttu-id="a1216-1120">此参数未经初始化即进行传递；最初在 <paramref name="result" /> 中提供的任何值都会被覆盖。</span><span class="sxs-lookup"><span data-stu-id="a1216-1120">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="a1216-1121">将具有指定样式和区域性特定格式的数字的字符串表示形式转换为它的等效单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="a1216-1121">Converts the string representation of a number in a specified style and culture-specific format to its single-precision floating-point number equivalent.</span></span> <span data-ttu-id="a1216-1122">一个指示转换是否成功的返回值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1122">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="a1216-1123">如果 <see langword="true" /> 成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1216-1123"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1216-1124">此重载与 <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> 方法的不同之处在于，返回一个布尔值，该值指示分析操作是否成功，而不是返回已分析的数值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1124">This overload differs from the <xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</span></span> <span data-ttu-id="a1216-1125">当 `s` 无效且无法成功分析时，无需使用异常处理来测试 <xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="a1216-1125">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="a1216-1126">`style` 参数定义允许的 `s` 参数格式，以便分析操作成功。</span><span class="sxs-lookup"><span data-stu-id="a1216-1126">The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="a1216-1127">它必须是 <xref:System.Globalization.NumberStyles> 枚举中的位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="a1216-1127">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="a1216-1128">以下 <xref:System.Globalization.NumberStyles> 成员不受支持：</span><span class="sxs-lookup"><span data-stu-id="a1216-1128">The following <xref:System.Globalization.NumberStyles> members are not supported:</span></span>  
  
-   <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>  
  
 <span data-ttu-id="a1216-1129">`s` 参数可以包含 `provider`指示的区域性 <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>、<xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A><xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1216-1129">The `s` parameter can contain <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A>, <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A> for the culture indicated by `provider`.</span></span> <span data-ttu-id="a1216-1130">此外，根据 `style`的值，`s` 参数可能包括以下元素：</span><span class="sxs-lookup"><span data-stu-id="a1216-1130">In addition, depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="a1216-1131">ws[$]表明[整数位数，] 整数位数 [. 小数] [e [sign] 指数-数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="a1216-1131">[ws] [$] [sign][integral-digits,]integral-digits[.fractional-digits][e[sign]exponential-digits][ws]</span></span>  
  
 <span data-ttu-id="a1216-1132">方括号 ([ and ]) 中的元素是可选的。</span><span class="sxs-lookup"><span data-stu-id="a1216-1132">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="a1216-1133">下表对每个元素进行了描述。</span><span class="sxs-lookup"><span data-stu-id="a1216-1133">The following table describes each element.</span></span>  
  
|<span data-ttu-id="a1216-1134">元素</span><span class="sxs-lookup"><span data-stu-id="a1216-1134">Element</span></span>|<span data-ttu-id="a1216-1135">说明</span><span class="sxs-lookup"><span data-stu-id="a1216-1135">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="a1216-1136">*ws*</span><span class="sxs-lookup"><span data-stu-id="a1216-1136">*ws*</span></span>|<span data-ttu-id="a1216-1137">可选空白。</span><span class="sxs-lookup"><span data-stu-id="a1216-1137">Optional white space.</span></span> <span data-ttu-id="a1216-1138">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> 标志，则 `s` 的开头可能会出现空白。</span><span class="sxs-lookup"><span data-stu-id="a1216-1138">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a1216-1139">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> 标志，则它可能会出现在 `s` 末尾。</span><span class="sxs-lookup"><span data-stu-id="a1216-1139">It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="a1216-1140">区域性特定的货币符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-1140">A culture-specific currency symbol.</span></span> <span data-ttu-id="a1216-1141">其在字符串中的位置由 `provider` 参数的 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 方法返回的 <xref:System.Globalization.NumberFormatInfo> 对象的 <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> 或 <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> 属性定义。</span><span class="sxs-lookup"><span data-stu-id="a1216-1141">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of the `provider` parameter.</span></span> <span data-ttu-id="a1216-1142">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> 标志，货币符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-1142">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-1143">*sign*</span><span class="sxs-lookup"><span data-stu-id="a1216-1143">*sign*</span></span>|<span data-ttu-id="a1216-1144">一个可选的符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-1144">An optional sign.</span></span> <span data-ttu-id="a1216-1145">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> 标志，则符号会出现在 `s` 的开头，如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> 标志，则它可以出现在 `s` 的末尾处。</span><span class="sxs-lookup"><span data-stu-id="a1216-1145">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="a1216-1146">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> 标志，则可以在 `s` 中使用括号来表示负值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1146">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-1147">*整数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-1147">*integral-digits*</span></span>|<span data-ttu-id="a1216-1148">一系列从0到9之间的数字，用于指定数字的整数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-1148">A series of digits ranging from 0 to 9 that specify the integral part of the number.</span></span> <span data-ttu-id="a1216-1149">如果有小数位数，则可以不存在整数位数。</span><span class="sxs-lookup"><span data-stu-id="a1216-1149">Integral-digits can be absent if there are fractional-digits.</span></span>|  
|<span data-ttu-id="a1216-1150">*，*</span><span class="sxs-lookup"><span data-stu-id="a1216-1150">*,*</span></span>|<span data-ttu-id="a1216-1151">区域性特定的千位分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-1151">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="a1216-1152">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> 标志，当前区域性的千位分隔符符号可以出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-1152">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-1153">*.*</span><span class="sxs-lookup"><span data-stu-id="a1216-1153">*.*</span></span>|<span data-ttu-id="a1216-1154">区域性特定的小数点符号。</span><span class="sxs-lookup"><span data-stu-id="a1216-1154">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="a1216-1155">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，当前区域性的小数点符号会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-1155">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-1156">*小数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-1156">*fractional-digits*</span></span>|<span data-ttu-id="a1216-1157">一系列从0到9之间的数字，用于指定数字的小数部分。</span><span class="sxs-lookup"><span data-stu-id="a1216-1157">A series of digits ranging from 0 to 9 that specify the fractional part of the number.</span></span> <span data-ttu-id="a1216-1158">如果 `style` 包含 <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> 标志，则小数位会出现在 `s` 中。</span><span class="sxs-lookup"><span data-stu-id="a1216-1158">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-1159">*e*</span><span class="sxs-lookup"><span data-stu-id="a1216-1159">*e*</span></span>|<span data-ttu-id="a1216-1160">E 或 E 字符，指示 `s` 可以使用指数表示法表示数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-1160">The e or E character, which indicates that `s` can represent a number using exponential notation.</span></span> <span data-ttu-id="a1216-1161">如果样式包括 <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> 标志，则 `s` 参数可以表示指数表示法中的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-1161">The `s` parameter can represent a number in exponential notation if style includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="a1216-1162">*指数位数*</span><span class="sxs-lookup"><span data-stu-id="a1216-1162">*exponential-digits*</span></span>|<span data-ttu-id="a1216-1163">一系列从0到9之间的数字，用于指定指数。</span><span class="sxs-lookup"><span data-stu-id="a1216-1163">A series of digits ranging from 0 to 9 that specify an exponent.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="a1216-1164">无论 `style` 参数的值是什么，分析操作都将忽略 `s` 中任何终止的 NUL （U + 0000）字符。</span><span class="sxs-lookup"><span data-stu-id="a1216-1164">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="a1216-1165">只包含数字的字符串（对应于 <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> 样式）始终会成功分析。</span><span class="sxs-lookup"><span data-stu-id="a1216-1165">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="a1216-1166">其余 <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> 成员控制可能但不要求出现在输入字符串中的元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1166">The remaining <xref:System.Globalization.NumberStyles?displayProperty=nameWithType> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="a1216-1167">下表指示单个 <xref:System.Globalization.NumberStyles> 标志如何影响可能出现在 `s`中的元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1167">The following table indicates how individual <xref:System.Globalization.NumberStyles> flags affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="a1216-1168">NumberStyles 值</span><span class="sxs-lookup"><span data-stu-id="a1216-1168">NumberStyles value</span></span>|<span data-ttu-id="a1216-1169">除数字外允许在 s 中使用的元素</span><span class="sxs-lookup"><span data-stu-id="a1216-1169">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="a1216-1170">仅限*整数数字*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1170">The *integral-digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="a1216-1171">*.*</span><span class="sxs-lookup"><span data-stu-id="a1216-1171">The *.*</span></span> <span data-ttu-id="a1216-1172">和*小数位数*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1172">and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="a1216-1173">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="a1216-1173">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="a1216-1174">此标志本身支持采用*整数位数*E*指数数字*形式的值;若要成功地将指数表示法中的字符串解析为正或负号和小数点符号，则需要其他标志。</span><span class="sxs-lookup"><span data-stu-id="a1216-1174">This flag by itself supports values in the form *integral-digits*E*exponential-digits*; additional flags are needed to successfully parse strings in exponential notation with such elements as positive or negative signs and decimal point symbols.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="a1216-1175">`s`开头的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1175">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="a1216-1176">`s`末尾的*ws*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1176">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="a1216-1177">`s`开头的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1177">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="a1216-1178">`s`末尾的*sign*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1178">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="a1216-1179">用括号括起数值的*符号*元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1179">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="a1216-1180">*，* 元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1180">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="a1216-1181">*$* 元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1181">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="a1216-1182">全部。</span><span class="sxs-lookup"><span data-stu-id="a1216-1182">All.</span></span> <span data-ttu-id="a1216-1183">`s` 参数不能表示十六进制数或以指数表示法表示的数字。</span><span class="sxs-lookup"><span data-stu-id="a1216-1183">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="a1216-1184">位于 `s`开头或结尾处的*ws*元素，在 `s`的开头处进行*签名*，并且为 *。*</span><span class="sxs-lookup"><span data-stu-id="a1216-1184">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="a1216-1185">代号.</span><span class="sxs-lookup"><span data-stu-id="a1216-1185">symbol.</span></span> <span data-ttu-id="a1216-1186">`s` 参数还可以使用指数表示法。</span><span class="sxs-lookup"><span data-stu-id="a1216-1186">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="a1216-1187">`ws`、`sign`、千位分隔符（*、）* 和小数点（*.*）元素。</span><span class="sxs-lookup"><span data-stu-id="a1216-1187">The `ws`, `sign`, thousands separator (*,),* and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="a1216-1188">除 `s` 之外的所有样式不能表示十六进制数。</span><span class="sxs-lookup"><span data-stu-id="a1216-1188">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="a1216-1189">`provider` 参数是一个 <xref:System.IFormatProvider> 实现，其 <xref:System.IFormatProvider.GetFormat%2A> 方法返回提供区域性特定格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-1189">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="a1216-1190">调用 <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29> 方法时，它将调用 `provider` 参数的 <xref:System.IFormatProvider.GetFormat%2A> 方法，并向其传递一个表示 <xref:System.Globalization.NumberFormatInfo> 类型的 <xref:System.Type> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-1190">When the <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="a1216-1191">然后 <xref:System.IFormatProvider.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供有关 `s` 参数格式的信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-1191">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `s` parameter.</span></span> <span data-ttu-id="a1216-1192">有三种方法可以使用 `provider` 参数向分析操作提供自定义格式设置信息：</span><span class="sxs-lookup"><span data-stu-id="a1216-1192">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="a1216-1193">可以传递表示提供格式设置信息的区域性的 <xref:System.Globalization.CultureInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-1193">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="a1216-1194">它的 <xref:System.Globalization.CultureInfo.GetFormat%2A> 方法返回 <xref:System.Globalization.NumberFormatInfo> 对象，该对象提供该区域性的数字格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="a1216-1194">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="a1216-1195">可以传递提供数字格式设置信息的实际 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-1195">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="a1216-1196">（其 <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> 的实现只返回自身。）</span><span class="sxs-lookup"><span data-stu-id="a1216-1196">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="a1216-1197">可以传递实现 <xref:System.IFormatProvider>的自定义对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-1197">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="a1216-1198">它的 <xref:System.IFormatProvider.GetFormat%2A> 方法实例化并返回提供格式设置信息的 <xref:System.Globalization.NumberFormatInfo> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1216-1198">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="a1216-1199">如果 `null``provider`，则将根据当前区域性的 <xref:System.Globalization.NumberFormatInfo> 对象来解释 `s` 的格式设置。</span><span class="sxs-lookup"><span data-stu-id="a1216-1199">If `provider` is `null`, the formatting of `s` is interpreted based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
 <span data-ttu-id="a1216-1200">如果在执行分析操作期间在 `s` 参数中遇到分隔符，并且适用的货币或小数分隔符和组分隔符相同，则分析操作将假定分隔符是小数点分隔符，而不是组分隔符。</span><span class="sxs-lookup"><span data-stu-id="a1216-1200">If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</span></span> <span data-ttu-id="a1216-1201">有关分隔符的详细信息，请参阅 <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>、<xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>和 <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1216-1201">For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1216-1202">下面的示例演示如何使用 <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29?displayProperty=nameWithType> 方法来分析具有特定样式的数字的字符串表示形式，并使用特定区域性的约定进行格式设置。</span><span class="sxs-lookup"><span data-stu-id="a1216-1202">The following example demonstrates the use of the <xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29?displayProperty=nameWithType> method to parse the string representation of numbers that have a particular style and are formatted using the conventions of a particular culture.</span></span>  
  
 [!code-csharp[System.Single.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.single.tryparse/cs/tryparse1.cs#2)]
 [!code-vb[System.Single.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.single.tryparse/vb/tryparse1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1216-1203"><paramref name="style" /> 不是 <see cref="T:System.Globalization.NumberStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1203"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="a1216-1204">或</span><span class="sxs-lookup"><span data-stu-id="a1216-1204">-or-</span></span> 
 <span data-ttu-id="a1216-1205"><paramref name="style" /> 是 <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a1216-1205"><paramref name="style" /> is the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> value.</span></span></exception>
        <altmember cref="M:System.Single.Parse(System.String)" />
        <altmember cref="M:System.Single.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="a1216-1206">分析 .NET 中的数字字符串</span><span class="sxs-lookup"><span data-stu-id="a1216-1206">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
