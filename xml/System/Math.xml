<Type Name="Math" FullName="System.Math">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4cb702eb8e75b47958d00d088c0357fdf1bf18a2" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400798" /></Metadata><TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <TypeSignature Language="F#" Value="type Math = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f7efb-101">为三角函数、对数函数和其他通用数学函数提供常数和静态方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-102">下面的示例使用 <xref:System.Math> 类中的多个数学和三角函数来计算梯形的内部角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-103">返回指定数字的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-103">Returns the absolute value of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Abs : decimal -&gt; decimal" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-104">一个大于或等于 <see cref="F:System.Decimal.MinValue" /> 但小于或等于 <see cref="F:System.Decimal.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-105">返回 <see cref="T:System.Decimal" /> 数字的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-106">十进制数 x，满足 0 ≤ x ≤ <see cref="F:System.Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-107"><xref:System.Decimal> 的绝对值，则不包含其符号。</span><span class="sxs-lookup"><span data-stu-id="f7efb-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="f7efb-108">例如，1.2 和-1.2 的绝对值均为1.2。</span><span class="sxs-lookup"><span data-stu-id="f7efb-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-109">下面的示例使用 <xref:System.Math.Abs%28System.Decimal%29> 方法获取多个 <xref:System.Decimal> 值的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberSignature Language="F#" Value="static member Abs : double -&gt; double" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-110">一个大于或等于 <see cref="F:System.Double.MinValue" /> 但小于或等于 <see cref="F:System.Double.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-111">返回双精度浮点数字的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-111">Returns the absolute value of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-112">双精度浮点数 x，满足 0 ≤ x ≤ <see cref="F:System.Double.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-113"><xref:System.Double> 的绝对值，则不包含其符号。</span><span class="sxs-lookup"><span data-stu-id="f7efb-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="f7efb-114">例如，1.2 e03 和-1.2 e03 的绝对值均为 1.2 e03。</span><span class="sxs-lookup"><span data-stu-id="f7efb-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="f7efb-115">如果 `value` 等于 <xref:System.Double.NegativeInfinity> 或 <xref:System.Double.PositiveInfinity>，则返回值为 <xref:System.Double.PositiveInfinity>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="f7efb-116">如果 `value` 等于 <xref:System.Double.NaN>，则返回值 <xref:System.Double.NaN>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-117">下面的示例使用 <xref:System.Math.Abs%28System.Double%29> 方法获取多个 <xref:System.Double> 值的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberSignature Language="F#" Value="static member Abs : int16 -&gt; int16" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-118">一个大于 <see cref="F:System.Int16.MinValue" /> 但小于或等于 <see cref="F:System.Int16.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-119">返回 16 位有符号整数的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-119">Returns the absolute value of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f7efb-120">16 位有符号整数 x，满足 0 ≤ x ≤ <see cref="F:System.Int16.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-121"><xref:System.Int16> 的绝对值不带其符号的数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="f7efb-122">例如，123和-123 的绝对值均为123。</span><span class="sxs-lookup"><span data-stu-id="f7efb-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-123">下面的示例使用 <xref:System.Math.Abs%28System.Int16%29> 方法获取多个 <xref:System.Int16> 值的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f7efb-124"><paramref name="value" /> 等于 <see cref="F:System.Int16.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-124"><paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberSignature Language="F#" Value="static member Abs : int -&gt; int" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-125">一个大于 <see cref="F:System.Int32.MinValue" /> 但小于或等于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-126">返回 32 位有符号整数的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-126">Returns the absolute value of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f7efb-127">32 位有符号整数 x，满足 0 ≤ x ≤ <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-128"><xref:System.Int32> 的绝对值不带其符号的数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="f7efb-129">例如，123和-123 的绝对值均为123。</span><span class="sxs-lookup"><span data-stu-id="f7efb-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-130">下面的示例使用 <xref:System.Math.Abs%28System.Int32%29> 方法获取多个 <xref:System.Int32> 值的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f7efb-131"><paramref name="value" /> 等于 <see cref="F:System.Int32.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-131"><paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberSignature Language="F#" Value="static member Abs : int64 -&gt; int64" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-132">一个大于 <see cref="F:System.Int64.MinValue" /> 但小于或等于 <see cref="F:System.Int64.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-133">返回 64 位有符号整数的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-133">Returns the absolute value of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f7efb-134">64 位有符号整数 x，满足 0 ≤ x ≤ <see cref="F:System.Int64.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-135"><xref:System.Int64> 的绝对值不带其符号的数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="f7efb-136">例如，123和-123 的绝对值均为123。</span><span class="sxs-lookup"><span data-stu-id="f7efb-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-137">下面的示例使用 <xref:System.Math.Abs%28System.Int64%29> 方法获取多个 <xref:System.Int64> 值的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f7efb-138"><paramref name="value" /> 等于 <see cref="F:System.Int64.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-138"><paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Abs : sbyte -&gt; sbyte" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-139">一个大于 <see cref="F:System.SByte.MinValue" /> 但小于或等于 <see cref="F:System.SByte.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-140">返回 8 位有符号整数的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-140">Returns the absolute value of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f7efb-141">8 位有符号整数 x，满足 0 ≤ x ≤ <see cref="F:System.SByte.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-142">带符号字节的绝对值是其在没有符号的情况下的数字值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="f7efb-143">例如，12和-12 的绝对值均为12。</span><span class="sxs-lookup"><span data-stu-id="f7efb-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-144">下面的示例使用 <xref:System.Math.Abs%28System.SByte%29> 方法获取多个 <xref:System.SByte> 值的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f7efb-145"><paramref name="value" /> 等于 <see cref="F:System.SByte.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-145"><paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-146">一个大于或等于 <see cref="F:System.Single.MinValue" /> 但小于或等于 <see cref="F:System.Single.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-147">返回单精度浮点数字的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-147">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-148">单精度浮点数 x，满足 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-149"><xref:System.Single> 的绝对值，则不包含其符号。</span><span class="sxs-lookup"><span data-stu-id="f7efb-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="f7efb-150">例如，1.2 e-03 和-1.2 e03 的绝对值均为 1.2 e03。</span><span class="sxs-lookup"><span data-stu-id="f7efb-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="f7efb-151">如果 `value` 等于 <xref:System.Single.NegativeInfinity> 或 <xref:System.Single.PositiveInfinity>，则返回值为 <xref:System.Single.PositiveInfinity>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="f7efb-152">如果 `value` 等于 <xref:System.Single.NaN>，则返回值 <xref:System.Single.NaN>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-153">下面的示例使用 <xref:System.Math.Abs%28System.Single%29> 方法获取多个 <xref:System.Single> 值的绝对值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberSignature Language="F#" Value="static member Acos : double -&gt; double" Usage="System.Math.Acos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-154">一个表示余弦值的数字，其中 <paramref name="d" /> 必须大于或等于 -1 但小于或等于 1。</span><span class="sxs-lookup"><span data-stu-id="f7efb-154">A number representing a cosine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="f7efb-155">返回余弦值为指定数字的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-155">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-156">角度 θ，以弧度为单位，满足 0 ≤θ≤π</span><span class="sxs-lookup"><span data-stu-id="f7efb-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span></span> 
<span data-ttu-id="f7efb-157">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-157">-or-</span></span> 
 <span data-ttu-id="f7efb-158">如果 <paramref name="d" /> &lt; -1 或 <paramref name="d" /> &gt; 1 或 <paramref name="d" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-158"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-159">将返回值乘以 180/<xref:System.Math.PI?displayProperty=nameWithType>，以将弧度转换为度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-160">下面的示例使用 <xref:System.Math.Acos%2A> 方法来帮助计算给定梯形的内角。</span><span class="sxs-lookup"><span data-stu-id="f7efb-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static double Acosh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acosh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acosh(double d);" />
      <MemberSignature Language="F#" Value="static member Acosh : double -&gt; double" Usage="System.Math.Acosh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-161">一个表示双曲余弦值的数字，其中 <paramref name="d" /> 必须大于等于 1 但小于等于 <see cref="F:System.Double.PositiveInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-161">A number representing a hyperbolic cosine, where <paramref name="d" /> must be greater than or equal to 1, but less than or equal to <see cref="F:System.Double.PositiveInfinity" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-162">返回双曲余弦值为指定数字的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-162">Returns the angle whose hyperbolic cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-163">角度 θ，以弧度为单位，满足 0 ≤ θ ≤ ∞。</span><span class="sxs-lookup"><span data-stu-id="f7efb-163">An angle, θ, measured in radians, such that 0 ≤ θ ≤ ∞.</span></span>  
  
<span data-ttu-id="f7efb-164">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-164">-or-</span></span> 
 <span data-ttu-id="f7efb-165">如果 <paramref name="d" /> &lt; 1 或 <paramref name="d" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-165"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-166">将返回值乘以 180/<xref:System.Math.PI?displayProperty=nameWithType>，以将弧度转换为度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-166">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberSignature Language="F#" Value="static member Asin : double -&gt; double" Usage="System.Math.Asin d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-167">一个表示正弦值的数字，其中 <paramref name="d" /> 必须大于或等于 -1 但小于或等于 1。</span><span class="sxs-lookup"><span data-stu-id="f7efb-167">A number representing a sine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="f7efb-168">返回正弦值为指定数字的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-168">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-169">角度 θ，以弧度为单位，满足 -π/2 ≤θ≤π/2</span><span class="sxs-lookup"><span data-stu-id="f7efb-169">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span></span> 
<span data-ttu-id="f7efb-170">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-170">-or-</span></span> 
 <span data-ttu-id="f7efb-171">如果 <paramref name="d" /> &lt; -1 或 <paramref name="d" /> &gt; 1 或 <paramref name="d" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-171"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-172">正返回值表示从 x 轴开始的逆时针角度;负值返回值表示顺时针角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-172">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="f7efb-173">将返回值乘以 180/<xref:System.Math.PI?displayProperty=nameWithType>，以将弧度转换为度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-173">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-174">下面的示例使用 <xref:System.Math.Asin%2A> 来帮助计算给定梯形的内角。</span><span class="sxs-lookup"><span data-stu-id="f7efb-174">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static double Asinh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asinh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asinh(double d);" />
      <MemberSignature Language="F#" Value="static member Asinh : double -&gt; double" Usage="System.Math.Asinh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-175">一个表示双曲正弦值的数字，其中 <paramref name="d" /> 必须大于等于 <see cref="F:System.Double.NegativeInfinity" /> 但小于等于 <see cref="F:System.Double.PositiveInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-175">A number representing a hyperbolic sine, where <paramref name="d" /> must be greater than or equal to <see cref="F:System.Double.NegativeInfinity" />, but less than or equal to <see cref="F:System.Double.PositiveInfinity" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-176">返回双曲正弦值为指定数字的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-176">Returns the angle whose hyperbolic sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-177">角度 θ，以弧度为单位，满足 -∞ &lt; θ ≤-1 或 1 ≤ θ &lt; ∞。</span><span class="sxs-lookup"><span data-stu-id="f7efb-177">An angle, θ, measured in radians, such that -∞ &lt; θ ≤-1, or 1 ≤ θ &lt; ∞.</span></span> 
  
<span data-ttu-id="f7efb-178">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-178">-or-</span></span> 
 <span data-ttu-id="f7efb-179">如果 <paramref name="d" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-179"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-180">将返回值乘以 180/<xref:System.Math.PI?displayProperty=nameWithType>，以将弧度转换为度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-180">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberSignature Language="F#" Value="static member Atan : double -&gt; double" Usage="System.Math.Atan d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-181">表示正切值的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-181">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="f7efb-182">返回正切值为指定数字的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-182">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-183">角度 θ，以弧度为单位，满足 -π/2 ≤θ≤π/2。</span><span class="sxs-lookup"><span data-stu-id="f7efb-183">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span></span>  
  
<span data-ttu-id="f7efb-184">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-184">-or-</span></span> 
 <span data-ttu-id="f7efb-185">如果 <paramref name="d" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />；如果 <paramref name="d" /> 等于 <see cref="F:System.Double.NegativeInfinity" />，则 -π/2 舍入为双精度值 (-1.5707963267949)；或者如果 <paramref name="d" /> 等于 <see cref="F:System.Double.PositiveInfinity" />，则 π/2 舍入为双精度值 (1.5707963267949)。</span><span class="sxs-lookup"><span data-stu-id="f7efb-185"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-186">正返回值表示从 x 轴开始的逆时针角度;负值返回值表示顺时针角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-186">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="f7efb-187">将返回值乘以 180/<xref:System.Math.PI?displayProperty=nameWithType>，以将弧度转换为度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-187">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-188">下面的示例演示如何计算值的反正切值并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="f7efb-188">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : double * double -&gt; double" Usage="System.Math.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="f7efb-189">点的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="f7efb-189">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="f7efb-190">点的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="f7efb-190">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="f7efb-191">返回正切值为两个指定数字的商的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-191">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-192">角度 θ，以弧度为单位，满足 -π≤θ≤π，且 tan(θ) = <paramref name="y" /> / <paramref name="x" />，其中 (<paramref name="x" />, <paramref name="y" />) 是笛卡尔平面中的点。</span><span class="sxs-lookup"><span data-stu-id="f7efb-192">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="f7efb-193">请看下面：</span><span class="sxs-lookup"><span data-stu-id="f7efb-193">Observe the following:</span></span> 
<span data-ttu-id="f7efb-194">-   由于 (<paramref name="x" />, <paramref name="y" />) 在第 1 象限，因此 0 &lt; θ &lt; π/2。</span><span class="sxs-lookup"><span data-stu-id="f7efb-194">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
<span data-ttu-id="f7efb-195">-   由于 (<paramref name="x" />, <paramref name="y" />) 在第 2 象限，因此 π/2 &lt; θ≤π。</span><span class="sxs-lookup"><span data-stu-id="f7efb-195">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span></span>  
  
<span data-ttu-id="f7efb-196">-   由于 (<paramref name="x" />, <paramref name="y" />) 在第 3 象限，因此 -π &lt; θ &lt; -π/2。</span><span class="sxs-lookup"><span data-stu-id="f7efb-196">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
<span data-ttu-id="f7efb-197">-   由于 (<paramref name="x" />, <paramref name="y" />) 在第 4 象限，因此 -π/2 &lt; θ &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="f7efb-197">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
<span data-ttu-id="f7efb-198">如果点在象限的边界上，则返回值如下：</span><span class="sxs-lookup"><span data-stu-id="f7efb-198">For points on the boundaries of the quadrants, the return value is the following:</span></span> 
<span data-ttu-id="f7efb-199">-   如果 y 为 0 并且 x 不为负值，则 θ = 0。</span><span class="sxs-lookup"><span data-stu-id="f7efb-199">-   If y is 0 and x is not negative, θ = 0.</span></span>  
  
<span data-ttu-id="f7efb-200">-   如果 y 为 0 并且 x 为负值，则 θ = π。</span><span class="sxs-lookup"><span data-stu-id="f7efb-200">-   If y is 0 and x is negative, θ = π.</span></span>  
  
<span data-ttu-id="f7efb-201">-   如果 y 为正值并且 x 为 0，则 θ = π/2。</span><span class="sxs-lookup"><span data-stu-id="f7efb-201">-   If y is positive and x is 0, θ = π/2.</span></span>  
  
<span data-ttu-id="f7efb-202">-   如果 y 为负值并且 x 为 0，则 θ = -π/2。</span><span class="sxs-lookup"><span data-stu-id="f7efb-202">-   If y is negative and x is 0, θ = -π/2.</span></span>  
  
<span data-ttu-id="f7efb-203">-   如果 y 为 0 并且 x 为 0，则 θ = 0。</span><span class="sxs-lookup"><span data-stu-id="f7efb-203">-   If y is 0 and x is 0, θ = 0.</span></span>  
  
<span data-ttu-id="f7efb-204">如果 <paramref name="x" /> 或 <paramref name="y" /> 为 <see cref="F:System.Double.NaN" />，或者如果 <paramref name="x" /> 和 <paramref name="y" /> 为 <see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" />，则该方法返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-204">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-205">返回值是由 x 轴和向量（0，0）开始并在点（x，y）处终止的笛卡尔平面中的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-205">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-206">下面的示例演示如何计算角度和向量的反正切值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-206">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="f7efb-207">生成的值将显示在控制台中。</span><span class="sxs-lookup"><span data-stu-id="f7efb-207">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static double Atanh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atanh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atanh(double d);" />
      <MemberSignature Language="F#" Value="static member Atanh : double -&gt; double" Usage="System.Math.Atanh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-208">一个表示双曲正切值的数字，其中 <paramref name="d" /> 必须大于等于 -1 但小于等于 1。</span><span class="sxs-lookup"><span data-stu-id="f7efb-208">A number representing a hyperbolic tangent, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="f7efb-209">返回双曲正切值为指定数字的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-209">Returns the angle whose hyperbolic tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-210">角度 θ，以弧度为单位，满足 -∞ &lt; θ &lt;-1 或 1 &lt; θ &lt; ∞。</span><span class="sxs-lookup"><span data-stu-id="f7efb-210">An angle, θ, measured in radians, such that -∞ &lt; θ &lt; -1, or 1 &lt; θ &lt; ∞.</span></span> 
  
<span data-ttu-id="f7efb-211">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-211">-or-</span></span> 
 <span data-ttu-id="f7efb-212">如果 <paramref name="d" /> &lt; -1 或 <paramref name="d" /> &gt; 1 或 <paramref name="d" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-212"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-213">将返回值乘以 180/<xref:System.Math.PI?displayProperty=nameWithType>，以将弧度转换为度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-213">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberSignature Language="F#" Value="static member BigMul : int * int -&gt; int64" Usage="System.Math.BigMul (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="b" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f7efb-214">要相乘的第一个数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-214">The first number to multiply.</span></span></param>
        <param name="b"><span data-ttu-id="f7efb-215">要相乘的第二个数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-215">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="f7efb-216">生成两个 32 位数字的完整乘积。</span><span class="sxs-lookup"><span data-stu-id="f7efb-216">Produces the full product of two 32-bit numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-217">包含指定数字乘积的数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-217">The number containing the product of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-218">下面的示例演示如何使用 <xref:System.Math.BigMul%2A> 方法来计算两个整数值的乘积。</span><span class="sxs-lookup"><span data-stu-id="f7efb-218">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitDecrement">
      <MemberSignature Language="C#" Value="public static double BitDecrement (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 BitDecrement(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BitDecrement(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitDecrement (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double BitDecrement(double x);" />
      <MemberSignature Language="F#" Value="static member BitDecrement : double -&gt; double" Usage="System.Math.BitDecrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-219">要递减的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-219">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="f7efb-220">返回小于 <paramref name="x" /> 的下一个最小值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-220">Returns the next smallest value that compares less than <paramref name="x" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-221">小于 <paramref name="x" /> 的下一个最小值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-221">The next smallest value that compares less than <paramref name="x" />.</span></span>  
  
<span data-ttu-id="f7efb-222">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-222">-or-</span></span> 
 <span data-ttu-id="f7efb-223">如果 <paramref name="x" /> 等于 <see cref="F:System.Double.NegativeInfinity" />，则为 <see cref="F:System.Double.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-223"><see cref="F:System.Double.NegativeInfinity" /> if <paramref name="x" /> equals <see cref="F:System.Double.NegativeInfinity" />.</span></span>
  
<span data-ttu-id="f7efb-224">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-224">-or-</span></span> 
 <span data-ttu-id="f7efb-225">如果 <paramref name="x" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-225"><see cref="F:System.Double.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="BitIncrement">
      <MemberSignature Language="C#" Value="public static double BitIncrement (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 BitIncrement(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BitIncrement(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitIncrement (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double BitIncrement(double x);" />
      <MemberSignature Language="F#" Value="static member BitIncrement : double -&gt; double" Usage="System.Math.BitIncrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-226">要递增的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-226">The value to increment.</span></span></param>
        <summary><span data-ttu-id="f7efb-227">返回大于 <paramref name="x" /> 的下一个最大值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-227">Returns the next largest value that compares greater than <paramref name="x" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-228">相对大于 <paramref name="x" /> 的下一个最大值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-228">The next largest value that compares greater than <paramref name="x" />.</span></span>  
  
<span data-ttu-id="f7efb-229">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-229">-or-</span></span> 
 <span data-ttu-id="f7efb-230">如果 <paramref name="x" /> 等于 <see cref="F:System.Double.PositiveInfinity" />，则为 <see cref="F:System.Double.PositiveInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-230"><see cref="F:System.Double.PositiveInfinity" /> if <paramref name="x" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span>
  
<span data-ttu-id="f7efb-231">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-231">-or-</span></span> 
 <span data-ttu-id="f7efb-232">如果 <paramref name="x" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-232"><see cref="F:System.Double.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static double Cbrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cbrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cbrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cbrt(double d);" />
      <MemberSignature Language="F#" Value="static member Cbrt : double -&gt; double" Usage="System.Math.Cbrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-233">将查找其立方根的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-233">The number whose cube root is to be found.</span></span></param>
        <summary><span data-ttu-id="f7efb-234">返回指定数字的立方根。</span><span class="sxs-lookup"><span data-stu-id="f7efb-234">Returns the cube root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-235"><paramref name="d" /> 的立方根。</span><span class="sxs-lookup"><span data-stu-id="f7efb-235">The cube root of <paramref name="d" />.</span></span>  
  
<span data-ttu-id="f7efb-236">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-236">-or-</span></span> 
 <span data-ttu-id="f7efb-237">如果 <paramref name="x" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-237"><see cref="F:System.Double.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks></remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-238">返回大于或等于指定数字的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-238">Returns the smallest integral value greater than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-239">此方法的行为遵循 IEEE 标准754第4部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-239">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f7efb-240">这种类型的舍入有时称作向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="f7efb-240">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  

## Examples

[!INCLUDE[midpoint-rounding](~/includes/csharp-interactive-note.md)]

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.Math.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-241">十进制数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-241">A decimal number.</span></span></param>
        <summary><span data-ttu-id="f7efb-242">返回大于或等于指定的十进制数的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-242">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-243">大于或等于 <paramref name="d" /> 的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-243">The smallest integral value that is greater than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="f7efb-244">请注意，此方法返回 <see cref="T:System.Decimal" />，而不是整数类型。</span><span class="sxs-lookup"><span data-stu-id="f7efb-244">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-245">此方法的行为遵循 IEEE 标准754第4部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-245">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f7efb-246">这种类型的舍入有时称作向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="f7efb-246">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="f7efb-247">换言之，如果 `d` 为正，则任何小数部分的存在都将导致 `d` 舍入到下一个最大整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-247">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="f7efb-248">如果 `d` 为负，则舍入操作将导致丢弃 `d` 的任何小数部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-248">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="f7efb-249">此方法的操作不同于 <xref:System.Math.Floor%28System.Decimal%29> 方法，该方法支持向负无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="f7efb-249">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
## Examples  
 <span data-ttu-id="f7efb-250">下面的示例演示 <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> 方法，并将其与 <xref:System.Math.Floor%28System.Decimal%29> 方法进行比较。</span><span class="sxs-lookup"><span data-stu-id="f7efb-250">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberSignature Language="F#" Value="static member Ceiling : double -&gt; double" Usage="System.Math.Ceiling a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f7efb-251">一个双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-251">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="f7efb-252">返回大于或等于指定的双精度浮点数的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-252">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-253">大于或等于 <paramref name="a" /> 的最小整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-253">The smallest integral value that is greater than or equal to <paramref name="a" />.</span></span> <span data-ttu-id="f7efb-254">如果 <paramref name="a" /> 等于 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，则返回该值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-254">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="f7efb-255">请注意，此方法返回 <see cref="T:System.Double" />，而不是整数类型。</span><span class="sxs-lookup"><span data-stu-id="f7efb-255">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-256">此方法的行为遵循 IEEE 标准754第4部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-256">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f7efb-257">这种类型的舍入有时称作向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="f7efb-257">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="f7efb-258">换言之，如果 `a` 为正，则任何小数部分的存在都将导致 `a` 舍入到下一个最大整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-258">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="f7efb-259">如果 `a` 为负，则舍入操作将导致丢弃 `a` 的任何小数部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-259">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="f7efb-260">此方法的操作不同于 <xref:System.Math.Floor%28System.Double%29> 方法，该方法支持向负无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="f7efb-260">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
<span data-ttu-id="f7efb-261">从 Visual Basic 15.8 开始，如果将 `Ceiling` 方法返回的值传递到任何[整型转换函数](~/docs/visual-basic/language-reference/functions/conversion-functions.md)，或者 `Ceiling` 返回的双精度值，则将优化双精度转换的性能。自动转换为[选项 "Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) " 设置为 "关闭" 的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-261">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Ceiling` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Ceiling` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="f7efb-262">此优化使代码可以更快运行 -- 对于进行大量到整型类型的转换的代码，可快达两倍。</span><span class="sxs-lookup"><span data-stu-id="f7efb-262">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="f7efb-263">下面的示例演示了此类优化转换：</span><span class="sxs-lookup"><span data-stu-id="f7efb-263">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7969
```   

## Examples  
 <span data-ttu-id="f7efb-264">下面的示例演示 <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> 方法，并将其与 <xref:System.Math.Floor%28System.Double%29> 方法进行比较。</span><span class="sxs-lookup"><span data-stu-id="f7efb-264">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : byte * byte * byte -&gt; byte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.Byte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.Byte" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-265">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-265">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-266">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-266">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-267">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-267">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-268">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-268">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-269">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-269"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>  
  
<span data-ttu-id="f7efb-270">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-270">-or-</span></span> 
 <span data-ttu-id="f7efb-271">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-271"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-272">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-272">-or-</span></span> 
 <span data-ttu-id="f7efb-273">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-273"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberSignature Language="F#" Value="static member Clamp : decimal * decimal * decimal -&gt; decimal" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.Decimal" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.Decimal" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-274">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-274">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-275">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-275">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-276">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-276">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-277">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-277">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-278">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-278"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="f7efb-279">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-279">-or-</span></span> 
 <span data-ttu-id="f7efb-280">如果 <paramref name="value" /> &lt;<paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-280"><paramref name="min" /> if <paramref name="value" /> &lt;<paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-281">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-281">-or-</span></span> 
 <span data-ttu-id="f7efb-282">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-282"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberSignature Language="F#" Value="static member Clamp : double * double * double -&gt; double" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.Double" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.Double" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-283">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-283">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-284">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-284">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-285">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-285">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-286">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-286">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-287">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-287"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="f7efb-288">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-288">-or-</span></span> 
 <span data-ttu-id="f7efb-289">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-289"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-290">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-290">-or-</span></span> 
 <span data-ttu-id="f7efb-291">如果<paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-291"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.\`\`</span></span> 
<span data-ttu-id="f7efb-292">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-292">-or-</span></span> 
  <span data-ttu-id="f7efb-293">如果 <paramref name="value" /> 等于 <see cref="F:System.Double.NaN" />，则为 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-293"><see cref="F:System.Double.NaN" /> if <paramref name="value" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int16 * int16 * int16 -&gt; int16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.Int16" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-294">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-294">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-295">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-295">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-296">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-296">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-297">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-297">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-298">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-298"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="f7efb-299">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-299">-or-</span></span> 
 <span data-ttu-id="f7efb-300">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-300"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-301">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-301">-or-</span></span> 
 <span data-ttu-id="f7efb-302">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-302"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int * int * int -&gt; int" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-303">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-303">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-304">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-304">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-305">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-305">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-306">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-306">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-307">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-307"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="f7efb-308">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-308">-or-</span></span> 
 <span data-ttu-id="f7efb-309">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-309"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-310">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-310">-or-</span></span> 
 <span data-ttu-id="f7efb-311">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-311"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int64 * int64 * int64 -&gt; int64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.Int64" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-312">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-312">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-313">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-313">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-314">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-314">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-315">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-315">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-316">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-316"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="f7efb-317">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-317">-or-</span></span> 
 <span data-ttu-id="f7efb-318">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-318"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-319">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-319">-or-</span></span> 
 <span data-ttu-id="f7efb-320">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-320"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : sbyte * sbyte * sbyte -&gt; sbyte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.SByte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.SByte" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-321">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-321">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-322">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-322">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-323">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-323">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-324">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-324">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-325">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-325"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="f7efb-326">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-326">-or-</span></span> 
 <span data-ttu-id="f7efb-327">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-327"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-328">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-328">-or-</span></span> 
 <span data-ttu-id="f7efb-329">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-329"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberSignature Language="F#" Value="static member Clamp : single * single * single -&gt; single" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.Single" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.Single" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-330">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-330">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-331">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-331">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-332">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-332">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-333">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-333">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-334">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-334"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>  
  
<span data-ttu-id="f7efb-335">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-335">-or-</span></span> 
 <span data-ttu-id="f7efb-336">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-336"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-337">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-337">-or-</span></span> 
 <span data-ttu-id="f7efb-338">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-338"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span>
  
<span data-ttu-id="f7efb-339">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-339">-or-</span></span> 
  <span data-ttu-id="f7efb-340">如果 <paramref name="value" /> 等于 <see cref="F:System.Single.NaN" />，则为 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-340"><see cref="F:System.Single.NaN" /> if <paramref name="value" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint16 * uint16 * uint16 -&gt; uint16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.UInt16" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-341">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-341">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-342">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-342">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-343">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-343">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-344">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-344">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-345">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-345"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>  
  
<span data-ttu-id="f7efb-346">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-346">-or-</span></span> 
 <span data-ttu-id="f7efb-347">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-347"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-348">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-348">-or-</span></span> 
 <span data-ttu-id="f7efb-349">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-349"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint32 * uint32 * uint32 -&gt; uint32" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.UInt32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-350">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-350">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-351">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-351">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-352">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-352">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-353">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-353">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-354">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-354"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>  
  
<span data-ttu-id="f7efb-355">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-355">-or-</span></span> 
 <span data-ttu-id="f7efb-356">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-356"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-357">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-357">-or-</span></span> 
 <span data-ttu-id="f7efb-358">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-358"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint64 * uint64 * uint64 -&gt; uint64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="min" Type="System.UInt64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="max" Type="System.UInt64" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-359">要限制的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-359">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="f7efb-360">结果的下限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-360">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="f7efb-361">结果的上限。</span><span class="sxs-lookup"><span data-stu-id="f7efb-361">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-362">返回限制在 <paramref name="min" /> 和 <paramref name="max" /> 范围内（含首尾）的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-362">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-363">如果 <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />，则为 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-363"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="f7efb-364">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-364">-or-</span></span> 
 <span data-ttu-id="f7efb-365">如果 <paramref name="value" /> &lt; <paramref name="min" />，则为 <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-365"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="f7efb-366">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-366">-or-</span></span> 
 <span data-ttu-id="f7efb-367">如果 <paramref name="max" /> &lt; <paramref name="value" />，则为 <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-367"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySign">
      <MemberSignature Language="C#" Value="public static double CopySign (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 CopySign(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.CopySign(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopySign (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double CopySign(double x, double y);" />
      <MemberSignature Language="F#" Value="static member CopySign : double * double -&gt; double" Usage="System.Math.CopySign (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-368">其大小在结果中使用的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-368">A number whose magnitude is used in the result.</span></span></param>
        <param name="y"><span data-ttu-id="f7efb-369">其符号在结果中使用的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-369">A number whose sign is the used in the result.</span></span></param>
        <summary><span data-ttu-id="f7efb-370">返回一个值，它具有 <paramref name="x" /> 的大小和 <paramref name="y" /> 的符号。</span><span class="sxs-lookup"><span data-stu-id="f7efb-370">Returns a value with the magnitude of <paramref name="x" /> and the sign of <paramref name="y" />.</span></span></summary>
        <returns><span data-ttu-id="f7efb-371">一个值，它具有 <paramref name="x" /> 的大小和 <paramref name="y" /> 的符号。</span><span class="sxs-lookup"><span data-stu-id="f7efb-371">A value with the magnitude of <paramref name="x" /> and the sign of <paramref name="y" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberSignature Language="F#" Value="static member Cos : double -&gt; double" Usage="System.Math.Cos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-372">以弧度计量的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-372">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f7efb-373">返回指定角度的余弦值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-373">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f7efb-374"><paramref name="d" /> 的余弦值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-374">The cosine of <paramref name="d" />.</span></span> <span data-ttu-id="f7efb-375">如果 <paramref name="d" /> 等于 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，此方法将返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-375">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-376">角度（`d`）必须以弧度为单位。</span><span class="sxs-lookup"><span data-stu-id="f7efb-376">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="f7efb-377">乘以 <xref:System.Math.PI?displayProperty=nameWithType>/180 将度转换为弧度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-377">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="f7efb-378">`d` 可接受的值范围是从大约-9223372036854775295 到约9223372036854775295。</span><span class="sxs-lookup"><span data-stu-id="f7efb-378">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="f7efb-379">对于超出此范围的值，<xref:System.Math.Cos%2A> 方法 `d` 返回未更改的值，而不是引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7efb-379">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-380">下面的示例使用 <xref:System.Math.Cos%2A> 来计算所选角度的某些三角标识。</span><span class="sxs-lookup"><span data-stu-id="f7efb-380">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberSignature Language="F#" Value="static member Cosh : double -&gt; double" Usage="System.Math.Cosh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-381">以弧度计量的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-381">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f7efb-382">返回指定角度的双曲余弦值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-382">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f7efb-383"><paramref name="value" /> 的双曲余弦值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-383">The hyperbolic cosine of <paramref name="value" />.</span></span> <span data-ttu-id="f7efb-384">如果 <paramref name="value" /> 等于 <see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，则返回 <see cref="F:System.Double.PositiveInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-384">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="f7efb-385">如果 <paramref name="value" /> 等于 <see cref="F:System.Double.NaN" />，则返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-385">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-386">角度（`value`）必须以弧度为单位。</span><span class="sxs-lookup"><span data-stu-id="f7efb-386">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="f7efb-387">乘以 <xref:System.Math.PI?displayProperty=nameWithType>/180 将度转换为弧度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-387">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-388">下面的示例使用 <xref:System.Math.Cosh%2A> 来计算所选值的特定双曲标识。</span><span class="sxs-lookup"><span data-stu-id="f7efb-388">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-389">计算两个数字的商，并在输出参数中返回余数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-389">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int * int * int -&gt; int" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="b" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f7efb-390">被除数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-390">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="f7efb-391">除数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-391">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="f7efb-392">余数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-392">The remainder.</span></span></param>
        <summary><span data-ttu-id="f7efb-393">计算两个 32 位有符号整数的商，并通过输出参数返回余数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-393">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="f7efb-394">指定数字的商。</span><span class="sxs-lookup"><span data-stu-id="f7efb-394">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-395">余数值等于[余数运算符](~/docs/csharp/language-reference/operators/remainder-operator.md)的结果。</span><span class="sxs-lookup"><span data-stu-id="f7efb-395">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
   
## Examples  
 <span data-ttu-id="f7efb-396">下面的示例演示 <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-396">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="f7efb-397"><paramref name="b" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-397"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int64 * int64 * int64 -&gt; int64" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="b" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int64" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f7efb-398">被除数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-398">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="f7efb-399">除数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-399">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="f7efb-400">余数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-400">The remainder.</span></span></param>
        <summary><span data-ttu-id="f7efb-401">计算两个 64 位有符号整数的商，并通过输出参数返回余数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-401">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="f7efb-402">指定数字的商。</span><span class="sxs-lookup"><span data-stu-id="f7efb-402">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-403">余数值等于[余数运算符](~/docs/csharp/language-reference/operators/remainder-operator.md)的结果。</span><span class="sxs-lookup"><span data-stu-id="f7efb-403">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-404">下面的示例演示 <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-404">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="f7efb-405"><paramref name="b" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-405"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberSignature Language="F#" Value="val mutable E : double" Usage="System.Math.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7efb-406">表示自然对数的底，它由常数 <see langword="e" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-406">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-407">此字段的值为2.7182818284590451。</span><span class="sxs-lookup"><span data-stu-id="f7efb-407">The value of this field is 2.7182818284590451.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-408">下面的示例将 <xref:System.Math.E> 与从幂序列计算得出的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="f7efb-408">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberSignature Language="F#" Value="static member Exp : double -&gt; double" Usage="System.Math.Exp d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-409">指定幂的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-409">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="f7efb-410">返回 <see langword="e" /> 的指定次幂。</span><span class="sxs-lookup"><span data-stu-id="f7efb-410">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="f7efb-411">数字 <see langword="e" /> 的 <paramref name="d" /> 次幂。</span><span class="sxs-lookup"><span data-stu-id="f7efb-411">The number <see langword="e" /> raised to the power <paramref name="d" />.</span></span> <span data-ttu-id="f7efb-412">如果 <paramref name="d" /> 等于 <see cref="F:System.Double.NaN" /> 或 <see cref="F:System.Double.PositiveInfinity" />，则返回该值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-412">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="f7efb-413">如果 <paramref name="d" /> 等于 <see cref="F:System.Double.NegativeInfinity" />，则返回 0。</span><span class="sxs-lookup"><span data-stu-id="f7efb-413">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-414">`e` 是一个数学常量，其值约为2.71828。</span><span class="sxs-lookup"><span data-stu-id="f7efb-414">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="f7efb-415">使用 <xref:System.Math.Pow%2A> 方法计算其他底数的幂。</span><span class="sxs-lookup"><span data-stu-id="f7efb-415">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="f7efb-416"><xref:System.Math.Exp%2A> 是 <xref:System.Math.Log%2A>的反向。</span><span class="sxs-lookup"><span data-stu-id="f7efb-416"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-417">下面的示例使用 <xref:System.Math.Exp%2A> 来评估所选值的某些指数和对数标识。</span><span class="sxs-lookup"><span data-stu-id="f7efb-417">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-418">返回小于或等于指定数字的最大整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-418">Returns the largest integral value less than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-419">此方法的行为遵循 IEEE 标准754第4部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-419">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f7efb-420">这种舍入有时称为舍入向负无穷。</span><span class="sxs-lookup"><span data-stu-id="f7efb-420">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  

## Examples

[!INCLUDE[midpoint-rounding](~/includes/csharp-interactive-note.md)]

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-421">十进制数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-421">A decimal number.</span></span></param>
        <summary><span data-ttu-id="f7efb-422">返回小于或等于指定小数的最大整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-422">Returns the largest integral value less than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-423">小于或等于 <paramref name="d" /> 的最大整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-423">The largest integral value less than or equal to <paramref name="d" />.</span></span>  <span data-ttu-id="f7efb-424">请注意，该方法将返回 <see cref="T:System.Decimal" /> 类型的整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-424">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-425">此方法的行为遵循 IEEE 标准754第4部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-425">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f7efb-426">这种舍入有时称为舍入向负无穷。</span><span class="sxs-lookup"><span data-stu-id="f7efb-426">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="f7efb-427">换言之，如果 `d` 为正，则会截断任何小数部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-427">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="f7efb-428">如果 `d` 为负数，则任何小数部分的存在都将导致它舍入到较小的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-428">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="f7efb-429">此方法的操作不同于 <xref:System.Math.Ceiling%2A> 方法，该方法支持向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="f7efb-429">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  

## Examples  
 <span data-ttu-id="f7efb-430">下面的示例演示 <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> 方法，并将其与 <xref:System.Math.Ceiling%28System.Decimal%29> 方法进行比较。</span><span class="sxs-lookup"><span data-stu-id="f7efb-430">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberSignature Language="F#" Value="static member Floor : double -&gt; double" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-431">一个双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-431">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="f7efb-432">返回小于或等于指定双精度浮点数的最大整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-432">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-433">小于或等于 <paramref name="d" /> 的最大整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-433">The largest integral value less than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="f7efb-434">如果 <paramref name="d" /> 等于 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，则返回该值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-434">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-435">此方法的行为遵循 IEEE 标准754第4部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-435">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f7efb-436">这种舍入有时称为舍入向负无穷。</span><span class="sxs-lookup"><span data-stu-id="f7efb-436">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="f7efb-437">换言之，如果 `d` 为正，则会截断任何小数部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-437">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="f7efb-438">如果 `d` 为负数，则任何小数部分的存在都将导致它舍入到较小的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-438">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="f7efb-439">此方法的操作不同于 <xref:System.Math.Ceiling%2A> 方法，该方法支持向正无穷舍入。</span><span class="sxs-lookup"><span data-stu-id="f7efb-439">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  

<span data-ttu-id="f7efb-440">从 Visual Basic 15.8 开始，如果将 `Floor` 方法返回的值传递到任何[整型转换函数](~/docs/visual-basic/language-reference/functions/conversion-functions.md)，或者 `Floor` 返回的双精度值，则将优化双精度转换的性能。自动转换为[选项 "Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) " 设置为 "关闭" 的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-440">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Floor` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Floor` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="f7efb-441">此优化使代码可以更快运行 -- 对于进行大量到整型类型的转换的代码，可快达两倍。</span><span class="sxs-lookup"><span data-stu-id="f7efb-441">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="f7efb-442">下面的示例演示了此类优化转换：</span><span class="sxs-lookup"><span data-stu-id="f7efb-442">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1043

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

## Examples  
 <span data-ttu-id="f7efb-443">下面的示例演示 <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> 方法，并将其与 <xref:System.Math.Ceiling%28System.Double%29> 方法进行比较。</span><span class="sxs-lookup"><span data-stu-id="f7efb-443">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAdd">
      <MemberSignature Language="C#" Value="public static double FusedMultiplyAdd (double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 FusedMultiplyAdd(float64 x, float64 y, float64 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.FusedMultiplyAdd(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAdd (x As Double, y As Double, z As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FusedMultiplyAdd(double x, double y, double z);" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAdd : double * double * double -&gt; double" Usage="System.Math.FusedMultiplyAdd (x, y, z)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="z" Type="System.Double" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-444">要与 <paramref name="y" /> 相乘的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-444">The number to be multiplied with <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="f7efb-445">要与 <paramref name="x" /> 相乘的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-445">The number to be multiplied with <paramref name="x" />.</span></span></param>
        <param name="z"><span data-ttu-id="f7efb-446">要与 <paramref name="x" /> 和 <paramref name="y" /> 相乘所得的结果相加的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-446">The number to be added to the result of <paramref name="x" /> multiplied by <paramref name="y" />.</span></span></param>
        <summary><span data-ttu-id="f7efb-447">返回 (x \* y) + z，舍入为一个三元运算。</span><span class="sxs-lookup"><span data-stu-id="f7efb-447">Returns (x \* y) + z, rounded as one ternary operation.</span></span></summary>
        <returns><span data-ttu-id="f7efb-448">(x \* y) + z，舍入为一个三元运算。</span><span class="sxs-lookup"><span data-stu-id="f7efb-448">(x \* y) + z, rounded as one ternary operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-449">这将计算 `(x * y)` 视为无限精度，将 `z` 添加到结果中，就像是无限精度，最后舍入为最接近的可表示值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-449">This computes `(x * y)` as if to infinite precision, adds `z` to that result as if to infinite precision, and finally rounds to the nearest representable value.</span></span>
  
 <span data-ttu-id="f7efb-450">这不同于未融合的序列，该序列将计算 `(x * y)` 视为无限精度，`z` 将结果舍入为最接近的可表示值，将结果添加到舍入结果，就像是无限精度，最后舍入到最接近的表示形式。负值.</span><span class="sxs-lookup"><span data-stu-id="f7efb-450">This differs from the non-fused sequence which would compute `(x * y)` as if to infinite precision, round the result to the nearest representable value, add `z` to the rounded result as if to infinite precision, and finally round to the nearest representable value.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : double * double -&gt; double" Usage="System.Math.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-451">被除数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-451">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="f7efb-452">除数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-452">A divisor.</span></span></param>
        <summary><span data-ttu-id="f7efb-453">返回一指定数字被另一指定数字相除的余数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-453">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-454">等于 <paramref name="x" /> - (<paramref name="y" /> Q) 的数，其中 Q 是 <paramref name="x" /> / <paramref name="y" /> 的商的最接近整数（如果 <paramref name="x" /> / <paramref name="y" /> 在两个整数中间，则返回偶数）。</span><span class="sxs-lookup"><span data-stu-id="f7efb-454">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
<span data-ttu-id="f7efb-455">如果 <paramref name="x" /> - (<paramref name="y" /> Q) 为零，则在 <paramref name="x" /> 为正时返回值 +0，而在 <paramref name="x" /> 为负时返回 -0。</span><span class="sxs-lookup"><span data-stu-id="f7efb-455">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
<span data-ttu-id="f7efb-456">如果 <paramref name="y" /> = 0，则返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-456">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-457">此操作符合 ANSI/IEEE Std 754-1985 第5.1 节中定义的其余操作。二元浮点算术的 IEEE 标准;电气和电子工程师协会，Inc.;1985。</span><span class="sxs-lookup"><span data-stu-id="f7efb-457">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="f7efb-458"><xref:System.Math.IEEERemainder%2A> 方法不同于[余数运算符](~/docs/csharp/language-reference/operators/remainder-operator.md)。</span><span class="sxs-lookup"><span data-stu-id="f7efb-458">The <xref:System.Math.IEEERemainder%2A> method is not the same as the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span> <span data-ttu-id="f7efb-459">尽管这两个方法都返回相除后的余数，但它们使用的公式是不同的。</span><span class="sxs-lookup"><span data-stu-id="f7efb-459">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="f7efb-460"><xref:System.Math.IEEERemainder%2A> 方法的公式为：</span><span class="sxs-lookup"><span data-stu-id="f7efb-460">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="f7efb-461">相反，余数运算符的公式为：</span><span class="sxs-lookup"><span data-stu-id="f7efb-461">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (Math.Abs(dividend) - (Math.Abs(divisor) *   
            (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
            Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-462">下面的示例将 <xref:System.Math.IEEERemainder%2A> 方法返回的余数与[余数运算符](~/docs/csharp/language-reference/operators/remainder-operator.md)返回的余数进行比较。</span><span class="sxs-lookup"><span data-stu-id="f7efb-462">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ILogB">
      <MemberSignature Language="C#" Value="public static int ILogB (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ILogB(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.ILogB(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ILogB (x As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ILogB(double x);" />
      <MemberSignature Language="F#" Value="static member ILogB : double -&gt; int" Usage="System.Math.ILogB x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-463">要查找其对数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-463">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="f7efb-464">返回指定数字以 2 为底的整数对数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-464">Returns the base 2 integer logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-465">下表中的值之一。</span><span class="sxs-lookup"><span data-stu-id="f7efb-465">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="f7efb-466"><paramref name="x" /> 参数</span><span class="sxs-lookup"><span data-stu-id="f7efb-466"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="f7efb-467">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-467">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-468">默认</span><span class="sxs-lookup"><span data-stu-id="f7efb-468">Default</span></span> 
 </term><description> <span data-ttu-id="f7efb-469"><paramref name="x" /> 以 2 为底的整数对数，即 (int)log2(<paramref name="x" />)。</span><span class="sxs-lookup"><span data-stu-id="f7efb-469">The base 2 integer log of <paramref name="x" />; that is, (int)log2(<paramref name="x" />).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-470">零</span><span class="sxs-lookup"><span data-stu-id="f7efb-470">Zero</span></span> 
 </term><description><see cref="F:System.Int32.MinValue" /></description></item><item><term> <span data-ttu-id="f7efb-471">等于 <see cref="F:System.Double.NaN" /> 或 <see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NegativeInfinity" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-471">Equal to <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" /></span></span></term><description><see cref="F:System.Int32.MaxValue" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-472">参数 `x` 指定为以10为基数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-472">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-473">返回指定数字的对数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-473">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberSignature Language="F#" Value="static member Log : double -&gt; double" Usage="System.Math.Log d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-474">要查找其对数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-474">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="f7efb-475">返回指定数字的自然对数（底为 <see langword="e" />）。</span><span class="sxs-lookup"><span data-stu-id="f7efb-475">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-476">下表中的值之一。</span><span class="sxs-lookup"><span data-stu-id="f7efb-476">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="f7efb-477"><paramref name="d" /> 参数</span><span class="sxs-lookup"><span data-stu-id="f7efb-477"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="f7efb-478">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-478">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-479">正</span><span class="sxs-lookup"><span data-stu-id="f7efb-479">Positive</span></span> 
 </term><description> <span data-ttu-id="f7efb-480"><paramref name="d" /> 的自然对数，即 ln <paramref name="d" /> 或 log e <paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-480">The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></span></span></description></item><item><term> <span data-ttu-id="f7efb-481">零</span><span class="sxs-lookup"><span data-stu-id="f7efb-481">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="f7efb-482">负数</span><span class="sxs-lookup"><span data-stu-id="f7efb-482">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f7efb-483">等于 <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-483">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f7efb-484">等于 <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-484">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-485">参数 `d` 指定为以10为基数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-485">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-486">下面的示例演示 <xref:System.Math.Log%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-486">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberSignature Language="F#" Value="static member Log : double * double -&gt; double" Usage="System.Math.Log (a, newBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f7efb-487">要查找其对数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-487">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="f7efb-488">对数的底。</span><span class="sxs-lookup"><span data-stu-id="f7efb-488">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="f7efb-489">返回指定数字在使用指定底时的对数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-489">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="f7efb-490">下表中的值之一。</span><span class="sxs-lookup"><span data-stu-id="f7efb-490">One of the values in the following table.</span></span> <span data-ttu-id="f7efb-491">（+Infinity 表示 <see cref="F:System.Double.PositiveInfinity" />，-Infinity 表示 <see cref="F:System.Double.NegativeInfinity" />，NaN 表示 <see cref="F:System.Double.NaN" />。）</span><span class="sxs-lookup"><span data-stu-id="f7efb-491">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span></span> 
 <list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> <span data-ttu-id="f7efb-492">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-492">Return value</span></span> 
 </description></listheader><item><term><span data-ttu-id="f7efb-493"><paramref name="a" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="f7efb-493"><paramref name="a" />&gt; 0</span></span> 
 </term><description> <span data-ttu-id="f7efb-494">(0 &lt;<paramref name="newBase" />&lt; 1) 或 (<paramref name="newBase" />&gt; 1)</span><span class="sxs-lookup"><span data-stu-id="f7efb-494">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span> 
 </description><description> <span data-ttu-id="f7efb-495">lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="f7efb-495">lognewBase(a)</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-496"><paramref name="a" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="f7efb-496"><paramref name="a" />&lt; 0</span></span> 
 </term><description> <span data-ttu-id="f7efb-497">（任意值）</span><span class="sxs-lookup"><span data-stu-id="f7efb-497">(any value)</span></span> 
 </description><description> <span data-ttu-id="f7efb-498">NaN</span><span class="sxs-lookup"><span data-stu-id="f7efb-498">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="f7efb-499">（任意值）</span><span class="sxs-lookup"><span data-stu-id="f7efb-499">(any value)</span></span> 
 </term><description><span data-ttu-id="f7efb-500"><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="f7efb-500"><paramref name="newBase" />&lt; 0</span></span> 
 </description><description> <span data-ttu-id="f7efb-501">NaN</span><span class="sxs-lookup"><span data-stu-id="f7efb-501">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-502"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="f7efb-502"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="f7efb-503"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="f7efb-503"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="f7efb-504">NaN</span><span class="sxs-lookup"><span data-stu-id="f7efb-504">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-505"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="f7efb-505"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="f7efb-506"><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="f7efb-506"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="f7efb-507">NaN</span><span class="sxs-lookup"><span data-stu-id="f7efb-507">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-508"><paramref name="a" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="f7efb-508"><paramref name="a" /> = NaN</span></span> 
 </term><description> <span data-ttu-id="f7efb-509">（任意值）</span><span class="sxs-lookup"><span data-stu-id="f7efb-509">(any value)</span></span> 
 </description><description> <span data-ttu-id="f7efb-510">NaN</span><span class="sxs-lookup"><span data-stu-id="f7efb-510">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="f7efb-511">（任意值）</span><span class="sxs-lookup"><span data-stu-id="f7efb-511">(any value)</span></span> 
 </term><description><span data-ttu-id="f7efb-512"><paramref name="newBase" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="f7efb-512"><paramref name="newBase" /> = NaN</span></span> 
 </description><description> <span data-ttu-id="f7efb-513">NaN</span><span class="sxs-lookup"><span data-stu-id="f7efb-513">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="f7efb-514">（任意值）</span><span class="sxs-lookup"><span data-stu-id="f7efb-514">(any value)</span></span> 
 </term><description><span data-ttu-id="f7efb-515"><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="f7efb-515"><paramref name="newBase" /> = 1</span></span> 
 </description><description> <span data-ttu-id="f7efb-516">NaN</span><span class="sxs-lookup"><span data-stu-id="f7efb-516">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-517"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="f7efb-517"><paramref name="a" /> = 0</span></span> 
 </term><description> <span data-ttu-id="f7efb-518">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="f7efb-518">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="f7efb-519">+Infinity</span><span class="sxs-lookup"><span data-stu-id="f7efb-519">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-520"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="f7efb-520"><paramref name="a" /> = 0</span></span> 
 </term><description><span data-ttu-id="f7efb-521"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="f7efb-521"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="f7efb-522">-Infinity</span><span class="sxs-lookup"><span data-stu-id="f7efb-522">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-523"><paramref name="a" /> =  +Infinity</span><span class="sxs-lookup"><span data-stu-id="f7efb-523"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description> <span data-ttu-id="f7efb-524">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="f7efb-524">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="f7efb-525">-Infinity</span><span class="sxs-lookup"><span data-stu-id="f7efb-525">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-526"><paramref name="a" /> =  +Infinity</span><span class="sxs-lookup"><span data-stu-id="f7efb-526"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description><span data-ttu-id="f7efb-527"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="f7efb-527"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="f7efb-528">+Infinity</span><span class="sxs-lookup"><span data-stu-id="f7efb-528">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-529"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="f7efb-529"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="f7efb-530"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="f7efb-530"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="f7efb-531">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-531">0</span></span> 
 </description></item><item><term><span data-ttu-id="f7efb-532"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="f7efb-532"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="f7efb-533"><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="f7efb-533"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="f7efb-534">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-534">0</span></span> 
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-535">下面的示例使用 <xref:System.Math.Log%2A> 来计算所选值的特定对数标识。</span><span class="sxs-lookup"><span data-stu-id="f7efb-535">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberSignature Language="F#" Value="static member Log10 : double -&gt; double" Usage="System.Math.Log10 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-536">要查找其对数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-536">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="f7efb-537">返回指定数字以 10 为底的对数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-537">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-538">下表中的值之一。</span><span class="sxs-lookup"><span data-stu-id="f7efb-538">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="f7efb-539"><paramref name="d" /> 参数</span><span class="sxs-lookup"><span data-stu-id="f7efb-539"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="f7efb-540">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-540">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-541">正</span><span class="sxs-lookup"><span data-stu-id="f7efb-541">Positive</span></span> 
 </term><description> <span data-ttu-id="f7efb-542"><paramref name="d" /> 的以 10 为底的对数，即 log 10<paramref name="d" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-542">The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-543">零</span><span class="sxs-lookup"><span data-stu-id="f7efb-543">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="f7efb-544">负数</span><span class="sxs-lookup"><span data-stu-id="f7efb-544">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f7efb-545">等于 <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-545">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f7efb-546">等于 <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-546">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-547">参数 `d` 指定为以10为基数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-547">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-548">下面的示例使用 <xref:System.Math.Log10%2A> 方法为所选值返回以10为底的对数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-548">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static double Log2 (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log2(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log2(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log2(double x);" />
      <MemberSignature Language="F#" Value="static member Log2 : double -&gt; double" Usage="System.Math.Log2 x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-549">要查找其对数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-549">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="f7efb-550">返回指定数字以 2 为底的对数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-550">Returns the base 2 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-551">下表中的值之一。</span><span class="sxs-lookup"><span data-stu-id="f7efb-551">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="f7efb-552"><paramref name="x" /> 参数</span><span class="sxs-lookup"><span data-stu-id="f7efb-552"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="f7efb-553">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-553">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-554">正</span><span class="sxs-lookup"><span data-stu-id="f7efb-554">Positive</span></span> 
 </term><description> <span data-ttu-id="f7efb-555"><paramref name="x" /> 以 2 为底的对数，即 log 2<paramref name="x" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-555">The base 2 log of <paramref name="x" />; that is, log 2<paramref name="x" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-556">零</span><span class="sxs-lookup"><span data-stu-id="f7efb-556">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="f7efb-557">负数</span><span class="sxs-lookup"><span data-stu-id="f7efb-557">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f7efb-558">等于 <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-558">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f7efb-559">等于 <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-559">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-560">参数 `x` 指定为以10为基数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-560">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-561">返回两个指定数字中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-561">Returns the larger of two specified numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Max : byte * byte -&gt; byte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-562">要比较的两个 8 位无符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-562">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-563">要比较的两个 8 位无符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-563">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-564">返回两个 8 位无符号整数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-564">Returns the larger of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-565"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-565">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-566">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-566">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Max : decimal * decimal -&gt; decimal" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-567">要比较的两个十进制数字中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-567">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-568">要比较的两个十进制数字中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-568">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-569">返回两个十进制数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-569">Returns the larger of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-570"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-570">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-571">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-571">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Max : double * double -&gt; double" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-572">要比较的两个双精度浮点数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-572">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-573">要比较的两个双精度浮点数中的第二个</span><span class="sxs-lookup"><span data-stu-id="f7efb-573">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-574">返回两个双精度浮点数字中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-574">Returns the larger of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-575"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-575">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="f7efb-576">如果 <paramref name="val1" /> 或 <paramref name="val2" /> 或者 <paramref name="val1" /> 和 <paramref name="val2" /> 都等于 <see cref="F:System.Double.NaN" />，则返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-576">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-577">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-577">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Max : int16 * int16 -&gt; int16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-578">要比较的两个 16 位有符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-578">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-579">要比较的两个 16 位有符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-579">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-580">返回两个 16 位有符号的整数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-580">Returns the larger of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-581"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-581">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-582">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-582">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Max : int * int -&gt; int" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-583">要比较的两个 32 位有符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-583">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-584">要比较的两个 32 位有符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-584">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-585">返回两个 32 位有符号的整数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-585">Returns the larger of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-586"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-586">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-587">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-587">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Max : int64 * int64 -&gt; int64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-588">要比较的两个 64 位有符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-588">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-589">要比较的两个 64 位有符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-589">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-590">返回两个 64 位有符号的整数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-590">Returns the larger of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-591"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-591">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-592">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-592">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Max : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-593">要比较的两个 8 位有符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-593">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-594">要比较的两个 8 位有符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-594">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-595">返回两个 8 位有符号的整数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-595">Returns the larger of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-596"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-596">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-597">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-597">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-598">要比较的两个单精度浮点数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-598">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-599">要比较的两个单精度浮点数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-599">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-600">返回两个单精度浮点数字中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-600">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-601"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-601">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="f7efb-602">如果 <paramref name="val1" /> 或 <paramref name="val2" /> 或者 <paramref name="val1" /> 和 <paramref name="val2" /> 都等于 <see cref="F:System.Single.NaN" />，则返回 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-602">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-603">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-603">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint16 * uint16 -&gt; uint16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-604">要比较的两个 16 位无符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-604">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-605">要比较的两个 16 位无符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-605">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-606">返回两个 16 位无符号整数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-606">Returns the larger of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-607"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-607">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-608">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-608">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint32 * uint32 -&gt; uint32" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-609">要比较的两个 32 位无符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-609">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-610">要比较的两个 32 位无符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-610">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-611">返回两个 32 位无符号整数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-611">Returns the larger of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-612"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-612">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-613">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-613">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint64 * uint64 -&gt; uint64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-614">要比较的两个 64 位无符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-614">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-615">要比较的两个 64 位无符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-615">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-616">返回两个 64 位无符号整数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-616">Returns the larger of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-617"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-617">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-618">下面的示例演示如何使用 <xref:System.Math.Max%2A> 方法返回并显示两个变量中较大的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-618">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMagnitude">
      <MemberSignature Language="C#" Value="public static double MaxMagnitude (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 MaxMagnitude(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.MaxMagnitude(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxMagnitude (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MaxMagnitude(double x, double y);" />
      <MemberSignature Language="F#" Value="static member MaxMagnitude : double * double -&gt; double" Usage="System.Math.MaxMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-619">要比较的两个双精度浮点数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-619">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="f7efb-620">要比较的两个双精度浮点数中的第二个</span><span class="sxs-lookup"><span data-stu-id="f7efb-620">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-621">返回两个双精度浮点数字中的较大值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-621">Returns the larger magnitude of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-622">参数 <paramref name="x" /> 或 <paramref name="y" />，取较大的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-622">Parameter <paramref name="x" /> or <paramref name="y" />, whichever has the larger magnitude.</span></span> <span data-ttu-id="f7efb-623">如果 <paramref name="x" /> 或 <paramref name="y" /> 或者 <paramref name="x" /> 和 <paramref name="y" /> 都等于 <see cref="F:System.Double.NaN" />，则返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-623">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-624">返回两个数字中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-624">Returns the smaller of two numbers.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Min : byte * byte -&gt; byte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-625">要比较的两个 8 位无符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-625">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-626">要比较的两个 8 位无符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-626">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-627">返回两个 8 位无符号整数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-627">Returns the smaller of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-628"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-628">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-629">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-629">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Min : decimal * decimal -&gt; decimal" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-630">要比较的两个十进制数字中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-630">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-631">要比较的两个十进制数字中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-631">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-632">返回两个十进制数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-632">Returns the smaller of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-633"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-633">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-634">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-634">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Min : double * double -&gt; double" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-635">要比较的两个双精度浮点数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-635">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-636">要比较的两个双精度浮点数中的第二个</span><span class="sxs-lookup"><span data-stu-id="f7efb-636">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-637">返回两个双精度浮点数字中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-637">Returns the smaller of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-638"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-638">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="f7efb-639">如果 <paramref name="val1" /> 或 <paramref name="val2" /> 或者 <paramref name="val1" /> 和 <paramref name="val2" /> 都等于 <see cref="F:System.Double.NaN" />，则返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-639">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-640">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-640">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Min : int16 * int16 -&gt; int16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-641">要比较的两个 16 位有符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-641">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-642">要比较的两个 16 位有符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-642">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-643">返回两个 16 位有符号整数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-643">Returns the smaller of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-644"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-644">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-645">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-645">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Min : int * int -&gt; int" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-646">要比较的两个 32 位有符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-646">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-647">要比较的两个 32 位有符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-647">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-648">返回两个 32 位有符号整数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-648">Returns the smaller of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-649"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-649">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-650">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-650">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Min : int64 * int64 -&gt; int64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-651">要比较的两个 64 位有符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-651">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-652">要比较的两个 64 位有符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-652">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-653">返回两个 64 位有符号整数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-653">Returns the smaller of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-654"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-654">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-655">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-655">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Min : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-656">要比较的两个 8 位有符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-656">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-657">要比较的两个 8 位有符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-657">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-658">返回两个 8 位有符号整数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-658">Returns the smaller of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-659"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-659">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-660">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-660">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-661">要比较的两个单精度浮点数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-661">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-662">要比较的两个单精度浮点数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-662">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-663">返回两个单精度浮点数字中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-663">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-664"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-664">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="f7efb-665">如果 <paramref name="val1" /> 或 <paramref name="val2" /> 或者 <paramref name="val1" /> 和 <paramref name="val2" /> 都等于 <see cref="F:System.Single.NaN" />，则返回 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-665">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-666">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-666">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint16 * uint16 -&gt; uint16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-667">要比较的两个 16 位无符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-667">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-668">要比较的两个 16 位无符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-668">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-669">返回两个 16 位无符号整数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-669">Returns the smaller of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-670"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-670">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-671">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-671">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint32 * uint32 -&gt; uint32" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-672">要比较的两个 32 位无符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-672">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-673">要比较的两个 32 位无符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-673">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-674">返回两个 32 位无符号整数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-674">Returns the smaller of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-675"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-675">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-676">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-676">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint64 * uint64 -&gt; uint64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="f7efb-677">要比较的两个 64 位无符号整数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-677">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="f7efb-678">要比较的两个 64 位无符号整数中的第二个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-678">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-679">返回两个 64 位无符号整数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-679">Returns the smaller of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-680"><paramref name="val1" /> 或 <paramref name="val2" /> 参数中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-680">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-681">下面的示例演示如何使用 <xref:System.Math.Min%2A> 方法返回并显示两个变量中较小的一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-681">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinMagnitude">
      <MemberSignature Language="C#" Value="public static double MinMagnitude (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 MinMagnitude(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.MinMagnitude(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinMagnitude (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MinMagnitude(double x, double y);" />
      <MemberSignature Language="F#" Value="static member MinMagnitude : double * double -&gt; double" Usage="System.Math.MinMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-682">要比较的两个双精度浮点数中的第一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-682">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="f7efb-683">要比较的两个双精度浮点数中的第二个</span><span class="sxs-lookup"><span data-stu-id="f7efb-683">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="f7efb-684">返回两个双精度浮点数字中的较小值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-684">Returns the smaller magnitude of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="f7efb-685">参数 <paramref name="x" /> 或 <paramref name="y" />，取较小的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-685">Parameter <paramref name="x" /> or <paramref name="y" />, whichever has the smaller magnitude.</span></span> <span data-ttu-id="f7efb-686">如果 <paramref name="x" /> 或 <paramref name="y" /> 或者 <paramref name="x" /> 和 <paramref name="y" /> 都等于 <see cref="F:System.Double.NaN" />，则返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-686">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberSignature Language="F#" Value="val mutable PI : double" Usage="System.Math.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f7efb-687">表示圆的周长与其直径的比值，由常数 π 指定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-687">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-688">此字段的值为3.1415926535897931。</span><span class="sxs-lookup"><span data-stu-id="f7efb-688">The value of this field is 3.1415926535897931.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-689">下面的示例使用 <xref:System.Math.PI> 来帮助计算给定梯形的内角。</span><span class="sxs-lookup"><span data-stu-id="f7efb-689">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberSignature Language="F#" Value="static member Pow : double * double -&gt; double" Usage="System.Math.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-690">要乘幂的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-690">A double-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="f7efb-691">指定幂的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-691">A double-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="f7efb-692">返回指定数字的指定次幂。</span><span class="sxs-lookup"><span data-stu-id="f7efb-692">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="f7efb-693">数字 <paramref name="x" /> 的 <paramref name="y" /> 次幂。</span><span class="sxs-lookup"><span data-stu-id="f7efb-693">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-694">下表指示为 `x` 和 `y` 参数指定了各种值或值范围时的返回值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-694">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="f7efb-695">有关详细信息，请参阅<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>、<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>和<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-695">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="f7efb-696">参数</span><span class="sxs-lookup"><span data-stu-id="f7efb-696">Parameters</span></span>|<span data-ttu-id="f7efb-697">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-697">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="f7efb-698"> = `NaN``x` 或 `y`。</span><span class="sxs-lookup"><span data-stu-id="f7efb-698">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="f7efb-699">`x` = 除 `NaN`以外的任何值;`y` = 0。</span><span class="sxs-lookup"><span data-stu-id="f7efb-699">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="f7efb-700">1</span><span class="sxs-lookup"><span data-stu-id="f7efb-700">1</span></span>|  
|<span data-ttu-id="f7efb-701">`x` = `NegativeInfinity`;`y` < 0。</span><span class="sxs-lookup"><span data-stu-id="f7efb-701">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="f7efb-702">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-702">0</span></span>|  
|<span data-ttu-id="f7efb-703">`x` = `NegativeInfinity`;`y` 为正奇数整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-703">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="f7efb-704">`x` = `NegativeInfinity`;`y` 为正值，但不是奇数整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-704">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="f7efb-705">`x` < 0 但不 `NegativeInfinity`;`y` 不是整数、`NegativeInfinity`或 `PositiveInfinity`。</span><span class="sxs-lookup"><span data-stu-id="f7efb-705">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="f7efb-706">`x` =-1;`y` = `NegativeInfinity` 或 `PositiveInfinity`。</span><span class="sxs-lookup"><span data-stu-id="f7efb-706">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="f7efb-707">-1 < `x` < 1;`y` = `NegativeInfinity`。</span><span class="sxs-lookup"><span data-stu-id="f7efb-707">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="f7efb-708">-1 < `x` < 1;`y` = `PositiveInfinity`。</span><span class="sxs-lookup"><span data-stu-id="f7efb-708">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="f7efb-709">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-709">0</span></span>|  
|<span data-ttu-id="f7efb-710">`x` < 或 `x` > 1;`y` = `NegativeInfinity`。</span><span class="sxs-lookup"><span data-stu-id="f7efb-710">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="f7efb-711">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-711">0</span></span>|  
|<span data-ttu-id="f7efb-712">`x` < 或 `x` > 1;`y` = `PositiveInfinity`。</span><span class="sxs-lookup"><span data-stu-id="f7efb-712">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="f7efb-713">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="f7efb-713">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="f7efb-714">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="f7efb-714">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="f7efb-715">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-715">0</span></span>|  
|<span data-ttu-id="f7efb-716">`x` = 1;`y` 为除 `NaN`以外的任何值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-716">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="f7efb-717">1</span><span class="sxs-lookup"><span data-stu-id="f7efb-717">1</span></span>|  
|<span data-ttu-id="f7efb-718">`x` = `PositiveInfinity`;`y` < 0。</span><span class="sxs-lookup"><span data-stu-id="f7efb-718">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="f7efb-719">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-719">0</span></span>|  
|<span data-ttu-id="f7efb-720">`x` = `PositiveInfinity`;`y` > 0。</span><span class="sxs-lookup"><span data-stu-id="f7efb-720">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-721">下面的示例使用 <xref:System.Math.Pow%2A> 方法计算从0到32的幂计算得出的2的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-721">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-722">将值舍入到最接近的整数或指定的小数位数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-722">Rounds a value to the nearest integer or to the specified number of fractional digits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
<a name="remarks-round"></a> 
## Remarks 

<span data-ttu-id="f7efb-723">本节内容：</span><span class="sxs-lookup"><span data-stu-id="f7efb-723">In this section:</span></span>

- [<span data-ttu-id="f7efb-724">我要调用哪种方法？</span><span class="sxs-lookup"><span data-stu-id="f7efb-724">Which method do I call?</span></span>](#which-method-do-i-call)
- [<span data-ttu-id="f7efb-725">中点值和舍入约定</span><span class="sxs-lookup"><span data-stu-id="f7efb-725">Midpoint values and rounding conventions</span></span>](#midpoint-values-and-rounding-conventions)   
- [<span data-ttu-id="f7efb-726">舍入和精度</span><span class="sxs-lookup"><span data-stu-id="f7efb-726">Rounding and precision</span></span>](#rounding-and-precision) 
- [<span data-ttu-id="f7efb-727">舍入和单精度浮点值</span><span class="sxs-lookup"><span data-stu-id="f7efb-727">Rounding and single-precision floating point values</span></span>](#rounding-and-single-precision-floating-point-values)
- [<span data-ttu-id="f7efb-728">各个重载的示例</span><span class="sxs-lookup"><span data-stu-id="f7efb-728">Examples of individual overloads</span></span>](#round-examples)

### <a name="which-method-do-i-call"></a><span data-ttu-id="f7efb-729">我要调用哪种方法？</span><span class="sxs-lookup"><span data-stu-id="f7efb-729">Which method do I call?</span></span>

<span data-ttu-id="f7efb-730">您可以使用下表来选择适当的舍入方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-730">You can use the following table to select an appropriate rounding method.</span></span> <span data-ttu-id="f7efb-731">除了 `Math.Round` 方法以外，它还包括 <xref:System.Math.Ceiling%2A?displayProperty=nameWithType> 和 <xref:System.Math.Floor%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-731">In addition to the `Math.Round` methods, it also includes <xref:System.Math.Ceiling%2A?displayProperty=nameWithType> and <xref:System.Math.Floor%2A?displayProperty=nameWithType>.</span></span>

|<span data-ttu-id="f7efb-732">功能</span><span class="sxs-lookup"><span data-stu-id="f7efb-732">To</span></span>|<span data-ttu-id="f7efb-733">Call</span><span class="sxs-lookup"><span data-stu-id="f7efb-733">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="f7efb-734">使用舍入到最接近的约定，将数字舍入到整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-734">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="f7efb-735">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-735">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="f7efb-736">使用指定的舍入约定将数字舍入到整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-736">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="f7efb-737">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-737">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="f7efb-738">使用舍入到最接近的约定，将数字舍入到指定的小数位数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-738">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="f7efb-739">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-739">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="f7efb-740">使用指定的舍入约定将数字舍入到指定的小数位数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-740">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="f7efb-741">或</span><span class="sxs-lookup"><span data-stu-id="f7efb-741">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="f7efb-742">使用指定的舍入约定将 <xref:System.Single> 值舍入到指定的小数位数，并将精度降低到最小。</span><span class="sxs-lookup"><span data-stu-id="f7efb-742">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="f7efb-743">将 <xref:System.Single> 转换为 <xref:System.Decimal> 并调用 <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-743">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="f7efb-744">将数字舍入到指定的小数位数，同时最大程度地减少舍入点值中的精度问题。</span><span class="sxs-lookup"><span data-stu-id="f7efb-744">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="f7efb-745">调用实现 "大于或等于" 比较的舍入方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-745">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="f7efb-746">请参见[舍入和精度](#precision)。</span><span class="sxs-lookup"><span data-stu-id="f7efb-746">See [Rounding and precision](#precision).</span></span>|  
|<span data-ttu-id="f7efb-747">将小数值舍入到大于小数值的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-747">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="f7efb-748">例如，3.1 舍入为4。</span><span class="sxs-lookup"><span data-stu-id="f7efb-748">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="f7efb-749">将小数值舍入为小于小数值的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-749">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="f7efb-750">例如，3.9 舍入为3。</span><span class="sxs-lookup"><span data-stu-id="f7efb-750">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  

### <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="f7efb-751">中点值和舍入约定</span><span class="sxs-lookup"><span data-stu-id="f7efb-751">Midpoint values and rounding conventions</span></span> 

<span data-ttu-id="f7efb-752">舍入涉及到使用精度较低的值将数值转换为最接近的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-752">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="f7efb-753">例如，可以使用 <xref:System.Math.Round%28System.Double%29> 方法将3.4 的值舍入到3.0，并使用 <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> 方法将3.579 值舍入到3.58。</span><span class="sxs-lookup"><span data-stu-id="f7efb-753">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
<span data-ttu-id="f7efb-754">在中点值中，结果中的最小有效位后的值在两个数字之间精确到了一半。</span><span class="sxs-lookup"><span data-stu-id="f7efb-754">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="f7efb-755">例如，如果要将两个小数位舍入，3.47500 是中值，如果要将它舍入到整数，则7.500 为中点值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-755">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="f7efb-756">在这些情况下，如果没有舍入约定，则无法轻松地识别最接近的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-756">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
<span data-ttu-id="f7efb-757"><xref:System.Math.Round%2A> 方法支持两个用于处理中点值的舍入约定：</span><span class="sxs-lookup"><span data-stu-id="f7efb-757">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
- <span data-ttu-id="f7efb-758">**远离零的舍入**</span><span class="sxs-lookup"><span data-stu-id="f7efb-758">**Rounding away from zero**</span></span>  

   <span data-ttu-id="f7efb-759">中值舍入到下一个数字，而不是零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-759">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="f7efb-760">例如，3.75 舍入为3.8，3.85 舍入到3.9，-3.75 舍入到-3.8，-3.85 舍入到-3.9。</span><span class="sxs-lookup"><span data-stu-id="f7efb-760">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="f7efb-761">这种形式的舍入由 <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> 枚举成员表示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-761">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
   <span data-ttu-id="f7efb-762">远离零的舍入是最广泛的舍入形式。</span><span class="sxs-lookup"><span data-stu-id="f7efb-762">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
- <span data-ttu-id="f7efb-763">**舍入为最接近或按下舍入**</span><span class="sxs-lookup"><span data-stu-id="f7efb-763">**Rounding to nearest, or banker's rounding**</span></span>  

   <span data-ttu-id="f7efb-764">中值舍入为最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-764">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="f7efb-765">例如，3.75 和3.85 舍入为3.8，-3.75 和-3.85 舍入到-3.8。</span><span class="sxs-lookup"><span data-stu-id="f7efb-765">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="f7efb-766">这种形式的舍入由 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> 枚举成员表示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-766">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
  <span data-ttu-id="f7efb-767">舍入到最接近的是在财务和统计操作中使用的标准舍入形式。</span><span class="sxs-lookup"><span data-stu-id="f7efb-767">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="f7efb-768">它符合 IEEE Standard 754，第4部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-768">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="f7efb-769">当在多个舍入操作中使用时，它可减少因按单一方向持续舍入点值而导致的舍入误差。</span><span class="sxs-lookup"><span data-stu-id="f7efb-769">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="f7efb-770">在某些情况下，此舍入误差很重要。</span><span class="sxs-lookup"><span data-stu-id="f7efb-770">In some cases, this rounding error can be significant.</span></span>  
  
  <span data-ttu-id="f7efb-771">下面的示例演示了一个方向上按一致舍入的点值导致的偏差。</span><span class="sxs-lookup"><span data-stu-id="f7efb-771">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="f7efb-772">该示例计算 <xref:System.Decimal> 值数组的 true 平均值，然后使用两种约定来计算数组中的值的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-772">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="f7efb-773">在此示例中，如果舍入到最接近的是相同的，则为真正的平均值和结果。</span><span class="sxs-lookup"><span data-stu-id="f7efb-773">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="f7efb-774">但是，当从零进行舍入时得出的结果将因 .05 （或3.6%）而异从真正的平均值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-774">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
  [!code-csharp-interactive[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
  [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
<span data-ttu-id="f7efb-775">默认情况下，<xref:System.Math.Round%2A> 方法使用舍入到最接近的约定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-775">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="f7efb-776">下表列出了 <xref:System.Math.Round%2A> 方法的重载和每个重载使用的舍入约定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-776">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="f7efb-777">重载</span><span class="sxs-lookup"><span data-stu-id="f7efb-777">Overload</span></span>|<span data-ttu-id="f7efb-778">舍入约定</span><span class="sxs-lookup"><span data-stu-id="f7efb-778">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="f7efb-779">由 `mode` 参数确定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-779">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="f7efb-780">由 `mode` 参数确定</span><span class="sxs-lookup"><span data-stu-id="f7efb-780">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="f7efb-781">由 `mode` 参数确定</span><span class="sxs-lookup"><span data-stu-id="f7efb-781">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="f7efb-782">由 `mode` 参数确定</span><span class="sxs-lookup"><span data-stu-id="f7efb-782">Determined by `mode` parameter</span></span>|  

<a name="precision"></a>
### <a name="rounding-and-precision"></a><span data-ttu-id="f7efb-783">舍入和精度</span><span class="sxs-lookup"><span data-stu-id="f7efb-783">Rounding and precision</span></span>  

<span data-ttu-id="f7efb-784">若要确定舍入运算是否包含中点值，<xref:System.Math.Round%2A> 方法会将原始值乘以 10<sup>n</sup>，其中*n*是返回值中所需的小数位数，然后确定值的剩余小数部分是否大于或等于5。</span><span class="sxs-lookup"><span data-stu-id="f7efb-784">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="f7efb-785">这对于测试相等性稍有不同，如 <xref:System.Double> 参考主题的 "测试相等性" 部分中所述，与浮点值的相等性测试是否存在问题，因为浮点格式的二进制文件存在问题表示形式和精度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-785">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="f7efb-786">这意味着，不会向后舍入的数字的小数部分稍微小于0.5 （因为精度损失）。</span><span class="sxs-lookup"><span data-stu-id="f7efb-786">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="f7efb-787">以下示例演示了该问题。</span><span class="sxs-lookup"><span data-stu-id="f7efb-787">The following example illustrates the problem.</span></span> <span data-ttu-id="f7efb-788">它会重复将 .1 添加到11.0，并将结果舍入到最接近的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-788">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="f7efb-789">无论舍入约定如何，11.5 都应该舍入到12。</span><span class="sxs-lookup"><span data-stu-id="f7efb-789">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="f7efb-790">但是，如示例的输出所示，它不会。</span><span class="sxs-lookup"><span data-stu-id="f7efb-790">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="f7efb-791">该示例使用 "R"[标准数字格式字符串](~/docs/standard/base-types/standard-numeric-format-strings.md)来显示浮点值的完整精度，并显示在重复添加时要舍入的值已丢失精度，并且它的值实际上是11.499999999999998 的。</span><span class="sxs-lookup"><span data-stu-id="f7efb-791">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="f7efb-792">由于499999999999998小于 .5，因此不将值舍入到下一个最大整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-792">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="f7efb-793">如示例中所示，如果仅将常量值11.5 赋给 <xref:System.Double> 变量，则不会出现此问题。</span><span class="sxs-lookup"><span data-stu-id="f7efb-793">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
[!code-csharp[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
[!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
<span data-ttu-id="f7efb-794">在以下情况下，舍入点值中的精度问题最可能出现在其中：</span><span class="sxs-lookup"><span data-stu-id="f7efb-794">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
- <span data-ttu-id="f7efb-795">当小数值不能精确表示为浮点类型的二进制格式时。</span><span class="sxs-lookup"><span data-stu-id="f7efb-795">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
- <span data-ttu-id="f7efb-796">要舍入的值是从一个或多个浮点运算计算得出的。</span><span class="sxs-lookup"><span data-stu-id="f7efb-796">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
- <span data-ttu-id="f7efb-797">要舍入的值是 <xref:System.Single> 而不是 <xref:System.Double> 或 <xref:System.Decimal>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-797">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="f7efb-798">有关详细信息，请参阅下一节[舍入和单精度浮点值](#rounding-and-single-precision-floating-point-values)。</span><span class="sxs-lookup"><span data-stu-id="f7efb-798">For more information, see the next section, [Rounding and single-precision floating-point values](#rounding-and-single-precision-floating-point-values).</span></span>  
  
 <span data-ttu-id="f7efb-799">如果舍入操作缺少精度，则可以执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="f7efb-799">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
- <span data-ttu-id="f7efb-800">如果舍入操作调用了舍入 <xref:System.Double> 值的重载，则可以将 <xref:System.Double> 更改为 <xref:System.Decimal> 值，并改为调用舍入 <xref:System.Decimal> 值的重载。</span><span class="sxs-lookup"><span data-stu-id="f7efb-800">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="f7efb-801">尽管 <xref:System.Decimal> 的数据类型也有问题的表示形式和损失，但这些问题并不太常见。</span><span class="sxs-lookup"><span data-stu-id="f7efb-801">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
- <span data-ttu-id="f7efb-802">定义一种自定义舍入算法，该算法执行 "将近相等" 测试来确定要舍入的值是否接近于中点值可接受。</span><span class="sxs-lookup"><span data-stu-id="f7efb-802">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="f7efb-803">下面的示例定义了一个 `RoundApproximate` 方法，该方法检查小数值是否足以接近于按中舍入的点值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-803">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="f7efb-804">如示例的输出所示，它会更正上一个示例中显示的舍入问题。</span><span class="sxs-lookup"><span data-stu-id="f7efb-804">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
#### <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="f7efb-805">舍入和单精度浮点值</span><span class="sxs-lookup"><span data-stu-id="f7efb-805">Rounding and single-precision floating-point values</span></span>  

<span data-ttu-id="f7efb-806"><xref:System.Math.Round%2A> 方法包含接受 <xref:System.Decimal> 和 <xref:System.Double>类型的参数的重载。</span><span class="sxs-lookup"><span data-stu-id="f7efb-806">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="f7efb-807">没有用于舍入类型 <xref:System.Single>的值的方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-807">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="f7efb-808">如果将 <xref:System.Single> 值传递到 <xref:System.Math.Round%2A> 方法的重载之一，则会将其强制转换（在中C#）或转换（在 Visual Basic 中）到 <xref:System.Double>，并调用包含 <xref:System.Math.Round%2A> 参数的相应 <xref:System.Double> 重载。</span><span class="sxs-lookup"><span data-stu-id="f7efb-808">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="f7efb-809">尽管这是一个扩大转换，但它通常会损失精度，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-809">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="f7efb-810">如果将 <xref:System.Single> 值16.325 传递到 <xref:System.Math.Round%2A> 方法，并使用舍入到最接近的约定舍入为两位小数位数，则结果为16.33，而不是预期的16.32 结果。</span><span class="sxs-lookup"><span data-stu-id="f7efb-810">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
[!code-csharp[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
[!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
<span data-ttu-id="f7efb-811">这种意外的结果是因为 <xref:System.Single> 值转换为 <xref:System.Double>的精度丢失。</span><span class="sxs-lookup"><span data-stu-id="f7efb-811">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="f7efb-812">由于16.325000762939453 的结果 <xref:System.Double> 值不是中点值并且大于16.325，因此始终向上舍入。</span><span class="sxs-lookup"><span data-stu-id="f7efb-812">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
<span data-ttu-id="f7efb-813">在许多情况下，如示例中所示，通过将 <xref:System.Single> 值强制转换或转换为 <xref:System.Decimal>，可以最大程度地减少或消除精度损失。</span><span class="sxs-lookup"><span data-stu-id="f7efb-813">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="f7efb-814">请注意，因为这是收缩转换，所以需要使用强制转换运算符或调用转换方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-814">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  

<a name="round-examples"></a>  
## Examples 

<span data-ttu-id="f7efb-815">除了 "[备注](#remarks-round)" 部分中的示例之外，本文还提供了演示 `Math.Round` 方法的以下重载的示例：</span><span class="sxs-lookup"><span data-stu-id="f7efb-815">In addition to the examples in the [Remarks](#remarks-round) section, this article includes examples that illustrate the following overloads of the `Math.Round` method:</span></span>

[<span data-ttu-id="f7efb-816">数学圆形（十进制）</span><span class="sxs-lookup"><span data-stu-id="f7efb-816">Math.Round(Decimal)</span></span>](#Round1_Example)  
[<span data-ttu-id="f7efb-817">数学圆形（双精度型）</span><span class="sxs-lookup"><span data-stu-id="f7efb-817">Math.Round(Double)</span></span>](#Round2_Example)  
[<span data-ttu-id="f7efb-818">数学. 舍入（Decimal，Int32）</span><span class="sxs-lookup"><span data-stu-id="f7efb-818">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
[<span data-ttu-id="f7efb-819">数学圆形（Decimal，Midpointrounding.awayfromzero）</span><span class="sxs-lookup"><span data-stu-id="f7efb-819">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
[<span data-ttu-id="f7efb-820">数学. 舍入（Double，Int32）</span><span class="sxs-lookup"><span data-stu-id="f7efb-820">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
[<span data-ttu-id="f7efb-821">数学圆形（Double，Midpointrounding.awayfromzero）</span><span class="sxs-lookup"><span data-stu-id="f7efb-821">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
[<span data-ttu-id="f7efb-822">数学. 舍入（Decimal，Int32，Midpointrounding.awayfromzero）</span><span class="sxs-lookup"><span data-stu-id="f7efb-822">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
[<span data-ttu-id="f7efb-823">Midpointrounding.awayfromzero （Double，Int32，，）</span><span class="sxs-lookup"><span data-stu-id="f7efb-823">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  

[!INCLUDE[midpoint-rounding](~/includes/csharp-interactive-note.md)]

       ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.Math.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-824">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-824">A decimal number to be rounded.</span></span></param>
        <summary><span data-ttu-id="f7efb-825">将小数值舍入到最接近的整数值，并将中点值舍入到最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-825">Rounds a decimal value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-826">最接近 <paramref name="d" /> 参数的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-826">The integer nearest the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="f7efb-827">如果 <paramref name="d" /> 的小数部分正好处于两个整数中间，其中一个整数为偶数，另一个整数为奇数，则返回偶数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-827">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span> <span data-ttu-id="f7efb-828">请注意，此方法返回 <see cref="T:System.Decimal" />，而不是整数类型。</span><span class="sxs-lookup"><span data-stu-id="f7efb-828">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
  
<span data-ttu-id="f7efb-829">此方法使用 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>的默认舍入约定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-829">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f7efb-830">请参阅[中点值和舍入约定](#midpoint-values-and-rounding-conventions)，了解有关带中点值的舍入的信息。</span><span class="sxs-lookup"><span data-stu-id="f7efb-830">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round1_Example"></a> 
## <a name="example"></a><span data-ttu-id="f7efb-831">示例</span><span class="sxs-lookup"><span data-stu-id="f7efb-831">Example</span></span>

<span data-ttu-id="f7efb-832">下面的示例演示 <xref:System.Math.Round%28System.Decimal%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-832">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="f7efb-833">请注意，4.5 的 <xref:System.Decimal> 值舍入为4而不是5，因为此重载使用默认的 <xref:System.MidpointRounding.ToEven> 约定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-833">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
[!code-csharp-interactive[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
[!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  

       ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f7efb-834">结果超出了 <see cref="T:System.Decimal" /> 的范围。</span><span class="sxs-lookup"><span data-stu-id="f7efb-834">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberSignature Language="F#" Value="static member Round : double -&gt; double" Usage="System.Math.Round a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f7efb-835">要舍入的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-835">A double-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="f7efb-836">将双精度浮点值舍入到最接近的整数值，并将中点值舍入到最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-836">Rounds a double-precision floating-point value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-837">最接近 <paramref name="a" /> 的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-837">The integer nearest <paramref name="a" />.</span></span> <span data-ttu-id="f7efb-838">如果 <paramref name="a" /> 的小数部分正好处于两个整数中间，其中一个整数为偶数，另一个整数为奇数，则返回偶数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-838">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="f7efb-839">请注意，此方法返回 <see cref="T:System.Double" />，而不是整数类型。</span><span class="sxs-lookup"><span data-stu-id="f7efb-839">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f7efb-840">此方法使用 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>的默认舍入约定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-840">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f7efb-841">请参阅[中点值和舍入约定](#midpoint-values-and-rounding-conventions)，了解有关带中点值的舍入的信息。</span><span class="sxs-lookup"><span data-stu-id="f7efb-841">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="f7efb-842">如果 <xref:System.Double.NaN?displayProperty=nameWithType>`a` 参数的值，则该方法返回 <xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-842">If the value of the `a` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f7efb-843">如果 `a` <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>，则该方法将分别返回 <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-843">If `a` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<span data-ttu-id="f7efb-844">从 Visual Basic 15.8 开始，如果将 `Round` 方法返回的值传递到任何[整型转换函数](~/docs/visual-basic/language-reference/functions/conversion-functions.md)，或者 `Round` 返回的双精度值，则将优化双精度转换的性能。自动转换为[选项 "Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) " 设置为 "关闭" 的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-844">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Round` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Round` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="f7efb-845">此优化使代码可以更快运行 -- 对于进行大量到整型类型的转换的代码，可快达两倍。</span><span class="sxs-lookup"><span data-stu-id="f7efb-845">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="f7efb-846">下面的示例演示了此类优化转换：</span><span class="sxs-lookup"><span data-stu-id="f7efb-846">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

<a name="Round2_Example"></a>   
## <a name="example"></a><span data-ttu-id="f7efb-847">示例</span><span class="sxs-lookup"><span data-stu-id="f7efb-847">Example</span></span>  

<span data-ttu-id="f7efb-848">下面的示例演示如何舍入为最接近的整数值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-848">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
[!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
[!code-csharp-interactive[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
[!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  

       ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="f7efb-849">由于将十进制值表示为浮点数或对浮点值执行算术运算可能导致精度损失，因此，在某些情况下，<see cref="M:System.Math.Round(System.Double)" /> 方法可能不会显示为最接近最近的点值整数.</span><span class="sxs-lookup"><span data-stu-id="f7efb-849">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="f7efb-850">在下面的示例中，由于浮点值 .1 没有有限的二进制表示形式，因此对值为11.5 的 <see cref="M:System.Math.Round(System.Double)" /> 方法的第一次调用返回11而不是12。</span><span class="sxs-lookup"><span data-stu-id="f7efb-850">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
<span data-ttu-id="f7efb-851">[！ code-csharp system.string[# 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)][！ code-vb system.exception[# 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="f7efb-851">[!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.Math.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-852">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-852">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="f7efb-853">返回值中的小数位数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-853">The number of decimal places in the return value.</span></span></param>
        <summary><span data-ttu-id="f7efb-854">将小数值舍入到指定数量的小数位，并将中点值舍入到最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-854">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-855">最接近 <paramref name="d" /> 的 <paramref name="decimals" /> 位小数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-855">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="f7efb-856">`decimals` 参数的值的范围为0到28。</span><span class="sxs-lookup"><span data-stu-id="f7efb-856">The value of the `decimals` argument can range from 0 to 28.</span></span>

<span data-ttu-id="f7efb-857">此方法使用 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>的默认舍入约定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-857">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f7efb-858">请参阅[中点值和舍入约定](#midpoint-values-and-rounding-conventions)，了解有关带中点值的舍入的信息。</span><span class="sxs-lookup"><span data-stu-id="f7efb-858">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round3_Example"></a>   
## <a name="example"></a><span data-ttu-id="f7efb-859">示例</span><span class="sxs-lookup"><span data-stu-id="f7efb-859">Example</span></span>  

<span data-ttu-id="f7efb-860">下面的示例将具有两个小数位的十进制值舍入为具有单个小数数字的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-860">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
[!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
      ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f7efb-861"><paramref name="decimals" /> 小于 0 或大于 28。</span><span class="sxs-lookup"><span data-stu-id="f7efb-861"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f7efb-862">结果超出了 <see cref="T:System.Decimal" /> 的范围。</span><span class="sxs-lookup"><span data-stu-id="f7efb-862">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-863">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-863">A decimal number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="f7efb-864">在两个数字之间时如何舍入 <paramref name="d" /> 的规范。</span><span class="sxs-lookup"><span data-stu-id="f7efb-864">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="f7efb-865">将小数值舍入到最接近的整数，并为中点值使用指定的舍入规则。</span><span class="sxs-lookup"><span data-stu-id="f7efb-865">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="f7efb-866">最接近 <paramref name="d" /> 的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-866">The integer nearest <paramref name="d" />.</span></span> <span data-ttu-id="f7efb-867">如果 <paramref name="d" /> 是两个数字的中值，这两个数字一个为偶数，另一个为奇数，则 <paramref name="mode" /> 确定返回两个数字中的哪一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-867">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="f7efb-868">请注意，此方法返回 <see cref="T:System.Decimal" />，而不是整数类型。</span><span class="sxs-lookup"><span data-stu-id="f7efb-868">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f7efb-869">请参阅[中点值和舍入约定](#midpoint-values-and-rounding-conventions)，了解有关带中点值的舍入的信息。</span><span class="sxs-lookup"><span data-stu-id="f7efb-869">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round5_Example"></a>   
## <a name="example"></a><span data-ttu-id="f7efb-870">示例</span><span class="sxs-lookup"><span data-stu-id="f7efb-870">Example</span></span>  

<span data-ttu-id="f7efb-871">下面的示例显示 <xref:System.Math.Round%28System.Decimal%29> 方法返回的值、带有 <xref:System.MidpointRounding.ToEven>`mode` 参数的 <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> 方法，以及 <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> 参数为 `mode` 的 <xref:System.MidpointRounding.AwayFromZero>方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-871">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
[!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7efb-872"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 的一个有效值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-872"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f7efb-873">结果超出了 <see cref="T:System.Decimal" /> 的范围。</span><span class="sxs-lookup"><span data-stu-id="f7efb-873">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : double * int -&gt; double" Usage="System.Math.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-874">要舍入的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-874">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="f7efb-875">返回值中的小数数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-875">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="f7efb-876">将双精度浮点值舍入到指定数量的小数位，并将中点值舍入到最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-876">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-877">最接近 <paramref name="value" /> 的 <paramref name="digits" /> 位小数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-877">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="f7efb-878">`digits` 参数的值的范围为0到15。</span><span class="sxs-lookup"><span data-stu-id="f7efb-878">The value of the `digits` argument can range from 0 to 15.</span></span> <span data-ttu-id="f7efb-879">请注意，15是 <xref:System.Double> 类型支持的整数和小数位数的最大值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-879">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span>

<span data-ttu-id="f7efb-880">此方法使用 <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>的默认舍入约定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-880">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f7efb-881">请参阅[中点值和舍入约定](#midpoint-values-and-rounding-conventions)，了解有关带中点值的舍入的信息。</span><span class="sxs-lookup"><span data-stu-id="f7efb-881">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="f7efb-882">如果 <xref:System.Double.NaN?displayProperty=nameWithType>`value` 参数的值，则该方法返回 <xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-882">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f7efb-883">如果 `value` <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>，则该方法将分别返回 <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-883">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round4_Example"></a>   
## <a name="example"></a><span data-ttu-id="f7efb-884">示例</span><span class="sxs-lookup"><span data-stu-id="f7efb-884">Example</span></span>  

<span data-ttu-id="f7efb-885">下面的示例将具有两个小数位的双精度值舍入为具有一个小数位的双精度值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-885">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
[!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
[!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
[!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f7efb-886"><paramref name="digits" /> 小于 0 或大于 15。</span><span class="sxs-lookup"><span data-stu-id="f7efb-886"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="f7efb-887">由于将十进制值表示为浮点数或对浮点值执行算术运算可能导致精度损失，因此，在某些情况下，<see cref="M:System.Math.Round(System.Double,System.Int32)" /> 方法可能不会显示为最接近最近的点值<paramref name="digits" /> 小数点位置的值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-887">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span></span> <span data-ttu-id="f7efb-888">下面的示例对此进行了说明，其中，2.135 舍入为2.13 而不是2.14。</span><span class="sxs-lookup"><span data-stu-id="f7efb-888">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="f7efb-889">出现这种情况的原因是，在内部方法将 <paramref name="value" /> 乘以 10<sup>位数</sup>，而在这种情况下，乘法运算会损失精度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-889">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
<span data-ttu-id="f7efb-890">[！ code-csharp system.string[# 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)][！ code-vb system.exception[# 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="f7efb-890">[!code-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * MidpointRounding -&gt; double" Usage="System.Math.Round (value, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-891">要舍入的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-891">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="f7efb-892">在两个数字之间时如何舍入 <paramref name="value" /> 的规范。</span><span class="sxs-lookup"><span data-stu-id="f7efb-892">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="f7efb-893">将双精度浮点值舍入到最接近的整数，并为中点值使用指定的舍入约定。</span><span class="sxs-lookup"><span data-stu-id="f7efb-893">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="f7efb-894">最接近 <paramref name="value" /> 的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-894">The integer nearest <paramref name="value" />.</span></span> <span data-ttu-id="f7efb-895">如果 <paramref name="value" /> 是两个整数的中值，这两个整数一个为偶数，另一个为奇数，则 <paramref name="mode" /> 确定返回两个整数中的哪一个。</span><span class="sxs-lookup"><span data-stu-id="f7efb-895">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="f7efb-896">请注意，此方法返回 <see cref="T:System.Double" />，而不是整数类型。</span><span class="sxs-lookup"><span data-stu-id="f7efb-896">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f7efb-897">请参阅[中点值和舍入约定](#midpoint-values-and-rounding-conventions)，了解有关带中点值的舍入的信息。</span><span class="sxs-lookup"><span data-stu-id="f7efb-897">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="f7efb-898">如果 <xref:System.Double.NaN?displayProperty=nameWithType>`value` 参数的值，则该方法返回 <xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-898">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f7efb-899">如果 `value` <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>，则该方法将分别返回 <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-899">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round6_Example"></a>   
## <a name="example"></a><span data-ttu-id="f7efb-900">示例</span><span class="sxs-lookup"><span data-stu-id="f7efb-900">Example</span></span>  
<span data-ttu-id="f7efb-901">下面的示例显示 <xref:System.Math.Round%28System.Double%29> 方法返回的值、带有 <xref:System.MidpointRounding.ToEven>`mode` 参数的 <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> 方法，以及 <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> 参数为 `mode` 的 <xref:System.MidpointRounding.AwayFromZero>方法。</span><span class="sxs-lookup"><span data-stu-id="f7efb-901">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
[!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
[!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7efb-902"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 的一个有效值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-902"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="f7efb-903">由于将十进制值表示为浮点数或对浮点值执行算术运算可能导致精度损失，因此，在某些情况下，<see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> 方法可能不会显示为最接近最近的点值整数.</span><span class="sxs-lookup"><span data-stu-id="f7efb-903">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="f7efb-904">在下面的示例中，由于浮点值 .1 没有有限的二进制表示形式，因此对值为11.5 的 <see cref="M:System.Math.Round(System.Double)" /> 方法的第一次调用返回11而不是12。</span><span class="sxs-lookup"><span data-stu-id="f7efb-904">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
<span data-ttu-id="f7efb-905">[！ code-csharp system.string[# 4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)][！ code-vb system.string[# 4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="f7efb-905">[!code-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="decimals" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-906">要舍入的小数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-906">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="f7efb-907">返回值中的小数位数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-907">The number of decimal places in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="f7efb-908">在两个数字之间时如何舍入 <paramref name="d" /> 的规范。</span><span class="sxs-lookup"><span data-stu-id="f7efb-908">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="f7efb-909">将小数值舍入到指定数量的小数位，并为中点值使用指定的舍入规则。</span><span class="sxs-lookup"><span data-stu-id="f7efb-909">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="f7efb-910">最接近 <paramref name="d" /> 的 <paramref name="decimals" /> 位小数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-910">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span> <span data-ttu-id="f7efb-911">如果 <paramref name="d" /> 比 <paramref name="decimals" /> 少部分数字，<paramref name="d" /> 原样返回。</span><span class="sxs-lookup"><span data-stu-id="f7efb-911">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="f7efb-912">请参阅[中点值和舍入约定](#midpoint-values-and-rounding-conventions)，了解有关带中点值的舍入的信息。</span><span class="sxs-lookup"><span data-stu-id="f7efb-912">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]  

<span data-ttu-id="f7efb-913">`decimals` 参数的值的范围为0到28。</span><span class="sxs-lookup"><span data-stu-id="f7efb-913">The value of the `decimals` argument can range from 0 to 28.</span></span>

<a name="Round7_Example"></a>   
## <a name="example"></a><span data-ttu-id="f7efb-914">示例</span><span class="sxs-lookup"><span data-stu-id="f7efb-914">Example</span></span>  

<span data-ttu-id="f7efb-915">下面的示例演示如何将 <xref:System.Math.Round%2A> 方法与 <xref:System.MidpointRounding> 枚举一起使用。</span><span class="sxs-lookup"><span data-stu-id="f7efb-915">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
[!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
[!code-csharp-interactive[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
[!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f7efb-916"><paramref name="decimals" /> 小于 0 或大于 28。</span><span class="sxs-lookup"><span data-stu-id="f7efb-916"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7efb-917"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 的一个有效值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-917"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="f7efb-918">结果超出了 <see cref="T:System.Decimal" /> 的范围。</span><span class="sxs-lookup"><span data-stu-id="f7efb-918">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * int * MidpointRounding -&gt; double" Usage="System.Math.Round (value, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="digits" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-919">要舍入的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-919">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="f7efb-920">返回值中的小数数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-920">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="f7efb-921">在两个数字之间时如何舍入 <paramref name="value" /> 的规范。</span><span class="sxs-lookup"><span data-stu-id="f7efb-921">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="f7efb-922">将双精度浮点值舍入到指定数量的小数位，并为中点值使用指定的舍入规则。</span><span class="sxs-lookup"><span data-stu-id="f7efb-922">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="f7efb-923">最接近 <paramref name="value" /> 的 <paramref name="digits" /> 位小数的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-923">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="f7efb-924">如果 <paramref name="value" /> 比 <paramref name="digits" /> 少部分数字，<paramref name="value" /> 原样返回。</span><span class="sxs-lookup"><span data-stu-id="f7efb-924">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f7efb-925">`digits` 参数的值的范围为0到15。</span><span class="sxs-lookup"><span data-stu-id="f7efb-925">The value of the `digits` argument can range from 0 to 15.</span></span> <span data-ttu-id="f7efb-926">请注意，15是 <xref:System.Double> 类型支持的整数和小数位数的最大值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-926">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span>

<span data-ttu-id="f7efb-927">请参阅[中点值和舍入约定](#midpoint-values-and-rounding-conventions)，了解有关带中点值的舍入的信息。</span><span class="sxs-lookup"><span data-stu-id="f7efb-927">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="f7efb-928">如果 <xref:System.Double.NaN?displayProperty=nameWithType>`value` 参数的值，则该方法返回 <xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-928">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f7efb-929">如果 `value` <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>，则该方法将分别返回 <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> 或 <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f7efb-929">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round8_Example"></a>   
## <a name="example"></a><span data-ttu-id="f7efb-930">示例</span><span class="sxs-lookup"><span data-stu-id="f7efb-930">Example</span></span>  

<span data-ttu-id="f7efb-931">下面的示例演示如何将 <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> 方法与 <xref:System.MidpointRounding> 枚举一起使用。</span><span class="sxs-lookup"><span data-stu-id="f7efb-931">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
[!code-csharp[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
[!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f7efb-932"><paramref name="digits" /> 小于 0 或大于 15。</span><span class="sxs-lookup"><span data-stu-id="f7efb-932"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7efb-933"><paramref name="mode" /> 不是 <see cref="T:System.MidpointRounding" /> 的一个有效值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-933"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="f7efb-934">由于将十进制值表示为浮点数或对浮点值执行算术运算可能导致精度损失，因此，在某些情况下，<see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> 方法可能不会显示为舍入点值，如<paramref name="mode" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-934">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span></span> <span data-ttu-id="f7efb-935">下面的示例对此进行了说明，其中，2.135 舍入为2.13 而不是2.14。</span><span class="sxs-lookup"><span data-stu-id="f7efb-935">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="f7efb-936">出现这种情况的原因是，在内部方法将 <paramref name="value" /> 乘以 10<sup>位数</sup>，而在这种情况下，乘法运算会损失精度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-936">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  
  
<span data-ttu-id="f7efb-937">[！ code-csharp[system.object # 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)][！ code-vb system.string[# 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="f7efb-937">[!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleB">
      <MemberSignature Language="C#" Value="public static double ScaleB (double x, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ScaleB(float64 x, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.ScaleB(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScaleB (x As Double, n As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ScaleB(double x, int n);" />
      <MemberSignature Language="F#" Value="static member ScaleB : double * int -&gt; double" Usage="System.Math.ScaleB (x, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="n" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="f7efb-938">指定基值的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-938">A single-precision floating-point number that specifies the base value.</span></span></param>
        <param name="n"><span data-ttu-id="f7efb-939">指定幂的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-939">A single-precision floating-point number that specifies the power.</span></span></param>
        <summary><span data-ttu-id="f7efb-940">返回有效计算的 x \* 2^n。</span><span class="sxs-lookup"><span data-stu-id="f7efb-940">Returns x \* 2^n computed efficiently.</span></span></summary>
        <returns><span data-ttu-id="f7efb-941">有效计算的 x \* 2^n。</span><span class="sxs-lookup"><span data-stu-id="f7efb-941">x \* 2^n computed efficiently.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-942">返回指示数字符号的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-942">Returns an integer that indicates the sign of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Sign : decimal -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-943">已签名的十进制数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-943">A signed decimal number.</span></span></param>
        <summary><span data-ttu-id="f7efb-944">返回表示十进制数符号的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-944">Returns an integer that indicates the sign of a decimal number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-945">一个指示 <paramref name="value" /> 的符号的数字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-945">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f7efb-946">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-946">Return value</span></span> 
 </term><description> <span data-ttu-id="f7efb-947">含义</span><span class="sxs-lookup"><span data-stu-id="f7efb-947">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-948">-1</span><span class="sxs-lookup"><span data-stu-id="f7efb-948">-1</span></span> 
 </term><description><span data-ttu-id="f7efb-949"><paramref name="value" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-949"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-950">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-950">0</span></span> 
 </term><description><span data-ttu-id="f7efb-951"><paramref name="value" /> 等于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-951"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-952">1</span><span class="sxs-lookup"><span data-stu-id="f7efb-952">1</span></span> 
 </term><description><span data-ttu-id="f7efb-953"><paramref name="value" /> 大于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-953"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-954">下面的示例演示如何使用 <xref:System.Math.Sign%28System.Decimal%29> 方法来确定 <xref:System.Decimal> 值的符号，并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="f7efb-954">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberSignature Language="F#" Value="static member Sign : double -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-955">有符号的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-955">A signed number.</span></span></param>
        <summary><span data-ttu-id="f7efb-956">返回一个整数，该整数表示双精度浮点数字的符号。</span><span class="sxs-lookup"><span data-stu-id="f7efb-956">Returns an integer that indicates the sign of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-957">一个指示 <paramref name="value" /> 的符号的数字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-957">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f7efb-958">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-958">Return value</span></span> 
 </term><description> <span data-ttu-id="f7efb-959">含义</span><span class="sxs-lookup"><span data-stu-id="f7efb-959">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-960">-1</span><span class="sxs-lookup"><span data-stu-id="f7efb-960">-1</span></span> 
 </term><description><span data-ttu-id="f7efb-961"><paramref name="value" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-961"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-962">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-962">0</span></span> 
 </term><description><span data-ttu-id="f7efb-963"><paramref name="value" /> 等于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-963"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-964">1</span><span class="sxs-lookup"><span data-stu-id="f7efb-964">1</span></span> 
 </term><description><span data-ttu-id="f7efb-965"><paramref name="value" /> 大于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-965"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-966">下面的示例演示如何使用 <xref:System.Math.Sign%28System.Double%29> 方法来确定 <xref:System.Double> 值的符号，并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="f7efb-966">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="f7efb-967"><paramref name="value" /> 等于 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-967"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberSignature Language="F#" Value="static member Sign : int16 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-968">有符号的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-968">A signed number.</span></span></param>
        <summary><span data-ttu-id="f7efb-969">返回表示 16 位带符号整数的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-969">Returns an integer that indicates the sign of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f7efb-970">一个指示 <paramref name="value" /> 的符号的数字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-970">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f7efb-971">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-971">Return value</span></span> 
 </term><description> <span data-ttu-id="f7efb-972">含义</span><span class="sxs-lookup"><span data-stu-id="f7efb-972">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-973">-1</span><span class="sxs-lookup"><span data-stu-id="f7efb-973">-1</span></span> 
 </term><description><span data-ttu-id="f7efb-974"><paramref name="value" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-974"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-975">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-975">0</span></span> 
 </term><description><span data-ttu-id="f7efb-976"><paramref name="value" /> 等于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-976"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-977">1</span><span class="sxs-lookup"><span data-stu-id="f7efb-977">1</span></span> 
 </term><description><span data-ttu-id="f7efb-978"><paramref name="value" /> 大于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-978"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-979">下面的示例演示如何使用 <xref:System.Math.Sign%28System.Int16%29> 方法来确定 <xref:System.Int16> 值的符号，并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="f7efb-979">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberSignature Language="F#" Value="static member Sign : int -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-980">有符号的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-980">A signed number.</span></span></param>
        <summary><span data-ttu-id="f7efb-981">返回表示 32 位带符号整数的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-981">Returns an integer that indicates the sign of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f7efb-982">一个指示 <paramref name="value" /> 的符号的数字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-982">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f7efb-983">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-983">Return value</span></span> 
 </term><description> <span data-ttu-id="f7efb-984">含义</span><span class="sxs-lookup"><span data-stu-id="f7efb-984">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-985">-1</span><span class="sxs-lookup"><span data-stu-id="f7efb-985">-1</span></span> 
 </term><description><span data-ttu-id="f7efb-986"><paramref name="value" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-986"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-987">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-987">0</span></span> 
 </term><description><span data-ttu-id="f7efb-988"><paramref name="value" /> 等于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-988"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-989">1</span><span class="sxs-lookup"><span data-stu-id="f7efb-989">1</span></span> 
 </term><description><span data-ttu-id="f7efb-990"><paramref name="value" /> 大于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-990"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-991">下面的示例演示如何使用 <xref:System.Math.Sign%28System.Int32%29> 方法来确定 <xref:System.Int32> 值的符号，并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="f7efb-991">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberSignature Language="F#" Value="static member Sign : int64 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-992">有符号的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-992">A signed number.</span></span></param>
        <summary><span data-ttu-id="f7efb-993">返回一个整数，该整数指示 64 位带符号整数的符号。</span><span class="sxs-lookup"><span data-stu-id="f7efb-993">Returns an integer that indicates the sign of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f7efb-994">一个指示 <paramref name="value" /> 的符号的数字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-994">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f7efb-995">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-995">Return value</span></span> 
 </term><description> <span data-ttu-id="f7efb-996">含义</span><span class="sxs-lookup"><span data-stu-id="f7efb-996">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-997">-1</span><span class="sxs-lookup"><span data-stu-id="f7efb-997">-1</span></span> 
 </term><description><span data-ttu-id="f7efb-998"><paramref name="value" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-998"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-999">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-999">0</span></span> 
 </term><description><span data-ttu-id="f7efb-1000"><paramref name="value" /> 等于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1000"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-1001">1</span><span class="sxs-lookup"><span data-stu-id="f7efb-1001">1</span></span> 
 </term><description><span data-ttu-id="f7efb-1002"><paramref name="value" /> 大于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1002"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-1003">下面的示例演示如何使用 <xref:System.Math.Sign%28System.Int64%29> 方法来确定 <xref:System.Int64> 值的符号，并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1003">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Sign : sbyte -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-1004">有符号的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1004">A signed number.</span></span></param>
        <summary><span data-ttu-id="f7efb-1005">返回一个整数，该整数指示 8 位带符号整数的符号。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1005">Returns an integer that indicates the sign of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="f7efb-1006">一个指示 <paramref name="value" /> 的符号的数字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1006">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f7efb-1007">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-1007">Return value</span></span> 
 </term><description> <span data-ttu-id="f7efb-1008">含义</span><span class="sxs-lookup"><span data-stu-id="f7efb-1008">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-1009">-1</span><span class="sxs-lookup"><span data-stu-id="f7efb-1009">-1</span></span> 
 </term><description><span data-ttu-id="f7efb-1010"><paramref name="value" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1010"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-1011">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-1011">0</span></span> 
 </term><description><span data-ttu-id="f7efb-1012"><paramref name="value" /> 等于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1012"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-1013">1</span><span class="sxs-lookup"><span data-stu-id="f7efb-1013">1</span></span> 
 </term><description><span data-ttu-id="f7efb-1014"><paramref name="value" /> 大于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1014"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-1015">下面的示例演示如何使用 <xref:System.Math.Sign%28System.SByte%29> 方法来确定 <xref:System.SByte> 值的符号，并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1015">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-1016">有符号的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1016">A signed number.</span></span></param>
        <summary><span data-ttu-id="f7efb-1017">返回一个整数，该整数表示单精度浮点数字的符号。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1017">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-1018">一个指示 <paramref name="value" /> 的符号的数字，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1018">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f7efb-1019">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-1019">Return value</span></span> 
 </term><description> <span data-ttu-id="f7efb-1020">含义</span><span class="sxs-lookup"><span data-stu-id="f7efb-1020">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-1021">-1</span><span class="sxs-lookup"><span data-stu-id="f7efb-1021">-1</span></span> 
 </term><description><span data-ttu-id="f7efb-1022"><paramref name="value" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1022"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-1023">0</span><span class="sxs-lookup"><span data-stu-id="f7efb-1023">0</span></span> 
 </term><description><span data-ttu-id="f7efb-1024"><paramref name="value" /> 等于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1024"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-1025">1</span><span class="sxs-lookup"><span data-stu-id="f7efb-1025">1</span></span> 
 </term><description><span data-ttu-id="f7efb-1026"><paramref name="value" /> 大于零。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1026"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-1027">下面的示例演示如何使用 <xref:System.Math.Sign%28System.Single%29> 方法来确定 <xref:System.Single> 值的符号，并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1027">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="f7efb-1028"><paramref name="value" /> 等于 <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1028"><paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberSignature Language="F#" Value="static member Sin : double -&gt; double" Usage="System.Math.Sin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f7efb-1029">以弧度计量的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1029">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f7efb-1030">返回指定角度的正弦值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1030">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f7efb-1031"><paramref name="a" /> 的正弦值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1031">The sine of <paramref name="a" />.</span></span> <span data-ttu-id="f7efb-1032">如果 <paramref name="a" /> 等于 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，此方法将返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1032">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-1033">角度（`a`）必须以弧度为单位。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1033">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="f7efb-1034">乘以 <xref:System.Math.PI?displayProperty=nameWithType>/180 将度转换为弧度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1034">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="f7efb-1035">`a` 可接受的值范围是从大约-9223372036854775295 到约9223372036854775295。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1035">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="f7efb-1036">对于超出此范围的值，<xref:System.Math.Sin%2A> 方法 `a` 返回未更改的值，而不是引发异常。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1036">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-1037">下面的示例使用 <xref:System.Math.Sin%2A> 来计算所选角度的某些三角标识。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1037">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberSignature Language="F#" Value="static member Sinh : double -&gt; double" Usage="System.Math.Sinh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-1038">以弧度计量的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1038">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f7efb-1039">返回指定角度的双曲正弦值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1039">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f7efb-1040"><paramref name="value" /> 的双曲正弦值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1040">The hyperbolic sine of <paramref name="value" />.</span></span> <span data-ttu-id="f7efb-1041">如果 <paramref name="value" /> 等于 <see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> 或 <see cref="F:System.Double.NaN" />，则此方法返回等于 <see cref="T:System.Double" /> 的 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1041">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-1042">角度（`value`）必须以弧度为单位。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1042">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="f7efb-1043">乘以 <xref:System.Math.PI?displayProperty=nameWithType>/180 将度转换为弧度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1043">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-1044">下面的示例使用 <xref:System.Math.Sinh%2A> 来计算所选值的特定双曲标识。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1044">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberSignature Language="F#" Value="static member Sqrt : double -&gt; double" Usage="System.Math.Sqrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-1045">将查找其平方根的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1045">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="f7efb-1046">返回指定数字的平方根。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1046">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-1047">下表中的值之一。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1047">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="f7efb-1048"><paramref name="d" /> 参数</span><span class="sxs-lookup"><span data-stu-id="f7efb-1048"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="f7efb-1049">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-1049">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f7efb-1050">零或正数</span><span class="sxs-lookup"><span data-stu-id="f7efb-1050">Zero or positive</span></span> 
 </term><description> <span data-ttu-id="f7efb-1051"><paramref name="d" /> 的正平方根。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1051">The positive square root of <paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f7efb-1052">负数</span><span class="sxs-lookup"><span data-stu-id="f7efb-1052">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f7efb-1053">等于 <see cref="F:System.Double.NaN" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-1053">Equals <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="f7efb-1054">等于 <see cref="F:System.Double.PositiveInfinity" /></span><span class="sxs-lookup"><span data-stu-id="f7efb-1054">Equals <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7efb-1055">正方形面积的平方根表示正方形任意一侧的长度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1055">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="f7efb-1056">下面的示例显示了美国中某些城市的面积，并为每个城市的尺寸提供了一个正方形。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1056">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberSignature Language="F#" Value="static member Tan : double -&gt; double" Usage="System.Math.Tan a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="f7efb-1057">以弧度计量的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1057">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f7efb-1058">返回指定角度的正切值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1058">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f7efb-1059"><paramref name="a" /> 的正切值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1059">The tangent of <paramref name="a" />.</span></span> <span data-ttu-id="f7efb-1060">如果 <paramref name="a" /> 等于 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，此方法将返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1060">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-1061">角度（`a`）必须以弧度为单位。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1061">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="f7efb-1062">乘以 <xref:System.Math.PI?displayProperty=nameWithType>/180 将度转换为弧度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1062">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-1063">下面的示例演示如何计算角度的正切值并将其显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1063">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberSignature Language="F#" Value="static member Tanh : double -&gt; double" Usage="System.Math.Tanh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f7efb-1064">以弧度计量的角度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1064">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="f7efb-1065">返回指定角度的双曲正切值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1065">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="f7efb-1066"><paramref name="value" /> 的双曲正切值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1066">The hyperbolic tangent of <paramref name="value" />.</span></span> <span data-ttu-id="f7efb-1067">如果 <paramref name="value" /> 等于 <see cref="F:System.Double.NegativeInfinity" />，则此方法返回 -1。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1067">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="f7efb-1068">如果值等于 <see cref="F:System.Double.PositiveInfinity" />，则此方法返回 1。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1068">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="f7efb-1069">如果 <paramref name="value" /> 等于 <see cref="F:System.Double.NaN" />，则此方法返回 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1069">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-1070">角度（`value`）必须以弧度为单位。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1070">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="f7efb-1071">乘以 <xref:System.Math.PI?displayProperty=nameWithType>/180 将度转换为弧度。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1071">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-1072">下面的示例使用 <xref:System.Math.Tanh%2A> 来计算选定值的特定双曲正切值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1072">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7efb-1073">计算一个数字的整数部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1073">Calculates the integral part of a number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-1074">该数字舍入为最接近零的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1074">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-1075">要截断的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1075">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="f7efb-1076">计算一个数字的整数部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1076">Calculates the integral part of a specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-1077"><paramref name="d" /> 的整数部分（即舍弃小数位后剩余的数）。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1077">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7efb-1078"><xref:System.Math.Truncate%2A> 将 `d` 舍入到最接近零的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1078"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7efb-1079">下面的示例调用 <xref:System.Math.Truncate%28System.Decimal%29> 方法来截断正值和负值 <xref:System.Decimal> 值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1079">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberSignature Language="F#" Value="static member Truncate : double -&gt; double" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f7efb-1080">要截断的数字。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1080">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="f7efb-1081">计算指定双精度浮点数的整数部分。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1081">Calculates the integral part of a specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="f7efb-1082"><paramref name="d" /> 的整数部分（即舍弃小数位后剩余的数或下表所列出的值之一）。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1082">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <list type="table"><listheader><term><paramref name="d" /></term><description> <span data-ttu-id="f7efb-1083">返回值</span><span class="sxs-lookup"><span data-stu-id="f7efb-1083">Return value</span></span> 
 </description></listheader><item><term><see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term><see cref="F:System.Double.NegativeInfinity" /></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term><see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="f7efb-1084"><xref:System.Math.Truncate%2A> 将 `d` 舍入到最接近零的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1084"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
<span data-ttu-id="f7efb-1085">从 Visual Basic 15.8 开始，如果将 `Truncate` 方法返回的值传递到任何[整型转换函数](~/docs/visual-basic/language-reference/functions/conversion-functions.md)，或者 `Truncate` 返回的双精度值，则将优化双精度转换的性能。自动转换为[选项 "Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) " 设置为 "关闭" 的整数。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1085">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Truncate` method to the any of the [integral conversion functions](~/docs/visual-basic/language-reference/functions/conversion-functions.md), or if the Double value returned by `Truncate` is automatically converted to an integer with [Option Strict](~/docs/visual-basic/language-reference/statements/option-strict-statement.md) set to Off.</span></span> <span data-ttu-id="f7efb-1086">此优化使代码可以更快运行 -- 对于进行大量到整型类型的转换的代码，可快达两倍。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1086">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="f7efb-1087">下面的示例演示了此类经过优化的转换：</span><span class="sxs-lookup"><span data-stu-id="f7efb-1087">The following example illustrates such an optimized conversion:</span></span>
   
```vb
Dim d As Double = 164.7194
Dim i As Integer = CInt(Math.Truncate(d))     ' Result: 164
```

## Examples  
 <span data-ttu-id="f7efb-1088">下面的示例调用 <xref:System.Math.Truncate%28System.Double%29> 方法来截断正值和负值 <xref:System.Double> 值。</span><span class="sxs-lookup"><span data-stu-id="f7efb-1088">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>
