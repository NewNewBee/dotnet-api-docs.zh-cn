<Type Name="HttpClientBuilderExtensions" FullName="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0b12dd0b83ad39211497b216f71aba245d645c9" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75155548" /></Metadata><TypeSignature Language="C#" Value="public static class HttpClientBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HttpClientBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module HttpClientBuilderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientBuilderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type HttpClientBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="039e0-101">用于配置 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> 的扩展方法</span><span class="sxs-lookup"><span data-stu-id="039e0-101">Extension methods for configuring an <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /></span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHttpMessageHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;IServiceProvider,System.Net.Http.DelegatingHandler&gt; configureHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`2&lt;class System.IServiceProvider, class System.Net.Http.DelegatingHandler&gt; configureHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.IServiceProvider,System.Net.Http.DelegatingHandler})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpMessageHandler (builder As IHttpClientBuilder, configureHandler As Func(Of IServiceProvider, DelegatingHandler)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;IServiceProvider ^, System::Net::Http::DelegatingHandler ^&gt; ^ configureHandler);" />
      <MemberSignature Language="F#" Value="static member AddHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;IServiceProvider, System.Net.Http.DelegatingHandler&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler (builder, configureHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureHandler" Type="System.Func&lt;System.IServiceProvider,System.Net.Http.DelegatingHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="039e0-102"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-102">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <param name="configureHandler"><span data-ttu-id="039e0-103">用于创建 <see cref="T:System.Net.Http.DelegatingHandler" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="039e0-103">A delegate that is used to create a <see cref="T:System.Net.Http.DelegatingHandler" />.</span></span></param>
        <summary><span data-ttu-id="039e0-104">添加一个委托，该委托将用于为已命名的 <see cref="T:System.Net.Http.HttpClient" /> 创建附加消息处理程序。</span><span class="sxs-lookup"><span data-stu-id="039e0-104">Adds a delegate that will be used to create an additional message handler for a named <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
        <returns><span data-ttu-id="039e0-105">可用于配置客户端的 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-105">An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</span></span></returns>
        <remarks><para>
<span data-ttu-id="039e0-106">每次调用时，<paramref name="configureHandler" /> 委托应返回消息处理程序的新实例。</span><span class="sxs-lookup"><span data-stu-id="039e0-106">The <paramref name="configureHandler" /> delegate should return a new instance of the message handler each time it is invoked.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-107">提供给 <paramref name="configureHandler" /> 的 <see cref="T:System.IServiceProvider" /> 参数将是对共享正在构造的处理程序的生存期的作用域内服务提供程序的引用。</span><span class="sxs-lookup"><span data-stu-id="039e0-107">The <see cref="T:System.IServiceProvider" /> argument provided to <paramref name="configureHandler" /> will be a reference to a scoped service provider that shares the lifetime of the handler being constructed.</span></span>
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpMessageHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;System.Net.Http.DelegatingHandler&gt; configureHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`1&lt;class System.Net.Http.DelegatingHandler&gt; configureHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.DelegatingHandler})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpMessageHandler (builder As IHttpClientBuilder, configureHandler As Func(Of DelegatingHandler)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;System::Net::Http::DelegatingHandler ^&gt; ^ configureHandler);" />
      <MemberSignature Language="F#" Value="static member AddHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;System.Net.Http.DelegatingHandler&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler (builder, configureHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureHandler" Type="System.Func&lt;System.Net.Http.DelegatingHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="039e0-108"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-108">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <param name="configureHandler"><span data-ttu-id="039e0-109">用于创建 <see cref="T:System.Net.Http.DelegatingHandler" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="039e0-109">A delegate that is used to create a <see cref="T:System.Net.Http.DelegatingHandler" />.</span></span></param>
        <summary><span data-ttu-id="039e0-110">添加一个委托，该委托将用于为已命名的 <see cref="T:System.Net.Http.HttpClient" /> 创建附加消息处理程序。</span><span class="sxs-lookup"><span data-stu-id="039e0-110">Adds a delegate that will be used to create an additional message handler for a named <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
        <returns><span data-ttu-id="039e0-111">可用于配置客户端的 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-111">An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</span></span></returns>
        <remarks><span data-ttu-id="039e0-112">每次调用时，<paramref name="configureHandler" /> 委托应返回消息处理程序的新实例。</span><span class="sxs-lookup"><span data-stu-id="039e0-112">The <paramref name="configureHandler" /> delegate should return a new instance of the message handler each time it is invoked.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHttpMessageHandler&lt;THandler&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler&lt;THandler&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) where THandler : System.Net.Http.DelegatingHandler;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddHttpMessageHandler&lt;(class System.Net.Http.DelegatingHandler) THandler&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHttpMessageHandler(Of THandler As DelegatingHandler) (builder As IHttpClientBuilder) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename THandler&gt;&#xA; where THandler : System::Net::Http::DelegatingHandler[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member AddHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Handler :&gt; System.Net.Http.DelegatingHandler)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddHttpMessageHandler builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="THandler">
          <Constraints>
            <BaseTypeName>System.Net.Http.DelegatingHandler</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="THandler"><span data-ttu-id="039e0-113"><see cref="T:System.Net.Http.DelegatingHandler" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="039e0-113">The type of the <see cref="T:System.Net.Http.DelegatingHandler" />.</span></span> <span data-ttu-id="039e0-114">处理程序类型必须注册为暂时性服务。</span><span class="sxs-lookup"><span data-stu-id="039e0-114">The handler type must be registered as a transient service.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="039e0-115"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-115">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <summary><span data-ttu-id="039e0-116">从已命名的 <see cref="T:System.Net.Http.HttpClient" /> 的依赖关系注入容器中添加附加消息处理程序。</span><span class="sxs-lookup"><span data-stu-id="039e0-116">Adds an additional message handler from the dependency injection container for a named <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
        <returns><span data-ttu-id="039e0-117">可用于配置客户端的 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-117">An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</span></span></returns>
        <remarks><para>
<span data-ttu-id="039e0-118">将从共享正在构造的处理程序的生存期的作用域内服务提供程序解析 <typeparamref name="THandler" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-118">The <typeparamref name="THandler" /> will be resolved from a scoped service provider that shares the lifetime of the handler being constructed.</span></span>
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypedClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTypedClient(Of TClient As Class) (builder As IHttpClientBuilder) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddTypedClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member AddTypedClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TClient"><span data-ttu-id="039e0-119">类型化客户端的类型。</span><span class="sxs-lookup"><span data-stu-id="039e0-119">The type of the typed client.</span></span> <span data-ttu-id="039e0-120">指定的类型将在服务集合中注册为暂时性服务。</span><span class="sxs-lookup"><span data-stu-id="039e0-120">They type specified will be registered in the service collection as a transient service.</span></span> <span data-ttu-id="039e0-121">有关创作类型化客户端的详细信息，请参阅 <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-121">See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="039e0-122"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-122">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <summary><span data-ttu-id="039e0-123">配置 <typeparamref name="TClient" /> 类型与已命名的 <see cref="T:System.Net.Http.HttpClient" />（与 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> 关联）之间的绑定。</span><span class="sxs-lookup"><span data-stu-id="039e0-123">Configures a binding between the <typeparamref name="TClient" /> type and the named <see cref="T:System.Net.Http.HttpClient" /> associated with the <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="039e0-124">使用适当的 <see cref="T:System.Net.Http.HttpClient" /> 构造 
            <typeparamref name="TClient" /> 实例时，可以通过将 <typeparamref name="TClient" /> 作为服务类型提供，从 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> （和相关方法）中检索。</span><span class="sxs-lookup"><span data-stu-id="039e0-124">
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" /> can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing <typeparamref name="TClient" /> as the service type.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-125">调用 <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" /> 将注册使用 <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />创建 <typeparamref name="TClient" /> 的类型化客户端绑定。</span><span class="sxs-lookup"><span data-stu-id="039e0-125">Calling <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" /> will register a typed client binding that creates <typeparamref name="TClient" /> using the <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-126">将从用于解析类型化客户端的同一服务提供程序解析类型化客户端的服务依赖项。</span><span class="sxs-lookup"><span data-stu-id="039e0-126">The typed client's service dependencies will be resolved from the same service provider that is used to resolve the typed client.</span></span> <span data-ttu-id="039e0-127">不能从绑定到消息处理程序的范围访问服务，该处理程序是独立管理的。</span><span class="sxs-lookup"><span data-stu-id="039e0-127">It is not possible to access services from the scope bound to the message handler, which is managed independently.</span></span>
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypedClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;System.Net.Http.HttpClient,IServiceProvider,TClient&gt; factory) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`3&lt;class System.Net.Http.HttpClient, class System.IServiceProvider, !!TClient&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,System.IServiceProvider,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTypedClient(Of TClient As Class) (builder As IHttpClientBuilder, factory As Func(Of HttpClient, IServiceProvider, TClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddTypedClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;System::Net::Http::HttpClient ^, IServiceProvider ^, TClient&gt; ^ factory);" />
      <MemberSignature Language="F#" Value="static member AddTypedClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;System.Net.Http.HttpClient, IServiceProvider, 'Client (requires 'Client : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient (builder, factory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="factory" Type="System.Func&lt;System.Net.Http.HttpClient,System.IServiceProvider,TClient&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TClient"><span data-ttu-id="039e0-128">类型化客户端的类型。</span><span class="sxs-lookup"><span data-stu-id="039e0-128">The type of the typed client.</span></span> <span data-ttu-id="039e0-129">指定的类型将在服务集合中注册为暂时性服务。</span><span class="sxs-lookup"><span data-stu-id="039e0-129">They type specified will be registered in the service collection as a transient service.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="039e0-130"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-130">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <param name="factory"><span data-ttu-id="039e0-131">将用于构造类型化客户端的工厂函数。</span><span class="sxs-lookup"><span data-stu-id="039e0-131">A factory function that will be used to construct the typed client.</span></span></param>
        <summary><span data-ttu-id="039e0-132">配置 <typeparamref name="TClient" /> 类型与已命名的 <see cref="T:System.Net.Http.HttpClient" />（与 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> 关联）之间的绑定。</span><span class="sxs-lookup"><span data-stu-id="039e0-132">Configures a binding between the <typeparamref name="TClient" /> type and the named <see cref="T:System.Net.Http.HttpClient" /> associated with the <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="039e0-133">使用适当的 <see cref="T:System.Net.Http.HttpClient" /> 构造 
            <typeparamref name="TClient" /> 实例时，可以通过将 <typeparamref name="TClient" /> 作为服务类型提供，从 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> （和相关方法）中检索。</span><span class="sxs-lookup"><span data-stu-id="039e0-133">
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" /> can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing <typeparamref name="TClient" /> as the service type.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-134">调用 <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,System.IServiceProvider,``0})" /> 将注册使用提供的工厂函数创建 <typeparamref name="TClient" /> 的类型化客户端绑定。</span><span class="sxs-lookup"><span data-stu-id="039e0-134">Calling <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,System.IServiceProvider,``0})" /> will register a typed client binding that creates <typeparamref name="TClient" /> using the provided factory function.</span></span>
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypedClient&lt;TClient&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;TClient&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;System.Net.Http.HttpClient,TClient&gt; factory) where TClient : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;class TClient&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`2&lt;class System.Net.Http.HttpClient, !!TClient&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTypedClient(Of TClient As Class) (builder As IHttpClientBuilder, factory As Func(Of HttpClient, TClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient&gt;&#xA; where TClient : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddTypedClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;System::Net::Http::HttpClient ^, TClient&gt; ^ factory);" />
      <MemberSignature Language="F#" Value="static member AddTypedClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;System.Net.Http.HttpClient, 'Client (requires 'Client : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient (builder, factory)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="factory" Type="System.Func&lt;System.Net.Http.HttpClient,TClient&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TClient"><span data-ttu-id="039e0-135">类型化客户端的类型。</span><span class="sxs-lookup"><span data-stu-id="039e0-135">The type of the typed client.</span></span> <span data-ttu-id="039e0-136">指定的类型将在服务集合中注册为暂时性服务。</span><span class="sxs-lookup"><span data-stu-id="039e0-136">They type specified will be registered in the service collection as a transient service.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="039e0-137"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-137">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <param name="factory"><span data-ttu-id="039e0-138">将用于构造类型化客户端的工厂函数。</span><span class="sxs-lookup"><span data-stu-id="039e0-138">A factory function that will be used to construct the typed client.</span></span></param>
        <summary><span data-ttu-id="039e0-139">配置 <typeparamref name="TClient" /> 类型与已命名的 <see cref="T:System.Net.Http.HttpClient" />（与 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> 关联）之间的绑定。</span><span class="sxs-lookup"><span data-stu-id="039e0-139">Configures a binding between the <typeparamref name="TClient" /> type and the named <see cref="T:System.Net.Http.HttpClient" /> associated with the <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="039e0-140">使用适当的 <see cref="T:System.Net.Http.HttpClient" /> 构造 
            <typeparamref name="TClient" /> 实例时，可以通过将 <typeparamref name="TClient" /> 作为服务类型提供，从 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> （和相关方法）中检索。</span><span class="sxs-lookup"><span data-stu-id="039e0-140">
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" /> can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing <typeparamref name="TClient" /> as the service type.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-141">调用 <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,``0})" /> 将注册使用提供的工厂函数创建 <typeparamref name="TClient" /> 的类型化客户端绑定。</span><span class="sxs-lookup"><span data-stu-id="039e0-141">Calling <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpClient,``0})" /> will register a typed client binding that creates <typeparamref name="TClient" /> using the provided factory function.</span></span>
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypedClient&lt;TClient,TImplementation&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;TClient,TImplementation&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) where TClient : class where TImplementation : class, TClient;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder AddTypedClient&lt;class TClient, class (!!TClient) TImplementation&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``2(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddTypedClient(Of TClient As Class, TImplementation As Class) (builder As IHttpClientBuilder) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TClient, typename TImplementation&gt;&#xA; where TClient : class where TImplementation : class, TClient[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ AddTypedClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member AddTypedClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Client : null)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TClient">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TImplementation">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TClient</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TClient"><span data-ttu-id="039e0-142">类型化客户端的声明类型。</span><span class="sxs-lookup"><span data-stu-id="039e0-142">The declared type of the typed client.</span></span> <span data-ttu-id="039e0-143">指定的类型将在服务集合中注册为暂时性服务。</span><span class="sxs-lookup"><span data-stu-id="039e0-143">They type specified will be registered in the service collection as a transient service.</span></span> <span data-ttu-id="039e0-144">有关创作类型化客户端的详细信息，请参阅 <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-144">See <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" /> for more details about authoring typed clients.</span></span></typeparam>
        <typeparam name="TImplementation"><span data-ttu-id="039e0-145">类型化客户端的实现类型。</span><span class="sxs-lookup"><span data-stu-id="039e0-145">The implementation type of the typed client.</span></span> <span data-ttu-id="039e0-146">指定的类型将由 <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />实例化。</span><span class="sxs-lookup"><span data-stu-id="039e0-146">The type specified by will be instantiated by the <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="039e0-147"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-147">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <summary><span data-ttu-id="039e0-148">配置 <typeparamref name="TClient" /> 类型与已命名的 <see cref="T:System.Net.Http.HttpClient" />（与 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> 关联）之间的绑定。</span><span class="sxs-lookup"><span data-stu-id="039e0-148">Configures a binding between the <typeparamref name="TClient" /> type and the named <see cref="T:System.Net.Http.HttpClient" /> associated with the <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span> <span data-ttu-id="039e0-149">创建的实例的类型为 <typeparamref name="TImplementation" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-149">The created instances will be of type <typeparamref name="TImplementation" />.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para><span data-ttu-id="039e0-150">使用适当的 <see cref="T:System.Net.Http.HttpClient" /> 构造 
            <typeparamref name="TClient" /> 实例时，可以通过将 <typeparamref name="TClient" /> 作为服务类型提供，从 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> （和相关方法）中检索。</span><span class="sxs-lookup"><span data-stu-id="039e0-150">
            <typeparamref name="TClient" /> instances constructed with the appropriate <see cref="T:System.Net.Http.HttpClient" /> can be retrieved from <see cref="M:System.IServiceProvider.GetService(System.Type)" /> (and related methods) by providing <typeparamref name="TClient" /> as the service type.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-151">调用 <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``2(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" /> 将注册使用 <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />创建 <typeparamref name="TImplementation" /> 的类型化客户端绑定。</span><span class="sxs-lookup"><span data-stu-id="039e0-151">Calling <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.AddTypedClient``2(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" /> will register a typed client binding that creates <typeparamref name="TImplementation" /> using the <see cref="T:Microsoft.Extensions.Http.ITypedHttpClientFactory`1" />.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-152">将从用于解析类型化客户端的同一服务提供程序解析类型化客户端的服务依赖项。</span><span class="sxs-lookup"><span data-stu-id="039e0-152">The typed client's service dependencies will be resolved from the same service provider that is used to resolve the typed client.</span></span> <span data-ttu-id="039e0-153">不能从绑定到消息处理程序的范围访问服务，该处理程序是独立管理的。</span><span class="sxs-lookup"><span data-stu-id="039e0-153">It is not possible to access services from the scope bound to the message handler, which is managed independently.</span></span>
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHttpClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpClient (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Action&lt;IServiceProvider,System.Net.Http.HttpClient&gt; configureClient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpClient(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Action`2&lt;class System.IServiceProvider, class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{System.IServiceProvider,System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureHttpClient (builder As IHttpClientBuilder, configureClient As Action(Of IServiceProvider, HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigureHttpClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Action&lt;IServiceProvider ^, System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member ConfigureHttpClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Action&lt;IServiceProvider, System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient (builder, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.IServiceProvider,System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="039e0-154"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-154">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="configureClient"><span data-ttu-id="039e0-155">用于配置 <see cref="T:System.Net.Http.HttpClient" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="039e0-155">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</span></span></param>
        <summary><span data-ttu-id="039e0-156">添加用于配置已命名的 <see cref="T:System.Net.Http.HttpClient" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="039e0-156">Adds a delegate that will be used to configure a named <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
        <returns><span data-ttu-id="039e0-157">可用于配置客户端的 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-157">An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</span></span></returns>
        <remarks><span data-ttu-id="039e0-158">向 <paramref name="configureClient" /> 提供的 <see cref="T:System.IServiceProvider" /> 将是相同应用程序的根服务提供程序实例。</span><span class="sxs-lookup"><span data-stu-id="039e0-158">The <see cref="T:System.IServiceProvider" /> provided to <paramref name="configureClient" /> will be the same application's root service provider instance.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHttpClient">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpClient (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Action&lt;System.Net.Http.HttpClient&gt; configureClient);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpClient(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Action`1&lt;class System.Net.Http.HttpClient&gt; configureClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{System.Net.Http.HttpClient})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureHttpClient (builder As IHttpClientBuilder, configureClient As Action(Of HttpClient)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigureHttpClient(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Action&lt;System::Net::Http::HttpClient ^&gt; ^ configureClient);" />
      <MemberSignature Language="F#" Value="static member ConfigureHttpClient : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Action&lt;System.Net.Http.HttpClient&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpClient (builder, configureClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureClient" Type="System.Action&lt;System.Net.Http.HttpClient&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="039e0-159"><see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-159">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</span></span></param>
        <param name="configureClient"><span data-ttu-id="039e0-160">用于配置 <see cref="T:System.Net.Http.HttpClient" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="039e0-160">A delegate that is used to configure an <see cref="T:System.Net.Http.HttpClient" />.</span></span></param>
        <summary><span data-ttu-id="039e0-161">添加用于配置已命名的 <see cref="T:System.Net.Http.HttpClient" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="039e0-161">Adds a delegate that will be used to configure a named <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
        <returns><span data-ttu-id="039e0-162">可用于配置客户端的 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-162">An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureHttpMessageHandlerBuilder">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpMessageHandlerBuilder (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Action&lt;Microsoft.Extensions.Http.HttpMessageHandlerBuilder&gt; configureBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigureHttpMessageHandlerBuilder(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Action`1&lt;class Microsoft.Extensions.Http.HttpMessageHandlerBuilder&gt; configureBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpMessageHandlerBuilder(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Action{Microsoft.Extensions.Http.HttpMessageHandlerBuilder})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigureHttpMessageHandlerBuilder (builder As IHttpClientBuilder, configureBuilder As Action(Of HttpMessageHandlerBuilder)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigureHttpMessageHandlerBuilder(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Action&lt;Microsoft::Extensions::Http::HttpMessageHandlerBuilder ^&gt; ^ configureBuilder);" />
      <MemberSignature Language="F#" Value="static member ConfigureHttpMessageHandlerBuilder : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Action&lt;Microsoft.Extensions.Http.HttpMessageHandlerBuilder&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigureHttpMessageHandlerBuilder (builder, configureBuilder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureBuilder" Type="System.Action&lt;Microsoft.Extensions.Http.HttpMessageHandlerBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="039e0-163"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-163">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <param name="configureBuilder"><span data-ttu-id="039e0-164">用于配置 <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="039e0-164">A delegate that is used to configure an <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" />.</span></span></param>
        <summary><span data-ttu-id="039e0-165">添加一个委托，该委托将用于使用 <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" /> 为已命名的 <see cref="T:System.Net.Http.HttpClient" /> 配置消息处理程序。</span><span class="sxs-lookup"><span data-stu-id="039e0-165">Adds a delegate that will be used to configure message handlers using <see cref="T:Microsoft.Extensions.Http.HttpMessageHandlerBuilder" /> for a named <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
        <returns><span data-ttu-id="039e0-166">可用于配置客户端的 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-166">An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurePrimaryHttpMessageHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;IServiceProvider,System.Net.Http.HttpMessageHandler&gt; configureHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`2&lt;class System.IServiceProvider, class System.Net.Http.HttpMessageHandler&gt; configureHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.IServiceProvider,System.Net.Http.HttpMessageHandler})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigurePrimaryHttpMessageHandler (builder As IHttpClientBuilder, configureHandler As Func(Of IServiceProvider, HttpMessageHandler)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigurePrimaryHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;IServiceProvider ^, System::Net::Http::HttpMessageHandler ^&gt; ^ configureHandler);" />
      <MemberSignature Language="F#" Value="static member ConfigurePrimaryHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;IServiceProvider, System.Net.Http.HttpMessageHandler&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler (builder, configureHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureHandler" Type="System.Func&lt;System.IServiceProvider,System.Net.Http.HttpMessageHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="039e0-167"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-167">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <param name="configureHandler"><span data-ttu-id="039e0-168">用于创建 <see cref="T:System.Net.Http.HttpMessageHandler" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="039e0-168">A delegate that is used to create an <see cref="T:System.Net.Http.HttpMessageHandler" />.</span></span></param>
        <summary><span data-ttu-id="039e0-169">添加一个委托，该委托将为已命名的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 配置主要 <see cref="T:System.Net.Http.HttpClient" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-169">Adds a delegate that will be used to configure the primary <see cref="T:System.Net.Http.HttpMessageHandler" /> for a named <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
        <returns><span data-ttu-id="039e0-170">可用于配置客户端的 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-170">An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</span></span></returns>
        <remarks><para>
<span data-ttu-id="039e0-171">每次调用时，<paramref name="configureHandler" /> 委托应返回消息处理程序的新实例。</span><span class="sxs-lookup"><span data-stu-id="039e0-171">The <paramref name="configureHandler" /> delegate should return a new instance of the message handler each time it is invoked.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-172">提供给 <paramref name="configureHandler" /> 的 <see cref="T:System.IServiceProvider" /> 参数将是对共享正在构造的处理程序的生存期的作用域内服务提供程序的引用。</span><span class="sxs-lookup"><span data-stu-id="039e0-172">The <see cref="T:System.IServiceProvider" /> argument provided to <paramref name="configureHandler" /> will be a reference to a scoped service provider that shares the lifetime of the handler being constructed.</span></span>
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurePrimaryHttpMessageHandler">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Func&lt;System.Net.Http.HttpMessageHandler&gt; configureHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, class System.Func`1&lt;class System.Net.Http.HttpMessageHandler&gt; configureHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Func{System.Net.Http.HttpMessageHandler})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigurePrimaryHttpMessageHandler (builder As IHttpClientBuilder, configureHandler As Func(Of HttpMessageHandler)) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigurePrimaryHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, Func&lt;System::Net::Http::HttpMessageHandler ^&gt; ^ configureHandler);" />
      <MemberSignature Language="F#" Value="static member ConfigurePrimaryHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * Func&lt;System.Net.Http.HttpMessageHandler&gt; -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler (builder, configureHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="configureHandler" Type="System.Func&lt;System.Net.Http.HttpMessageHandler&gt;" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="039e0-173"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-173">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <param name="configureHandler"><span data-ttu-id="039e0-174">用于创建 <see cref="T:System.Net.Http.HttpMessageHandler" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="039e0-174">A delegate that is used to create an <see cref="T:System.Net.Http.HttpMessageHandler" />.</span></span></param>
        <summary><span data-ttu-id="039e0-175">添加一个委托，该委托将为已命名的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 配置主要 <see cref="T:System.Net.Http.HttpClient" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-175">Adds a delegate that will be used to configure the primary <see cref="T:System.Net.Http.HttpMessageHandler" /> for a named <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
        <returns><span data-ttu-id="039e0-176">可用于配置客户端的 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-176">An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</span></span></returns>
        <remarks><span data-ttu-id="039e0-177">每次调用时，<paramref name="configureHandler" /> 委托应返回消息处理程序的新实例。</span><span class="sxs-lookup"><span data-stu-id="039e0-177">The <paramref name="configureHandler" /> delegate should return a new instance of the message handler each time it is invoked.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurePrimaryHttpMessageHandler&lt;THandler&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler&lt;THandler&gt; (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) where THandler : System.Net.Http.HttpMessageHandler;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder ConfigurePrimaryHttpMessageHandler&lt;(class System.Net.Http.HttpMessageHandler) THandler&gt;(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConfigurePrimaryHttpMessageHandler(Of THandler As HttpMessageHandler) (builder As IHttpClientBuilder) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename THandler&gt;&#xA; where THandler : System::Net::Http::HttpMessageHandler[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ ConfigurePrimaryHttpMessageHandler(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ConfigurePrimaryHttpMessageHandler : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder (requires 'Handler :&gt; System.Net.Http.HttpMessageHandler)" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.ConfigurePrimaryHttpMessageHandler builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="THandler">
          <Constraints>
            <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="THandler"><span data-ttu-id="039e0-178"><see cref="T:System.Net.Http.DelegatingHandler" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="039e0-178">The type of the <see cref="T:System.Net.Http.DelegatingHandler" />.</span></span> <span data-ttu-id="039e0-179">处理程序类型必须注册为暂时性服务。</span><span class="sxs-lookup"><span data-stu-id="039e0-179">The handler type must be registered as a transient service.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="039e0-180"><see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-180">The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />.</span></span></param>
        <summary><span data-ttu-id="039e0-181">从已命名的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 的依赖关系注入容器中配置主要 <see cref="T:System.Net.Http.HttpClient" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-181">Configures the primary <see cref="T:System.Net.Http.HttpMessageHandler" /> from the dependency injection container for a  named <see cref="T:System.Net.Http.HttpClient" />.</span></span></summary>
        <returns><span data-ttu-id="039e0-182">可用于配置客户端的 <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-182">An <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" /> that can be used to configure the client.</span></span></returns>
        <remarks><para>
<span data-ttu-id="039e0-183">将从共享正在构造的处理程序的生存期的作用域内服务提供程序解析 <typeparamref name="THandler" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-183">The <typeparamref name="THandler" /> will be resolved from a scoped service provider that shares the lifetime of the handler being constructed.</span></span>
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHandlerLifetime">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder SetHandlerLifetime (this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, TimeSpan handlerLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder SetHandlerLifetime(class Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, valuetype System.TimeSpan handlerLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.SetHandlerLifetime(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SetHandlerLifetime (builder As IHttpClientBuilder, handlerLifetime As TimeSpan) As IHttpClientBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ SetHandlerLifetime(Microsoft::Extensions::DependencyInjection::IHttpClientBuilder ^ builder, TimeSpan handlerLifetime);" />
      <MemberSignature Language="F#" Value="static member SetHandlerLifetime : Microsoft.Extensions.DependencyInjection.IHttpClientBuilder * TimeSpan -&gt; Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" Usage="Microsoft.Extensions.DependencyInjection.HttpClientBuilderExtensions.SetHandlerLifetime (builder, handlerLifetime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IHttpClientBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.Extensions.DependencyInjection.IHttpClientBuilder" RefType="this" />
        <Parameter Name="handlerLifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="handlerLifetime">To be added.</param>
        <summary><span data-ttu-id="039e0-184">设置可重复使用 <see cref="T:System.Net.Http.HttpMessageHandler" /> 实例的时长。</span><span class="sxs-lookup"><span data-stu-id="039e0-184">Sets the length of time that a <see cref="T:System.Net.Http.HttpMessageHandler" /> instance can be reused.</span></span> <span data-ttu-id="039e0-185">每个已命名的客户端都可自行配置处理程序生存期值。</span><span class="sxs-lookup"><span data-stu-id="039e0-185">Each named client can have its own configured handler lifetime value.</span></span> <span data-ttu-id="039e0-186">默认值为 2 分钟。</span><span class="sxs-lookup"><span data-stu-id="039e0-186">The default value is two minutes.</span></span> <span data-ttu-id="039e0-187">将生存期设置为 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> 可禁用处理程序到期。</span><span class="sxs-lookup"><span data-stu-id="039e0-187">Set the lifetime to <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> to disable handler expiry.</span></span></summary>
        <returns>To be added.</returns>
        <remarks><para>
<span data-ttu-id="039e0-188"><see cref="T:System.Net.Http.IHttpClientFactory" /> 的默认实现将对工厂创建的 <see cref="T:System.Net.Http.HttpMessageHandler" /> 实例进行缓冲，以减少资源消耗。</span><span class="sxs-lookup"><span data-stu-id="039e0-188">The default implementation of <see cref="T:System.Net.Http.IHttpClientFactory" /> will pool the <see cref="T:System.Net.Http.HttpMessageHandler" /> instances created by the factory to reduce resource consumption.</span></span> <span data-ttu-id="039e0-189">此设置配置在计划从池中删除和处置处理程序之前，处理程序可以进行缓冲的时间量。</span><span class="sxs-lookup"><span data-stu-id="039e0-189">This setting configures the amount of time a handler can be pooled before it is scheduled for removal from the pool and disposal.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-190">由于每个处理程序通常都管理自己的基础 HTTP 连接，所以有必要汇集处理程序；创建的处理程序数量如果多于必需的数量，则可能导致连接延迟。</span><span class="sxs-lookup"><span data-stu-id="039e0-190">Pooling of handlers is desirable as each handler typically manages its own underlying HTTP connections; creating more handlers than necessary can result in connection delays.</span></span> <span data-ttu-id="039e0-191">某些处理程序还会使连接无限期打开，这会阻止处理程序对 DNS 更改做出响应。</span><span class="sxs-lookup"><span data-stu-id="039e0-191">Some handlers also keep connections open indefinitely which can prevent the handler from reacting to DNS changes.</span></span> <span data-ttu-id="039e0-192">应选择 <paramref name="handlerLifetime" /> 的值，同时了解应用程序对网络环境中的更改做出响应的要求。</span><span class="sxs-lookup"><span data-stu-id="039e0-192">The value of <paramref name="handlerLifetime" /> should be chosen with an understanding of the application's requirement to respond to changes in the network environment.</span></span>
            </para>
          <para>
<span data-ttu-id="039e0-193">处理程序将不会立即释放处理程序。</span><span class="sxs-lookup"><span data-stu-id="039e0-193">Expiry of a handler will not immediately dispose the handler.</span></span> <span data-ttu-id="039e0-194">过期的处理程序放置在一个单独的池中，该池将按间隔处理，以便仅在其不可访问时处置处理程序。</span><span class="sxs-lookup"><span data-stu-id="039e0-194">An expired handler is placed in a separate pool which is processed at intervals to dispose handlers only when they become unreachable.</span></span> <span data-ttu-id="039e0-195">使用长期 <see cref="T:System.Net.Http.HttpClient" /> 实例将会阻止在所有引用被垃圾回收之前释放基础 <see cref="T:System.Net.Http.HttpMessageHandler" />。</span><span class="sxs-lookup"><span data-stu-id="039e0-195">Using long-lived <see cref="T:System.Net.Http.HttpClient" /> instances will prevent the underlying <see cref="T:System.Net.Http.HttpMessageHandler" /> from being disposed until all references are garbage-collected.</span></span>
            </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
