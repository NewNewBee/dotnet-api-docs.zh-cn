<Type Name="UdpAnySourceMulticastClient" FullName="System.Net.Sockets.UdpAnySourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="504194d8f700293d2b7b54542388c2876b1425ec" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73339103" /></Metadata><TypeSignature Language="C#" Value="public class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpAnySourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpAnySourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpAnySourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpAnySourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a8e45-101">从任意源接收多播流量的客户端接收器，亦称为任意源多播 (ASM) 或 Internet 标准多播 (ISM)。</span><span class="sxs-lookup"><span data-stu-id="a8e45-101">A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpAnySourceMulticastClient(System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpAnySourceMulticastClient : System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpAnySourceMulticastClient" Usage="new System.Net.Sockets.UdpAnySourceMulticastClient (groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupAddress"><span data-ttu-id="a8e45-102">此接收器要订阅的多播组地址。</span><span class="sxs-lookup"><span data-stu-id="a8e45-102">The multicast group address for this receiver to subscribe to.</span></span></param>
        <param name="localPort"><span data-ttu-id="a8e45-103">此接收器要绑定到的本地端口。</span><span class="sxs-lookup"><span data-stu-id="a8e45-103">The local port for this receiver to bind to.</span></span></param>
        <summary><span data-ttu-id="a8e45-104">创建一个可以订阅组地址并从任意源接收数据报的新 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP 客户端。</span><span class="sxs-lookup"><span data-stu-id="a8e45-104">Creates a new <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from any source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-105"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> 构造函数将 UDP 多播套接字与组地址和端口关联，但不绑定或以其他方式使用套接字。</span><span class="sxs-lookup"><span data-stu-id="a8e45-105">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</span></span>  
  
 <span data-ttu-id="a8e45-106">`groupAddress` 参数可以是 IPv6 或 IPv4 多播地址。</span><span class="sxs-lookup"><span data-stu-id="a8e45-106">The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.</span></span>  
  
 <span data-ttu-id="a8e45-107">`localPort` 参数不得指定小于1024的端口。</span><span class="sxs-lookup"><span data-stu-id="a8e45-107">The `localPort` parameter must not specify a port less than 1,024.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8e45-108"><paramref name="groupAddress" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-108"><paramref name="groupAddress" /> is <see langword="null" />.</span></span> <span data-ttu-id="a8e45-109">引用</span><span class="sxs-lookup"><span data-stu-id="a8e45-109">reference</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8e45-110"><paramref name="localPort" /> 小于 0，或 <paramref name="localPort" /> 大于 65,535。</span><span class="sxs-lookup"><span data-stu-id="a8e45-110"><paramref name="localPort" /> is less than 0 -or- <paramref name="localPort" /> is greater than 65,535.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="a8e45-111">要在此操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-111">A callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="a8e45-112">要为此操作传递给 <paramref name="callback" /> 方法的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="a8e45-112">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="a8e45-113">绑定套接字并开始执行多播组的联接操作，以便允许接收来自任何组参与者的数据报。</span><span class="sxs-lookup"><span data-stu-id="a8e45-113">Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.</span></span></summary>
        <returns><span data-ttu-id="a8e45-114">引用此操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-114">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-115"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> 方法将 UDP 多播套接字绑定到本地端口，并联接多播组，以允许从任何多播组参与者接收数据报。</span><span class="sxs-lookup"><span data-stu-id="a8e45-115">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant.</span></span> <span data-ttu-id="a8e45-116">本地端口和多播组地址在 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> 构造函数中指定。</span><span class="sxs-lookup"><span data-stu-id="a8e45-116">The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="a8e45-117">当完成联接多播组的操作时，将调用在 `callback` 参数中指定的方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-117">The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.</span></span>  
  
 <span data-ttu-id="a8e45-118">如果运行时需要，<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> 方法还执行策略检查以验证是否允许客户端访问多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-118">If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="a8e45-119">如果客户端不允许访问，则会引发 <xref:System.Net.Sockets.SocketException>，并 <xref:System.Net.Sockets.SocketError.AccessDenied>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-119">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-120">已经联接多播组，或联接操作正在进行。</span><span class="sxs-lookup"><span data-stu-id="a8e45-120">The multicast group has already been joined or a join operation is currently in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-121">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-121">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-122">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-122">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginReceiveFromGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a8e45-123">用于存储已接收数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a8e45-123">The buffer to store the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="a8e45-124">应存储数据的 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-124">The offset, in bytes, from the beginning of the <paramref name="buffer" /> where the data should be stored.</span></span></param>
        <param name="count"><span data-ttu-id="a8e45-125">要接收并存储在 <paramref name="buffer" /> 中的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a8e45-125">The maximum number of bytes to receive and store in the <paramref name="buffer" />.</span></span></param>
        <param name="callback"><span data-ttu-id="a8e45-126">要在此操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-126">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="a8e45-127">要为此操作传递给 <paramref name="callback" /> 方法的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="a8e45-127">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="a8e45-128">开始执行从已联接的多播组接收数据包的操作，并在来自任何发送方的数据包到达组时调用指定的回调。</span><span class="sxs-lookup"><span data-stu-id="a8e45-128">Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.</span></span></summary>
        <returns><span data-ttu-id="a8e45-129">引用此操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-129">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-130"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> 方法开始从任何发送方的已联接的多播组接收 UDP 数据包的操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-130">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method begins an operation of receiving a UDP packet from the joined multicast group from any sender.</span></span> <span data-ttu-id="a8e45-131">本地端口和多播组地址在 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> 构造函数中指定。</span><span class="sxs-lookup"><span data-stu-id="a8e45-131">The local port and multicast group address are specified in the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.</span></span> <span data-ttu-id="a8e45-132">多播客户端还必须已完成到多播组的联接。</span><span class="sxs-lookup"><span data-stu-id="a8e45-132">The multicast client must also have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="a8e45-133">接收到数据包后，将调用在 `callback` 参数中指定的方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-133">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="a8e45-134">如果接收操作同步失败，则可能会出现套接字故障，但这种情况不太常见。</span><span class="sxs-lookup"><span data-stu-id="a8e45-134">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="a8e45-135">如果出现套接字故障，则会引发 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-135">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a8e45-136">收到的错误被指定为 <xref:System.Net.Sockets.SocketError> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="a8e45-136">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8e45-137"><paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-137"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8e45-138"><paramref name="offset" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="a8e45-138"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="a8e45-139">或</span><span class="sxs-lookup"><span data-stu-id="a8e45-139">-or-</span></span> 
 <span data-ttu-id="a8e45-140"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="a8e45-140"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="a8e45-141">或</span><span class="sxs-lookup"><span data-stu-id="a8e45-141">-or-</span></span> 
 <span data-ttu-id="a8e45-142"><paramref name="count" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="a8e45-142"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="a8e45-143">或</span><span class="sxs-lookup"><span data-stu-id="a8e45-143">-or-</span></span> 
 <span data-ttu-id="a8e45-144"><paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="a8e45-144"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-145">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-145">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-146">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-146">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-147">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-147">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 count, class System.Net.IPEndPoint remoteEndPoint, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, count As Integer, remoteEndPoint As IPEndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Net::IPEndPoint ^ remoteEndPoint, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendTo : byte[] * int * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendTo (buffer, offset, count, remoteEndPoint, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a8e45-148">包含要发送的数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a8e45-148">The buffer that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="a8e45-149">要从中读取待发送数据的从 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-149">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to read the data to be sent.</span></span></param>
        <param name="count"><span data-ttu-id="a8e45-150">要从 <paramref name="buffer" /> 发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="a8e45-150">The number of bytes to send from the <paramref name="buffer" />.</span></span></param>
        <param name="remoteEndPoint"><span data-ttu-id="a8e45-151">要向其发送数据包的远程终结点。</span><span class="sxs-lookup"><span data-stu-id="a8e45-151">The remote endpoint to which the packet is to be sent.</span></span></param>
        <param name="callback"><span data-ttu-id="a8e45-152">要在此操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-152">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="a8e45-153">要为此操作传递给 <paramref name="callback" /> 方法的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="a8e45-153">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="a8e45-154">开始执行向指定目标发送单播数据包的操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-154">Begins the operation of sending a unicast packet to the specified destination.</span></span></summary>
        <returns><span data-ttu-id="a8e45-155">引用此操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-155">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-156"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> 方法开始将 UDP 数据包发送到已联接的多播组的操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-156">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> method begins an operation of sending a UDP packet to the joined multicast group.</span></span>  
  
 <span data-ttu-id="a8e45-157">客户端必须已完成到多播组的联接。</span><span class="sxs-lookup"><span data-stu-id="a8e45-157">The client must have completed a join to the multicast group.</span></span> <span data-ttu-id="a8e45-158">`remoteEndPoint` 参数中指定的目标地址必须已向此接收方发送了多播数据包。</span><span class="sxs-lookup"><span data-stu-id="a8e45-158">The destination address specified in the `remoteEndPoint` parameter must have already sent a multicast packet to this receiver.</span></span> <span data-ttu-id="a8e45-159">某些协议使用此信息传递流控制、服务统计信息或恢复消息。</span><span class="sxs-lookup"><span data-stu-id="a8e45-159">Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</span></span>  
  
 <span data-ttu-id="a8e45-160">接收到数据包后，将调用在 `callback` 参数中指定的方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-160">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="a8e45-161">仅当在 `remoteEndPoint` 参数中指定的地址已向此接收方发送了多播数据包时，才允许传输。</span><span class="sxs-lookup"><span data-stu-id="a8e45-161">The transmission is only allowed if the address specified in the `remoteEndPoint` parameter has already sent a multicast packet to this receiver.</span></span> <span data-ttu-id="a8e45-162">如果客户端不允许访问，则会引发 <xref:System.Net.Sockets.SocketException>，并 <xref:System.Net.Sockets.SocketError.AccessDenied>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-162">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="a8e45-163">如果在 `remoteEndPoint` 参数中指定的目标端口小于1024，则将引发与 <xref:System.Net.Sockets.SocketError.AccessDenied>的 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-163">If the destination port specified in the `remoteEndPoint` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="a8e45-164">如果接收操作同步失败，则可能会出现套接字故障，但这种情况不太常见。</span><span class="sxs-lookup"><span data-stu-id="a8e45-164">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="a8e45-165">如果出现套接字故障，则会引发 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-165">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a8e45-166">收到的错误被指定为 <xref:System.Net.Sockets.SocketError> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="a8e45-166">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8e45-167"><paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-167"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8e45-168"><paramref name="offset" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="a8e45-168"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="a8e45-169">或</span><span class="sxs-lookup"><span data-stu-id="a8e45-169">-or-</span></span> 
 <span data-ttu-id="a8e45-170"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="a8e45-170"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="a8e45-171">或</span><span class="sxs-lookup"><span data-stu-id="a8e45-171">-or-</span></span> 
 <span data-ttu-id="a8e45-172"><paramref name="count" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="a8e45-172"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="a8e45-173">或</span><span class="sxs-lookup"><span data-stu-id="a8e45-173">-or-</span></span> 
 <span data-ttu-id="a8e45-174"><paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="a8e45-174"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-175">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-175">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-176">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-176">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-177">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-177">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendToGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a8e45-178">包含要发送的数据的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a8e45-178">The buffer that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="a8e45-179">要从中读取待发送数据的从 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-179">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to read the data to be sent.</span></span></param>
        <param name="count"><span data-ttu-id="a8e45-180">要从 <paramref name="buffer" /> 发送的字节数。</span><span class="sxs-lookup"><span data-stu-id="a8e45-180">The number of bytes to send from the <paramref name="buffer" />.</span></span></param>
        <param name="callback"><span data-ttu-id="a8e45-181">要在此操作完成时调用的回调方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-181">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="a8e45-182">要为此操作传递给 <paramref name="callback" /> 方法的可选状态信息。</span><span class="sxs-lookup"><span data-stu-id="a8e45-182">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="a8e45-183">开始执行将数据包发送到已联接的多播组的操作，并在已将数据包发送到组时调用指定的回调。</span><span class="sxs-lookup"><span data-stu-id="a8e45-183">Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.</span></span></summary>
        <returns><span data-ttu-id="a8e45-184">引用此操作的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-184">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-185"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> 方法开始将 UDP 数据包发送到已联接的多播组的操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-185">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> method begins an operation of sending a UDP packet to the joined multicast group.</span></span>  
  
 <span data-ttu-id="a8e45-186">客户端必须已完成到多播组的联接。</span><span class="sxs-lookup"><span data-stu-id="a8e45-186">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="a8e45-187">接收到数据包后，将调用在 `callback` 参数中指定的方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-187">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="a8e45-188">如果接收操作同步失败，则可能会出现套接字故障，但这种情况不太常见。</span><span class="sxs-lookup"><span data-stu-id="a8e45-188">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="a8e45-189">如果出现套接字故障，则会引发 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-189">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a8e45-190">收到的错误被指定为 <xref:System.Net.Sockets.SocketError> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="a8e45-190">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8e45-191"><paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-191"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8e45-192"><paramref name="offset" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="a8e45-192"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="a8e45-193">或</span><span class="sxs-lookup"><span data-stu-id="a8e45-193">-or-</span></span> 
 <span data-ttu-id="a8e45-194"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="a8e45-194"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="a8e45-195">或</span><span class="sxs-lookup"><span data-stu-id="a8e45-195">-or-</span></span> 
 <span data-ttu-id="a8e45-196"><paramref name="count" /> 小于 0</span><span class="sxs-lookup"><span data-stu-id="a8e45-196"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="a8e45-197">或</span><span class="sxs-lookup"><span data-stu-id="a8e45-197">-or-</span></span> 
 <span data-ttu-id="a8e45-198"><paramref name="offset" /> 加上此计数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="a8e45-198"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-199">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-199">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-200">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-200">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-201">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-201">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSource">
      <MemberSignature Language="C#" Value="public void BlockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BlockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BlockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BlockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.BlockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.BlockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress"><span data-ttu-id="a8e45-202">要阻止的源地址。</span><span class="sxs-lookup"><span data-stu-id="a8e45-202">The address of the source to block.</span></span></param>
        <summary><span data-ttu-id="a8e45-203">阻止源，从而不再接收源自它的多播数据包。</span><span class="sxs-lookup"><span data-stu-id="a8e45-203">Blocks a source so that multicast packets originating from it are no longer received.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-204"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> 方法阻止接收来自指定源地址的多播数据包。</span><span class="sxs-lookup"><span data-stu-id="a8e45-204">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method blocks multicast packets originating from a specified source address from being received.</span></span> <span data-ttu-id="a8e45-205">客户端必须已完成到多播组的联接。</span><span class="sxs-lookup"><span data-stu-id="a8e45-205">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="a8e45-206">`sourceAddress` 参数可以是 IPv6 地址或 IPv4 地址，但 `sourceAddress` 参数必须与客户端加入的多路广播组的地址族匹配。</span><span class="sxs-lookup"><span data-stu-id="a8e45-206">The `sourceAddress` parameter may be either an IPv6 or IPv4 address, but the `sourceAddress` parameter must match the address family of the multicast group that the client joined.</span></span>  
  
 <span data-ttu-id="a8e45-207">接收到数据包后，将调用在 `callback` 参数中指定的方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-207">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="a8e45-208">如果在执行块源操作时出现套接字错误，则会引发 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-208">If there is a socket failure while performing the block source operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a8e45-209">收到的错误被指定为 <xref:System.Net.Sockets.SocketError> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="a8e45-209">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-210">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-210">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-211">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-211">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-212">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-212">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpAnySourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8e45-213">离开多播组并释放 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 类和基础 <see cref="T:System.Net.Sockets.Socket" /> 的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="a8e45-213">Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> class and the underlying the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-214">在完成使用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> 后，应调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-214">Call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</span></span> <span data-ttu-id="a8e45-215">Dispose 方法会使 <xref:System.Net.Sockets.UdpAnySourceMulticastClient> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="a8e45-215">The Dispose method leaves the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in an unusable state.</span></span> <span data-ttu-id="a8e45-216">调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> 后，必须释放对 <xref:System.Net.Sockets.UdpAnySourceMulticastClient> 的所有引用，以便垃圾回收器可以回收 <xref:System.Net.Sockets.UdpAnySourceMulticastClient> 占用的内存。</span><span class="sxs-lookup"><span data-stu-id="a8e45-216">After calling <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> was occupying.</span></span>  
  
 <span data-ttu-id="a8e45-217">每次释放对 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-217">Always call <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</span></span> <span data-ttu-id="a8e45-218">否则，在垃圾回收器调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient> 对象的 <xref:System.Object.Finalize%2A> 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="a8e45-218">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="a8e45-219">异步联接操作的结果。</span><span class="sxs-lookup"><span data-stu-id="a8e45-219">The result of the asynchronous join operation.</span></span></param>
        <summary><span data-ttu-id="a8e45-220">完成多播组的异步联接组操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-220">Completes the asynchronous join group operation to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-221"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> 方法完成到套接字的异步绑定，并将操作联接到多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-221">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.</span></span>  
  
 <span data-ttu-id="a8e45-222">如果运行时需要，<xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> 方法还执行策略检查以验证是否允许客户端访问多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-222">If required by the runtime, the  <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="a8e45-223">如果客户端不允许访问，则会引发 <xref:System.Net.Sockets.SocketException>，并 <xref:System.Net.Sockets.SocketError.AccessDenied>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-223">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="a8e45-224">如果在执行联接组操作时出现套接字错误，则会引发 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-224">If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a8e45-225">收到的错误被指定为 <xref:System.Net.Sockets.SocketError> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="a8e45-225">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8e45-226"><paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-226"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-227">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-227">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-228">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-228">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromGroup">
      <MemberSignature Language="C#" Value="public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromGroup(class System.IAsyncResult result, [out] class System.Net.IPEndPoint&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromGroup (result As IAsyncResult, ByRef source As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromGroup(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % source);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromGroup : IAsyncResult * IPEndPoint -&gt; int" Usage="udpAnySourceMulticastClient.EndReceiveFromGroup (result, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="source" Type="System.Net.IPEndPoint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="a8e45-229">异步接收操作的结果。</span><span class="sxs-lookup"><span data-stu-id="a8e45-229">The result of the asynchronous receive operation.</span></span></param>
        <param name="source"><span data-ttu-id="a8e45-230">从中接收数据包的源终结点。</span><span class="sxs-lookup"><span data-stu-id="a8e45-230">The source endpoint where the packet was received from.</span></span></param>
        <summary><span data-ttu-id="a8e45-231">完成从已联接的多播组接收数据包的异步操作并提供接收到的信息。</span><span class="sxs-lookup"><span data-stu-id="a8e45-231">Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</span></span></summary>
        <returns><span data-ttu-id="a8e45-232">存储在传递给 <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 方法的缓冲区参数中的消息长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-232">The length, in bytes, of the message stored in the buffer parameter passed to the <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-233"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> 方法完成一个异步操作，以便从多路广播组接收数据包。</span><span class="sxs-lookup"><span data-stu-id="a8e45-233">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> method completes an asynchronous operation to receive a packet from a multicast group.</span></span>  
  
 <span data-ttu-id="a8e45-234">如果在执行接收操作时出现套接字错误，则会引发 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-234">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a8e45-235">收到的错误被指定为 <xref:System.Net.Sockets.SocketError> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="a8e45-235">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8e45-236"><paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-236"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-237">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-237">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-238">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-238">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-239">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-239">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public void EndSendTo (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendTo(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendTo (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendTo(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendTo : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendTo result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="a8e45-240">异步发送操作的结果。</span><span class="sxs-lookup"><span data-stu-id="a8e45-240">The result of the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="a8e45-241">完成向指定目标发送单播数据包的操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-241">Completes the operation of sending a unicast packet to the specified destination.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-242"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> 方法完成将数据包发送到指定目标地址的异步操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-242">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> method completes an asynchronous operation to send a packet to specified destination address.</span></span>  
  
 <span data-ttu-id="a8e45-243">如果在执行接收操作时出现套接字错误，则会引发 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-243">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a8e45-244">收到的错误被指定为 <xref:System.Net.Sockets.SocketError> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="a8e45-244">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8e45-245"><paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-245"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-246">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-246">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-247">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-247">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-248">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-248">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToGroup">
      <MemberSignature Language="C#" Value="public void EndSendToGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendToGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="a8e45-249">异步发送操作的结果。</span><span class="sxs-lookup"><span data-stu-id="a8e45-249">The result of the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="a8e45-250">完成将数据包发送到多播组的操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-250">Completes the operation of sending a packet to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-251"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> 方法完成将数据包发送到多播组的异步操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-251">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> method completes an asynchronous operation to send a packet to a multicast group.</span></span>  
  
 <span data-ttu-id="a8e45-252">如果在执行接收操作时出现套接字错误，则会引发 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-252">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a8e45-253">收到的错误被指定为 <xref:System.Net.Sockets.SocketError> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="a8e45-253">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8e45-254"><paramref name="result" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-254"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-255">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-255">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-256">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-256">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-257">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-257">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8e45-258">获取或设置一个值，该值指定传出的多路广播数据包是否传递到发送应用程序。</span><span class="sxs-lookup"><span data-stu-id="a8e45-258">Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</span></span></summary>
        <value><span data-ttu-id="a8e45-259">返回 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-259">Returns <see cref="T:System.Boolean" />.</span></span>  
  
<span data-ttu-id="a8e45-260">一个值，该值指示向多路广播组发送的传出数据包是否传递到发送应用程序。</span><span class="sxs-lookup"><span data-stu-id="a8e45-260">A value that indicates if outgoing packets to a multicast group are delivered to the sending application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-261">多播流量是 Internet 上多对多通信的可扩展方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-261">Multicast traffic is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="a8e45-262">进程订阅多路广播组地址。</span><span class="sxs-lookup"><span data-stu-id="a8e45-262">A process subscribes to a multicast group address.</span></span> <span data-ttu-id="a8e45-263">然后，由订阅的进程发送到多播组的任何数据包都由每个订阅了多播地址的其他进程接收。</span><span class="sxs-lookup"><span data-stu-id="a8e45-263">Then, any packets sent by a subscribed process to the multicast group are received by every other process subscribed to the multicast address.</span></span> <span data-ttu-id="a8e45-264"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> 属性控制本地计算机上的任何进程是否接收此客户端发送到多播组的多播数据包。</span><span class="sxs-lookup"><span data-stu-id="a8e45-264">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-265">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-265">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-266">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-266">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8e45-267">获取或设置 <see cref="T:System.Net.Sockets.Socket" /> 的接收缓冲区的大小（以字节为单位），该缓冲区用于此 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 实例上的多播接收操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-267">Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="a8e45-268">返回 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-268">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="a8e45-269">接收缓冲区的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-269">The size, in bytes, of the receive buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-270"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> 属性获取或设置基础 <xref:System.Net.Sockets.Socket> 的接收缓冲区的大小（以字节为单位），该缓冲区用于此 <xref:System.Net.Sockets.UdpAnySourceMulticastClient> 实例上的多播接收操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-270">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance.</span></span> <span data-ttu-id="a8e45-271">具体而言，<xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> 属性控制堆栈在包到达时使用的缓冲区大小，但应用程序尚未调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a8e45-271">Specifically, the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method.</span></span> <span data-ttu-id="a8e45-272">如果此缓冲区已满，并且包在应用程序调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> 和 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> 方法之前继续存在，则将删除旧的数据包。</span><span class="sxs-lookup"><span data-stu-id="a8e45-272">If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> and <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> methods, old packets will get dropped.</span></span> <span data-ttu-id="a8e45-273">应用程序将永远无法接收旧数据包，而在调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> 方法时，它将接收到较新的数据包。</span><span class="sxs-lookup"><span data-stu-id="a8e45-273">The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> method.</span></span>  
  
 <span data-ttu-id="a8e45-274">Windows 上的接收缓冲区的默认大小为8192个字节。</span><span class="sxs-lookup"><span data-stu-id="a8e45-274">The default size of the receive buffer on Windows is 8,192 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8e45-275">指定的缓冲区大小小于 0。</span><span class="sxs-lookup"><span data-stu-id="a8e45-275">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-276">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-276">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-277">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-277">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8e45-278">获取或设置 <see cref="T:System.Net.Sockets.Socket" /> 的发送缓冲区的大小（以字节为单位），该缓冲区用于此 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 实例上的多播发送操作。</span><span class="sxs-lookup"><span data-stu-id="a8e45-278">Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="a8e45-279">返回 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-279">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="a8e45-280">发送缓冲区的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-280">The size, in bytes, of the send buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-281"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> 属性获取或设置在此 <xref:System.Net.Sockets.UdpAnySourceMulticastClient> 实例上用于多播发送操作的基础套接字的发送缓冲区的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="a8e45-281">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property gets or sets the size, in bytes, of the send buffer of the underlying Socket used for multicast send operations on this <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instance.</span></span>  
  
 <span data-ttu-id="a8e45-282">如果发送缓冲区已满，则调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> 或 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> 方法将需要更长的时间来调用回调，具体取决于 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="a8e45-282">calls to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> or <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> methods will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property if the send buffer is full.</span></span> <span data-ttu-id="a8e45-283"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> 属性仅控制用户的缓冲区是否在物理内存中保持锁定状态，直到发送完成。</span><span class="sxs-lookup"><span data-stu-id="a8e45-283">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.</span></span>  
  
 <span data-ttu-id="a8e45-284">Windows 上的发送缓冲区的默认大小为8192个字节。</span><span class="sxs-lookup"><span data-stu-id="a8e45-284">The default size of the send buffer on Windows is 8,192 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8e45-285">指定的缓冲区大小小于 0。</span><span class="sxs-lookup"><span data-stu-id="a8e45-285">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-286">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-286">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-287">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-287">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockSource">
      <MemberSignature Language="C#" Value="public void UnblockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnblockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnblockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnblockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.UnblockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.UnblockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress"><span data-ttu-id="a8e45-288">要取消阻止的源的地址。</span><span class="sxs-lookup"><span data-stu-id="a8e45-288">The address of the source to unblock.</span></span></param>
        <summary><span data-ttu-id="a8e45-289">取消阻止以前通过调用 <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> 方法阻止的源，以便接收来自该源的多播数据包。</span><span class="sxs-lookup"><span data-stu-id="a8e45-289">Unblocks a source that was previously blocked by a call to the <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> method so that multicast packets originating from it can be received.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8e45-290"><xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> 方法取消阻止源自指定源地址的多播数据包，以便可以接收这些数据包。</span><span class="sxs-lookup"><span data-stu-id="a8e45-290">The <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> method unblocks multicast packets originating from a specified source address so they can be received.</span></span> <span data-ttu-id="a8e45-291">指定的源地址之前必须已被调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> 方法阻止。</span><span class="sxs-lookup"><span data-stu-id="a8e45-291">The specified source address must have previously been blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method.</span></span>  
  
 <span data-ttu-id="a8e45-292">客户端必须已完成到多播组的联接。</span><span class="sxs-lookup"><span data-stu-id="a8e45-292">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="a8e45-293">`sourceAddress` 参数可以是 IPv6 或 IPv4 多播地址。</span><span class="sxs-lookup"><span data-stu-id="a8e45-293">The `sourceAddress` parameter may be either an IPv6 or IPv4 multicast address.</span></span>  
  
 <span data-ttu-id="a8e45-294">如果 `sourceAddress` 参数中指定的源地址以前未被调用 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> 方法阻止，则会引发 <xref:System.Net.Sockets.SocketException>，并 <xref:System.Net.Sockets.SocketError.AddressNotAvailable>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-294">If the specified source address in the `sourceAddress` parameter was not previously blocked by a call to the <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> method, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.</span></span>  
  
 <span data-ttu-id="a8e45-295">如果执行取消阻止源操作时出现套接字错误，则会引发 <xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="a8e45-295">If there is a socket failure while performing the unblock source operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a8e45-296">收到的错误被指定为 <xref:System.Net.Sockets.SocketError> 枚举的成员。</span><span class="sxs-lookup"><span data-stu-id="a8e45-296">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8e45-297">尚未联接多播组。</span><span class="sxs-lookup"><span data-stu-id="a8e45-297">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8e45-298">已释放了 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />。</span><span class="sxs-lookup"><span data-stu-id="a8e45-298">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="a8e45-299">尝试访问套接字时出错。</span><span class="sxs-lookup"><span data-stu-id="a8e45-299">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
