<Type Name="AddInProcess" FullName="System.AddIn.Hosting.AddInProcess">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e04657657ac8face1b0fe0a1ccdc01201aeedb5" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73376186" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInProcess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInProcess extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInProcess" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInProcess" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInProcess sealed" />
  <TypeSignature Language="F#" Value="type AddInProcess = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="780d5-101">提供一个外部进程，用于通过宿主应用程序在进程外运行外接程序。</span><span class="sxs-lookup"><span data-stu-id="780d5-101">Provides an external process for running add-ins out-of-process from the host application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="780d5-102">若要在外部进程中激活外接程序，请将 <xref:System.AddIn.Hosting.AddInProcess> 对象传递到适当的 <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="780d5-102">To activate an add-in in an external process, pass an <xref:System.AddIn.Hosting.AddInProcess> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=nameWithType> method overload.</span></span>  
  
 <span data-ttu-id="780d5-103">运行外接程序的可执行文件是从安装了 Windows 目录下的 .NET Framework 的两个文件之一获取的。</span><span class="sxs-lookup"><span data-stu-id="780d5-103">The executable that runs the add-in is obtained from one of two files installed with the .NET Framework under the Windows directory.</span></span> <span data-ttu-id="780d5-104">默认情况下，将使用与主机应用程序的每字位数匹配的可执行文件。</span><span class="sxs-lookup"><span data-stu-id="780d5-104">By default, the executable that matches the bits-per-word of the host application is used.</span></span> <span data-ttu-id="780d5-105">如果主机是64位进程，则运行 AddInProcess;否则，将运行 AddInProcess32。</span><span class="sxs-lookup"><span data-stu-id="780d5-105">If the host is a 64-bit process, AddInProcess.exe is run; otherwise, AddInProcess32.exe is run.</span></span> <span data-ttu-id="780d5-106">若要指定选择可执行文件的方式，请使用 <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> 构造函数创建 <xref:System.AddIn.Hosting.AddInProcess> 对象。</span><span class="sxs-lookup"><span data-stu-id="780d5-106">To specify the way the executable is selected, use the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor to create the <xref:System.AddIn.Hosting.AddInProcess> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="780d5-107">下面的示例在外部进程中激活外接程序。</span><span class="sxs-lookup"><span data-stu-id="780d5-107">The following example activates an add-in in an external process.</span></span>  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b"><span data-ttu-id="780d5-108">外接程序和扩展性</span><span class="sxs-lookup"><span data-stu-id="780d5-108">Add-Ins and Extensibility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="780d5-109">初始化 <see cref="T:System.AddIn.Hosting.AddInProcess" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="780d5-109">Initializes a new instance of the <see cref="T:System.AddIn.Hosting.AddInProcess" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInProcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInProcess();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="780d5-110">初始化 <see cref="T:System.AddIn.Hosting.AddInProcess" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="780d5-110">Initializes a new instance of the <see cref="T:System.AddIn.Hosting.AddInProcess" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="780d5-111">此构造函数与使用带 <xref:System.AddIn.Hosting.Platform.Host?displayProperty=nameWithType> 标志的 <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> 构造函数具有相同的效果，用于指定运行外接程序的进程与宿主进程具有相同的每字位数。</span><span class="sxs-lookup"><span data-stu-id="780d5-111">This constructor has the same effect as using the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor with the <xref:System.AddIn.Hosting.Platform.Host?displayProperty=nameWithType> flag, to specify that the process that runs the add-in will have the same bits-per-word as the host process.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="780d5-112">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="780d5-112">for full trust for the immediate caller.</span></span> <span data-ttu-id="780d5-113">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="780d5-113">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AddInProcess (System.AddIn.Hosting.Platform platform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AddIn.Hosting.Platform platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AddInProcess(System::AddIn::Hosting::Platform platform);" />
      <MemberSignature Language="F#" Value="new System.AddIn.Hosting.AddInProcess : System.AddIn.Hosting.Platform -&gt; System.AddIn.Hosting.AddInProcess" Usage="new System.AddIn.Hosting.AddInProcess platform" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="platform" Type="System.AddIn.Hosting.Platform" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="platform"><span data-ttu-id="780d5-114">一个值，该值指定运行外接程序的进程的每字位数。</span><span class="sxs-lookup"><span data-stu-id="780d5-114">A value that specifies the bits-per-word of the process that runs the add-in.</span></span></param>
        <summary><span data-ttu-id="780d5-115">初始化 <see cref="T:System.AddIn.Hosting.AddInProcess" /> 类的新实例，并指定运行外接程序的进程的每字位数。</span><span class="sxs-lookup"><span data-stu-id="780d5-115">Initializes a new instance of the <see cref="T:System.AddIn.Hosting.AddInProcess" /> class, specifying the bits-per-word of the process in which the add-in runs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="780d5-116">下表显示 `platform` 如何影响不同操作系统上进程的每字位数：</span><span class="sxs-lookup"><span data-stu-id="780d5-116">The following table shows how `platform` affects the bits-per-word of the process on different operating systems:</span></span>  
  
||<span data-ttu-id="780d5-117">32 位操作系统</span><span class="sxs-lookup"><span data-stu-id="780d5-117">32-bit operating system</span></span>|<span data-ttu-id="780d5-118">64 位操作系统</span><span class="sxs-lookup"><span data-stu-id="780d5-118">64-bit operating system</span></span>|  
|-|------------------------------|------------------------------|  
|<span data-ttu-id="780d5-119">主机</span><span class="sxs-lookup"><span data-stu-id="780d5-119">Host</span></span>|<span data-ttu-id="780d5-120">32 位</span><span class="sxs-lookup"><span data-stu-id="780d5-120">32-bit</span></span>|<span data-ttu-id="780d5-121">与宿主进程相同</span><span class="sxs-lookup"><span data-stu-id="780d5-121">Same as the host process</span></span>|  
|<span data-ttu-id="780d5-122">AnyCPU</span><span class="sxs-lookup"><span data-stu-id="780d5-122">AnyCPU</span></span>|<span data-ttu-id="780d5-123">32 位</span><span class="sxs-lookup"><span data-stu-id="780d5-123">32-bit</span></span>|<span data-ttu-id="780d5-124">64 位</span><span class="sxs-lookup"><span data-stu-id="780d5-124">64-bit</span></span>|  
|<span data-ttu-id="780d5-125">X86</span><span class="sxs-lookup"><span data-stu-id="780d5-125">X86</span></span>|<span data-ttu-id="780d5-126">32 位</span><span class="sxs-lookup"><span data-stu-id="780d5-126">32-bit</span></span>|<span data-ttu-id="780d5-127">32 位</span><span class="sxs-lookup"><span data-stu-id="780d5-127">32-bit</span></span>|  
|<span data-ttu-id="780d5-128">X64</span><span class="sxs-lookup"><span data-stu-id="780d5-128">X64</span></span>|<span data-ttu-id="780d5-129">引发异常</span><span class="sxs-lookup"><span data-stu-id="780d5-129">Exception is thrown</span></span>|<span data-ttu-id="780d5-130">64 位</span><span class="sxs-lookup"><span data-stu-id="780d5-130">64-bit</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="780d5-131">缺少可执行文件（AddInProcess.exe 或 AddInProcess32.exe）路径的注册表项。</span><span class="sxs-lookup"><span data-stu-id="780d5-131">The registry entry for the path to the executable (AddInProcess.exe or AddInProcess32.exe) is missing.</span></span>  
  
 <span data-ttu-id="780d5-132">或</span><span class="sxs-lookup"><span data-stu-id="780d5-132">-or-</span></span>  
  
 <span data-ttu-id="780d5-133">可执行文件丢失。</span><span class="sxs-lookup"><span data-stu-id="780d5-133">The executable is missing.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="780d5-134">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="780d5-134">for full trust for the immediate caller.</span></span> <span data-ttu-id="780d5-135">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="780d5-135">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentProcess">
      <MemberSignature Language="C#" Value="public bool IsCurrentProcess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrentProcess" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.IsCurrentProcess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrentProcess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrentProcess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCurrentProcess : bool" Usage="System.AddIn.Hosting.AddInProcess.IsCurrentProcess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="780d5-136">获取一个值，指示当前 <see cref="T:System.AddIn.Hosting.AddInProcess" /> 对象是否表示主机应用程序进程。</span><span class="sxs-lookup"><span data-stu-id="780d5-136">Gets a value that indicates whether the current <see cref="T:System.AddIn.Hosting.AddInProcess" /> object represents the host application process.</span></span></summary>
        <value><span data-ttu-id="780d5-137">如果 <see cref="T:System.AddIn.Hosting.AddInProcess" /> 对象对应于当前进程，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="780d5-137"><see langword="true" /> if the <see cref="T:System.AddIn.Hosting.AddInProcess" /> object corresponds to the current process; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="780d5-138">如果此属性的值为 `true`，则外接程序与宿主应用程序在进程内运行。</span><span class="sxs-lookup"><span data-stu-id="780d5-138">If the value of this property is `true`, the add-in is running in-process with the host application.</span></span> <span data-ttu-id="780d5-139">在这种情况下，使用 <xref:System.AddIn.Hosting.AddInProcess.Start%2A> 或 <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> 方法将引发一个 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="780d5-139">In that case, using the <xref:System.AddIn.Hosting.AddInProcess.Start%2A> or <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="780d5-140">如果外接程序在进程内运行，则 <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=nameWithType> 属性返回一个表示宿主应用程序进程的 <xref:System.AddIn.Hosting.AddInProcess> 对象。</span><span class="sxs-lookup"><span data-stu-id="780d5-140">The <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=nameWithType> property returns an <xref:System.AddIn.Hosting.AddInProcess> object that represents the host application process if the add-in is running in-process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="780d5-141">下面的示例在外部进程中激活外接程序，并使用 <xref:System.AddIn.Hosting.AddInProcess.IsCurrentProcess%2A> 属性来确定外接程序是否与宿主应用程序进程位于同一进程中。</span><span class="sxs-lookup"><span data-stu-id="780d5-141">The following example activates an add-in in an external process and uses the <xref:System.AddIn.Hosting.AddInProcess.IsCurrentProcess%2A> property to determine whether the add-in is in the same process as the host application process.</span></span>  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.AddIn.Hosting.AddInProcess.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="780d5-142">获取或设置一个值，该值指示是否使外部进程保持活动状态。</span><span class="sxs-lookup"><span data-stu-id="780d5-142">Gets or sets a value that indicates whether to keep the external process alive.</span></span></summary>
        <value><span data-ttu-id="780d5-143">如果此外部进程应保持活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="780d5-143"><see langword="true" /> if the external process should be kept alive; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="780d5-144">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="780d5-144">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="780d5-145">将此属性设置为 "`false`"，以在进程内的最后一个外接程序关闭后主动关闭外部进程。</span><span class="sxs-lookup"><span data-stu-id="780d5-145">Set this property to `false` to aggressively shut down the external process after the last add-in inside the process has been shut down.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.Platform Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AddIn.Hosting.Platform Platform" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As Platform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::Platform Platform { System::AddIn::Hosting::Platform get(); };" />
      <MemberSignature Language="F#" Value="member this.Platform : System.AddIn.Hosting.Platform" Usage="System.AddIn.Hosting.AddInProcess.Platform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.Platform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="780d5-146">获取运行进程外外接程序的进程的每字位数。</span><span class="sxs-lookup"><span data-stu-id="780d5-146">Gets the bits-per-word of the process in which the out-of-process add-in is run.</span></span></summary>
        <value><span data-ttu-id="780d5-147">运行外接程序的进程的每字位数。</span><span class="sxs-lookup"><span data-stu-id="780d5-147">The bits-per-word of the process that runs the add-in.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="780d5-148">当初始化 <xref:System.AddIn.Hosting.AddInProcess> 对象时，将设置每字位数，并且无法更改。</span><span class="sxs-lookup"><span data-stu-id="780d5-148">The bits-per-word is set when the <xref:System.AddIn.Hosting.AddInProcess> object is initialized, and cannot be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.AddIn.Hosting.AddInProcess.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="780d5-149">获取外部进程的进程 ID。</span><span class="sxs-lookup"><span data-stu-id="780d5-149">Gets the process ID of the external process.</span></span></summary>
        <value><span data-ttu-id="780d5-150">外部进程的进程 ID；如果尚未启动外部进程，则返回 -1。</span><span class="sxs-lookup"><span data-stu-id="780d5-150">The process ID, or -1 if the external process has not started.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="780d5-151">使用此属性进行调试。</span><span class="sxs-lookup"><span data-stu-id="780d5-151">Use this property for debugging.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="780d5-152">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="780d5-152">for full trust for the immediate caller.</span></span> <span data-ttu-id="780d5-153">此成员不能由部分信任的代码使用。</span><span class="sxs-lookup"><span data-stu-id="780d5-153">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public bool Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Function Shutdown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Shutdown();" />
      <MemberSignature Language="F#" Value="member this.Shutdown : unit -&gt; bool" Usage="addInProcess.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="780d5-154">强制关闭外部进程。</span><span class="sxs-lookup"><span data-stu-id="780d5-154">Forcibly shuts down the external process.</span></span></summary>
        <returns><span data-ttu-id="780d5-155">如果已成功关闭原本在运行的外部进程，则为 <see langword="true" />；如果没有与 <see cref="T:System.AddIn.Hosting.AddInProcess" /> 关联的活动进程，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="780d5-155"><see langword="true" /> if the external process was running and is successfully shut down; <see langword="false" /> if there is no active process associated with the <see cref="T:System.AddIn.Hosting.AddInProcess" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="780d5-156">外接程序正运行在宿主应用程序的进程内。</span><span class="sxs-lookup"><span data-stu-id="780d5-156">The add-in is running in-process with the host application.</span></span> <span data-ttu-id="780d5-157">启动和停止进程仅对于外部进程允许，而非主机进程。</span><span class="sxs-lookup"><span data-stu-id="780d5-157">Starting and stopping the process is allowed only for external processes, not for the host process.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShuttingDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.CancelEventArgs&gt; ShuttingDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.CancelEventArgs&gt; ShuttingDown" />
      <MemberSignature Language="DocId" Value="E:System.AddIn.Hosting.AddInProcess.ShuttingDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ShuttingDown As EventHandler(Of CancelEventArgs) " FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::CancelEventArgs ^&gt; ^ ShuttingDown;" />
      <MemberSignature Language="F#" Value="member this.ShuttingDown : EventHandler&lt;System.ComponentModel.CancelEventArgs&gt; " Usage="member this.ShuttingDown : System.EventHandler&lt;System.ComponentModel.CancelEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event ShuttingDown As EventHandler(Of CancelEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.CancelEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="780d5-158">当由 <see cref="T:System.AddIn.Hosting.AddInProcess" /> 对象所表示的进程即将关闭时发生。</span><span class="sxs-lookup"><span data-stu-id="780d5-158">Occurs when the process represented by the <see cref="T:System.AddIn.Hosting.AddInProcess" /> object is about to be shut down.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public bool Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInProcess.Start" />
      <MemberSignature Language="VB.NET" Value="Public Function Start () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; bool" Usage="addInProcess.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="780d5-159">启动外部进程。</span><span class="sxs-lookup"><span data-stu-id="780d5-159">Starts the external process.</span></span></summary>
        <returns><span data-ttu-id="780d5-160">如果成功启动该进程，则为 <see langword="true" />；如果该进程已正在运行，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="780d5-160"><see langword="true" /> if the process is successfully started; <see langword="false" /> if the process is already running.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="780d5-161">外接程序正运行在宿主应用程序的进程内。</span><span class="sxs-lookup"><span data-stu-id="780d5-161">The add-in is running in-process with the host application.</span></span> <span data-ttu-id="780d5-162">启动和停止进程仅对于外部进程允许，而非主机进程。</span><span class="sxs-lookup"><span data-stu-id="780d5-162">Starting and stopping the process is allowed only for external processes, not for the host process.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartupTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan StartupTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan StartupTimeout" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInProcess.StartupTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property StartupTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan StartupTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.StartupTimeout : TimeSpan with get, set" Usage="System.AddIn.Hosting.AddInProcess.StartupTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="780d5-163">获取或设置允许进程启动所用的秒数。</span><span class="sxs-lookup"><span data-stu-id="780d5-163">Gets or sets the number of seconds to allow for the process to start.</span></span></summary>
        <value><span data-ttu-id="780d5-164">允许进程启动所用的秒数。</span><span class="sxs-lookup"><span data-stu-id="780d5-164">The number of seconds to allow for process startup.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="780d5-165">默认值为10秒。</span><span class="sxs-lookup"><span data-stu-id="780d5-165">The default value is 10 seconds.</span></span> <span data-ttu-id="780d5-166">此属性通常在调试过程中使用，以增加运行进程外外接程序的进程的启动时间。</span><span class="sxs-lookup"><span data-stu-id="780d5-166">This property is usually used during debugging, to increase the startup time for the process that runs the out-of-process add-in.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="780d5-167">该进程已在运行。</span><span class="sxs-lookup"><span data-stu-id="780d5-167">The process is already running.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="780d5-168">赋给的值小于 0（零）。</span><span class="sxs-lookup"><span data-stu-id="780d5-168">The assigned value is less than 0 (zero).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
