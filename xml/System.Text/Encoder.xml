<Type Name="Encoder" FullName="System.Text.Encoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e727662f1a5902e9df9fc87108baf83332107ef" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73395678" /></Metadata><TypeSignature Language="C#" Value="public abstract class Encoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Encoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Encoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Encoder abstract" />
  <TypeSignature Language="F#" Value="type Encoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a666-101">将一组字符转换为一个字节序列。</span><span class="sxs-lookup"><span data-stu-id="4a666-101">Converts a set of characters into a sequence of bytes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-102">若要获取 <xref:System.Text.Encoder> 类的实现的实例，应用程序应使用 <xref:System.Text.Encoding> 实现的 <xref:System.Text.Encoding.GetEncoder%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4a666-102">To obtain an instance of an implementation of the <xref:System.Text.Encoder> class, the application should use the <xref:System.Text.Encoding.GetEncoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>  
  
 <span data-ttu-id="4a666-103"><xref:System.Text.Encoder.GetByteCount%2A> 方法确定导致对一组 Unicode 字符进行编码的字节数，并且 <xref:System.Text.Encoder.GetBytes%2A> 方法执行实际编码。</span><span class="sxs-lookup"><span data-stu-id="4a666-103">The <xref:System.Text.Encoder.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoder.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="4a666-104"><xref:System.Text.Encoder> 类中提供了这两种方法的几个版本。</span><span class="sxs-lookup"><span data-stu-id="4a666-104">There are several versions of both of these methods available in the <xref:System.Text.Encoder> class.</span></span> <span data-ttu-id="4a666-105">有关详细信息，请参阅 <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4a666-105">For more information, see <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4a666-106"><xref:System.Text.Encoder> 对象维护对 `GetBytes` 或 <xref:System.Text.Decoder.Convert%2A> 方法的连续调用之间的状态信息，以便能够正确地对跨块的字符序列进行编码。</span><span class="sxs-lookup"><span data-stu-id="4a666-106">A <xref:System.Text.Encoder> object maintains state information between successive calls to `GetBytes` or <xref:System.Text.Decoder.Convert%2A> methods so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="4a666-107"><xref:System.Text.Encoder> 还在数据块的末尾保留尾部字符，并在下一编码操作中使用尾随字符。</span><span class="sxs-lookup"><span data-stu-id="4a666-107">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="4a666-108">例如，数据块可能以不匹配的高代理项结束，并且匹配的低代理项可能位于下一个数据块中。</span><span class="sxs-lookup"><span data-stu-id="4a666-108">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="4a666-109">因此，<xref:System.Text.Encoding.GetDecoder%2A> 和 <xref:System.Text.Encoding.GetEncoder%2A> 对于网络传输和文件操作非常有用，因为这些操作经常处理数据块，而不是完整的数据流。</span><span class="sxs-lookup"><span data-stu-id="4a666-109">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a666-110">当应用程序使用数据流完成时，应确保通过将 `flush` 参数设置为相应方法调用中 `true` 来刷新状态信息。</span><span class="sxs-lookup"><span data-stu-id="4a666-110">When the application is done with a stream of data it should make sure that the state information is flushed by setting the `flush` parameter to `true` in the appropriate method call.</span></span> <span data-ttu-id="4a666-111">如果发生异常或应用程序切换流，应调用 <xref:System.Text.Encoder.Reset%2A> 以清除 `Encoder` 对象的内部状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-111">If an exception occurs or if the application switches streams, it should call <xref:System.Text.Encoder.Reset%2A> to clear the internal state of the `Encoder` object.</span></span>  
  
## <a name="version-considerations"></a><span data-ttu-id="4a666-112">版本注意事项</span><span class="sxs-lookup"><span data-stu-id="4a666-112">Version Considerations</span></span>  
 <span data-ttu-id="4a666-113"><xref:System.Text.Decoder> 或 <xref:System.Text.Encoder> 对象可以在转换操作期间进行序列化。</span><span class="sxs-lookup"><span data-stu-id="4a666-113">A <xref:System.Text.Decoder> or <xref:System.Text.Encoder> object can be serialized during a conversion operation.</span></span> <span data-ttu-id="4a666-114">如果在同一版本的 .NET Framework 中对对象进行反序列化，则会保留对象的状态，但如果在其他版本中反序列化，则会丢失。</span><span class="sxs-lookup"><span data-stu-id="4a666-114">The state of the object is retained if it is deserialized in the same version of the .NET Framework, but lost if it is deserialized in another version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a666-115">下面的示例演示如何使用指定的编码将 Unicode 字符数组转换为字节块。</span><span class="sxs-lookup"><span data-stu-id="4a666-115">The following example demonstrates how to convert an array of Unicode characters into blocks of bytes using a specified encoding.</span></span> <span data-ttu-id="4a666-116">为了进行比较，首先使用 <xref:System.Text.UTF7Encoding>对字符数组进行编码。</span><span class="sxs-lookup"><span data-stu-id="4a666-116">For comparison, the array of characters is first encoded using <xref:System.Text.UTF7Encoding>.</span></span> <span data-ttu-id="4a666-117">接下来，使用 <xref:System.Text.Encoder>对字符数组进行编码。</span><span class="sxs-lookup"><span data-stu-id="4a666-117">Next, the array of characters is encoded using an <xref:System.Text.Encoder>.</span></span>  
  
 [!code-cpp[System.Text.Encoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.Encoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.Encoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder Example/VB/snippet.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="4a666-118">当应用程序从此类继承时，必须重写所有成员。</span><span class="sxs-lookup"><span data-stu-id="4a666-118">When your application inherits from this class, it must override all the members.</span></span></para></block>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoding" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="4a666-119">了解编码</span><span class="sxs-lookup"><span data-stu-id="4a666-119">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a666-120">初始化 <see cref="T:System.Text.Encoder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4a666-120">Initializes a new instance of the <see cref="T:System.Text.Encoder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-121">若要获取此类的实现的实例，应用程序应使用 <xref:System.Text.Encoding> 实现的 <xref:System.Text.Encoding.GetEncoder%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4a666-121">To obtain an instance of an implementation of this class, the application should use the <xref:System.Text.Encoding.GetEncoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a666-122">下面的示例演示了两种初始化新 <xref:System.Text.Encoder> 实例的方法。</span><span class="sxs-lookup"><span data-stu-id="4a666-122">The following example demonstrates two techniques for initializing a new <xref:System.Text.Encoder> instance.</span></span>  
  
 [!code-cpp[System.Text.Encoder.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.Encoder.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.Encoder.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a666-123">将 Unicode 字符的缓冲区或数组转换为编码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="4a666-123">Converts a buffer or array of Unicode characters to an encoded byte sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, bool flush, out int charsUsed, out int bytesUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, bool flush, [out] int32&amp; charsUsed, [out] int32&amp; bytesUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Convert(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), flush As Boolean, ByRef charsUsed As Integer, ByRef bytesUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, bool flush, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; * bool * int * int * bool -&gt; unit&#xA;override this.Convert : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; * bool * int * int * bool -&gt; unit" Usage="encoder.Convert (chars, bytes, flush, charsUsed, bytesUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsUsed" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesUsed" Type="System.Int32" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="completed" Type="System.Boolean" RefType="out" Index="5" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="flush">To be added.</param>
        <param name="charsUsed">To be added.</param>
        <param name="bytesUsed">To be added.</param>
        <param name="completed">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (char* chars, int charCount, byte* bytes, int byteCount, bool flush, out int charsUsed, out int bytesUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount, bool flush, [out] int32&amp; charsUsed, [out] int32&amp; bytesUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(char* chars, int charCount, System::Byte* bytes, int byteCount, bool flush, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int * bool * int * int * bool -&gt; unit&#xA;override this.Convert : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int * bool * int * int * bool -&gt; unit" Usage="encoder.Convert (chars, charCount, bytes, byteCount, flush, charsUsed, bytesUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="charsUsed" Type="System.Int32" RefType="out" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytesUsed" Type="System.Int32" RefType="out" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="completed" Type="System.Boolean" RefType="out" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a666-124">要转换的 UTF-16 编码字符的字符串的地址。</span><span class="sxs-lookup"><span data-stu-id="4a666-124">The address of a string of UTF-16 encoded characters to convert.</span></span></param>
        <param name="charCount"><span data-ttu-id="4a666-125">要转换的 <paramref name="chars" /> 中的字符数。</span><span class="sxs-lookup"><span data-stu-id="4a666-125">The number of characters in <paramref name="chars" /> to convert.</span></span></param>
        <param name="bytes"><span data-ttu-id="4a666-126">用于存储已转换字节的缓冲区的地址。</span><span class="sxs-lookup"><span data-stu-id="4a666-126">The address of a buffer to store the converted bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="4a666-127">要在转换中使用的 <paramref name="bytes" /> 中的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-127">The maximum number of bytes in <paramref name="bytes" /> to use in the conversion.</span></span></param>
        <param name="flush"><span data-ttu-id="4a666-128">如果没有更多的数据要进行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-128"><see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span></span></param>
        <param name="charsUsed"><span data-ttu-id="4a666-129">当此方法返回时，包含来自在转换中使用的 <paramref name="chars" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="4a666-129">When this method returns, contains the number of characters from <paramref name="chars" /> that were used in the conversion.</span></span> <span data-ttu-id="4a666-130">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="4a666-130">This parameter is passed uninitialized.</span></span></param>
        <param name="bytesUsed"><span data-ttu-id="4a666-131">当此方法返回时，包含在转换中使用的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-131">When this method returns, contains the number of bytes that were used in the conversion.</span></span> <span data-ttu-id="4a666-132">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="4a666-132">This parameter is passed uninitialized.</span></span></param>
        <param name="completed"><span data-ttu-id="4a666-133">当此方法返回时，如果转换了所有由 <paramref name="charCount" /> 指定的字符，则包含 <see langword="true" />；否则包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-133">When this method returns, contains <see langword="true" /> if all the characters specified by <paramref name="charCount" /> were converted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4a666-134">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="4a666-134">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="4a666-135">将 Unicode 字符的缓冲区转换为编码的字节序列，并将结果存储在另一个缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="4a666-135">Converts a buffer of Unicode characters to an encoded byte sequence and stores the result in another buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-136">请记住，<xref:System.Text.Encoder> 对象在对 <xref:System.Text.Encoder.Convert%2A>的调用之间保存状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-136">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.Convert%2A>.</span></span> <span data-ttu-id="4a666-137">当应用程序使用数据流完成时，它应将 `flush` 参数设置为 `true`，以确保刷新状态信息。</span><span class="sxs-lookup"><span data-stu-id="4a666-137">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="4a666-138">通过此设置，编码器将忽略数据块末尾的无效字节，并清除内部缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4a666-138">With this setting, the encoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="4a666-139">逻辑单元中的所有剩余处理的数据（如代理项对的高代理项）都根据当前的回退设置进行转换。</span><span class="sxs-lookup"><span data-stu-id="4a666-139">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="4a666-140">`Convert` 方法旨在在循环中用于对任意数量的输入（如从文件或流中读取的数据）进行编码。</span><span class="sxs-lookup"><span data-stu-id="4a666-140">The `Convert` method is designed to be used in a loop to encode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="4a666-141">它将编码操作的输出存储在固定大小的缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="4a666-141">It stores the output of the encoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="4a666-142">如果输出缓冲区不够大，<xref:System.Text.Encoder.GetBytes%2A> 会引发异常，但 <xref:System.Text.Encoder.Convert%2A> 会填充尽可能多的空间，并返回读取的字符和写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-142"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="4a666-143">有关更多注释，另请参阅 <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> 主题。</span><span class="sxs-lookup"><span data-stu-id="4a666-143">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="4a666-144">`completed` 输出参数指示输入缓冲区中的所有数据是否已转换并存储在输出缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="4a666-144">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="4a666-145">如果在 `charCount` 参数指定的字符数不超过 `byteCount` 参数指定的字节数，则将此参数设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="4a666-145">This parameter is set to `false` if the number of characters specified by the `charCount` parameter cannot be converted without exceeding the number of bytes specified by the `byteCount` parameter.</span></span> <span data-ttu-id="4a666-146">在这种情况下，应用程序应使用输出缓冲区的内容或提供新的输出缓冲区，将 `chars` 参数递增 `charsUsed` 参数指定的字符数，然后再次调用 `Convert` 方法来处理剩余输入。</span><span class="sxs-lookup"><span data-stu-id="4a666-146">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `chars` parameter by the number of characters specified by the `charsUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="4a666-147">即使 `charsUsed` 和 `charCount` 参数相等，也可以将 `completed` 参数设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="4a666-147">The `completed` parameter can also be set to `false`, even though the `charsUsed` and `charCount` parameters are equal.</span></span> <span data-ttu-id="4a666-148">如果 <xref:System.Text.Encoder> 对象中仍有尚未存储在 `chars` 缓冲区中的数据，则会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="4a666-148">This situation occurs if there is still data in the <xref:System.Text.Encoder> object that has not been stored in the `chars` buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a666-149"><paramref name="chars" /> 或 <paramref name="bytes" /> 为 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="4a666-149"><paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a666-150"><paramref name="charCount" /> 或 <paramref name="byteCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="4a666-150"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a666-151">输出缓冲区太小，无法包含任何已转换的输出。</span><span class="sxs-lookup"><span data-stu-id="4a666-151">The output buffer is too small to contain any of the converted input.</span></span> <span data-ttu-id="4a666-152">输出缓冲区应大于或等于由 <see cref="Overload:System.Text.Encoder.GetByteCount" /> 方法指示的大小。</span><span class="sxs-lookup"><span data-stu-id="4a666-152">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Encoder.GetByteCount" /> method.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a666-153">发生了回退（有关更完整的说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="4a666-153">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="4a666-154">－和－</span><span class="sxs-lookup"><span data-stu-id="4a666-154">-and-</span></span> 
 <span data-ttu-id="4a666-155">将 <see cref="P:System.Text.Encoder.Fallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-155"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="4a666-156">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4a666-156">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="4a666-157">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4a666-157">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, int byteCount, bool flush, out int charsUsed, out int bytesUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex, int32 byteCount, bool flush, [out] int32&amp; charsUsed, [out] int32&amp; bytesUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, byteCount As Integer, flush As Boolean, ByRef charsUsed As Integer, ByRef bytesUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, bool flush, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : char[] * int * int * byte[] * int * int * bool * int * int * bool -&gt; unit&#xA;override this.Convert : char[] * int * int * byte[] * int * int * bool * int * int * bool -&gt; unit" Usage="encoder.Convert (chars, charIndex, charCount, bytes, byteIndex, byteCount, flush, charsUsed, bytesUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Byte[]" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteIndex" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="flush" Type="System.Boolean" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charsUsed" Type="System.Int32" RefType="out" Index="7" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytesUsed" Type="System.Int32" RefType="out" Index="8" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="completed" Type="System.Boolean" RefType="out" Index="9" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a666-158">要转换的字符数组。</span><span class="sxs-lookup"><span data-stu-id="4a666-158">An array of characters to convert.</span></span></param>
        <param name="charIndex"><span data-ttu-id="4a666-159">要转换的 <paramref name="chars" /> 的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="4a666-159">The first element of <paramref name="chars" /> to convert.</span></span></param>
        <param name="charCount"><span data-ttu-id="4a666-160">要转换的 <paramref name="chars" /> 的元素数。</span><span class="sxs-lookup"><span data-stu-id="4a666-160">The number of elements of <paramref name="chars" /> to convert.</span></span></param>
        <param name="bytes"><span data-ttu-id="4a666-161">存储已转换的字节的数组。</span><span class="sxs-lookup"><span data-stu-id="4a666-161">An array where the converted bytes are stored.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="4a666-162">存储数据的 <paramref name="bytes" /> 的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="4a666-162">The first element of <paramref name="bytes" /> in which data is stored.</span></span></param>
        <param name="byteCount"><span data-ttu-id="4a666-163">要在转换中使用的 <paramref name="bytes" /> 的元素的最大数量。</span><span class="sxs-lookup"><span data-stu-id="4a666-163">The maximum number of elements of <paramref name="bytes" /> to use in the conversion.</span></span></param>
        <param name="flush"><span data-ttu-id="4a666-164">如果没有更多的数据要进行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-164"><see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span></span></param>
        <param name="charsUsed"><span data-ttu-id="4a666-165">当此方法返回时，包含来自在转换中使用的 <paramref name="chars" /> 的字符数。</span><span class="sxs-lookup"><span data-stu-id="4a666-165">When this method returns, contains the number of characters from <paramref name="chars" /> that were used in the conversion.</span></span> <span data-ttu-id="4a666-166">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="4a666-166">This parameter is passed uninitialized.</span></span></param>
        <param name="bytesUsed"><span data-ttu-id="4a666-167">当此方法返回时，包含由转换生成的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-167">When this method returns, contains the number of bytes that were produced by the conversion.</span></span> <span data-ttu-id="4a666-168">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="4a666-168">This parameter is passed uninitialized.</span></span></param>
        <param name="completed"><span data-ttu-id="4a666-169">当此方法返回时，如果转换了所有由 <paramref name="charCount" /> 指定的字符，则包含 <see langword="true" />；否则包含 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-169">When this method returns, contains <see langword="true" /> if all the characters specified by <paramref name="charCount" /> were converted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4a666-170">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="4a666-170">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="4a666-171">将 Unicode 字符的数组转换为编码字节序列，并将结果存储在字节数组中。</span><span class="sxs-lookup"><span data-stu-id="4a666-171">Converts an array of Unicode characters to an encoded byte sequence and stores the result in an array of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-172">请记住，<xref:System.Text.Encoder> 对象在对 <xref:System.Text.Encoder.Convert%2A>的调用之间保存状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-172">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.Convert%2A>.</span></span> <span data-ttu-id="4a666-173">当应用程序使用数据流完成时，它应将 `flush` 参数设置为 `true`，以确保刷新状态信息。</span><span class="sxs-lookup"><span data-stu-id="4a666-173">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="4a666-174">通过此设置，编码器将忽略数据块末尾的无效字节，并清除内部缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4a666-174">With this setting, the encoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="4a666-175">逻辑单元中的所有剩余处理的数据（如代理项对的高代理项）都根据当前的回退设置进行转换。</span><span class="sxs-lookup"><span data-stu-id="4a666-175">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>  
  
 <span data-ttu-id="4a666-176">`Convert` 方法旨在在循环中用于对任意数量的输入（如从文件或流中读取的数据）进行解码。</span><span class="sxs-lookup"><span data-stu-id="4a666-176">The `Convert` method is designed to be used in a loop to decode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="4a666-177">它将编码操作的输出存储在固定大小的缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="4a666-177">It stores the output of the encoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="4a666-178">如果输出缓冲区不够大，<xref:System.Text.Encoder.GetBytes%2A> 会引发异常，但 <xref:System.Text.Encoder.Convert%2A> 会填充尽可能多的空间，并返回读取的字符和写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-178"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="4a666-179">有关更多注释，另请参阅 <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> 主题。</span><span class="sxs-lookup"><span data-stu-id="4a666-179">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 <span data-ttu-id="4a666-180">`completed` 输出参数指示输入缓冲区中的所有数据是否已转换并存储在输出缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="4a666-180">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="4a666-181">如果在 `charCount` 参数指定的字符数不超过 `byteCount` 参数指定的字节数，则将此参数设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="4a666-181">This parameter is set to `false` if the number of characters specified by the `charCount` parameter cannot be converted without exceeding the number of bytes specified by the `byteCount` parameter.</span></span> <span data-ttu-id="4a666-182">在这种情况下，应用程序应使用输出缓冲区的内容或提供新的输出缓冲区，将 `chars` 参数递增 `charsUsed` 参数指定的字符数，然后再次调用 `Convert` 方法来处理剩余输入。</span><span class="sxs-lookup"><span data-stu-id="4a666-182">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `chars` parameter by the number of characters specified by the `charsUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>  
  
 <span data-ttu-id="4a666-183">即使 `charsUsed` 和 `charCount` 参数相等，也可以将 `completed` 参数设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="4a666-183">The `completed` parameter can also be set to `false`, even though the `charsUsed` and `charCount` parameters are equal.</span></span> <span data-ttu-id="4a666-184">如果 <xref:System.Text.Encoder> 对象中仍有尚未存储在 `chars` 缓冲区中的数据，则会发生这种情况。</span><span class="sxs-lookup"><span data-stu-id="4a666-184">This situation occurs if there is still data in the <xref:System.Text.Encoder> object that has not been stored in the `chars` buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a666-185">下面的示例使用 <xref:System.Text.Encoder.Convert%2A> 方法将 UTF-16 字符的文件转换为 UTF-8，然后使用 <xref:System.Text.Decoder.Convert%2A> 方法将 UTF-8 字符转换回 UTF-16 字符中。</span><span class="sxs-lookup"><span data-stu-id="4a666-185">The following example uses the <xref:System.Text.Encoder.Convert%2A> method to convert a file of UTF-16 characters to UTF-8, then uses the <xref:System.Text.Decoder.Convert%2A> method to convert the UTF-8 characters back to UTF-16 characters.</span></span>  
  
 [!code-csharp[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/cs/edCvt.cs#1)]
 [!code-vb[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/vb/edCvt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a666-186"><paramref name="chars" /> 或 <paramref name="bytes" /> 为 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="4a666-186"><paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a666-187"><paramref name="charIndex" />、 <paramref name="charCount" />、 <paramref name="byteIndex" />或 <paramref name="byteCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="4a666-187"><paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a666-188">或</span><span class="sxs-lookup"><span data-stu-id="4a666-188">-or-</span></span> 
<span data-ttu-id="4a666-189"><paramref name="chars" /> - <paramref name="charIndex" /> 的长度小于 <paramref name="charCount" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-189">The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span></span>  
  
<span data-ttu-id="4a666-190">或</span><span class="sxs-lookup"><span data-stu-id="4a666-190">-or-</span></span> 
<span data-ttu-id="4a666-191"><paramref name="bytes" /> - <paramref name="byteIndex" /> 的长度小于 <paramref name="byteCount" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-191">The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a666-192">输出缓冲区太小，无法包含任何已转换的输出。</span><span class="sxs-lookup"><span data-stu-id="4a666-192">The output buffer is too small to contain any of the converted input.</span></span> <span data-ttu-id="4a666-193">输出缓冲区应大于或等于由 <see cref="Overload:System.Text.Encoder.GetByteCount" /> 方法指示的大小。</span><span class="sxs-lookup"><span data-stu-id="4a666-193">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Encoder.GetByteCount" /> method.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a666-194">发生了回退（有关更完整的说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="4a666-194">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="4a666-195">－和－</span><span class="sxs-lookup"><span data-stu-id="4a666-195">-and-</span></span> 
 <span data-ttu-id="4a666-196">将 <see cref="P:System.Text.Encoder.Fallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-196"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallback Fallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallback Fallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoder.Fallback" />
      <MemberSignature Language="VB.NET" Value="Public Property Fallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallback ^ Fallback { System::Text::EncoderFallback ^ get(); void set(System::Text::EncoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Fallback : System.Text.EncoderFallback with get, set" Usage="System.Text.Encoder.Fallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a666-197">获取或设置当前 <see cref="T:System.Text.EncoderFallback" /> 对象的 <see cref="T:System.Text.Encoder" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a666-197">Gets or sets a <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoder" /> object.</span></span></summary>
        <value><span data-ttu-id="4a666-198">一个 <see cref="T:System.Text.EncoderFallback" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a666-198">A <see cref="T:System.Text.EncoderFallback" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-199"><xref:System.Text.EncoderFallback> 对象表示一个错误处理程序，当不能将字符转换为编码的字节序列时，将调用该处理程序。</span><span class="sxs-lookup"><span data-stu-id="4a666-199">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a666-200">设置操作中的值为 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="4a666-200">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a666-201">无法在设置操作中赋新值，这是因为当前 <see cref="T:System.Text.EncoderFallbackBuffer" /> 对象含有尚未编码的数据。</span><span class="sxs-lookup"><span data-stu-id="4a666-201">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object contains data that has not been encoded yet.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a666-202">发生了回退（有关更完整的说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="4a666-202">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="4a666-203">－和－</span><span class="sxs-lookup"><span data-stu-id="4a666-203">-and-</span></span> 
 <span data-ttu-id="4a666-204">将 <see cref="P:System.Text.Encoder.Fallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-204"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.FallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="FallbackBuffer">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallbackBuffer FallbackBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallbackBuffer FallbackBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoder.FallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FallbackBuffer As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallbackBuffer ^ FallbackBuffer { System::Text::EncoderFallbackBuffer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FallbackBuffer : System.Text.EncoderFallbackBuffer" Usage="System.Text.Encoder.FallbackBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a666-205">获取与当前 <see cref="T:System.Text.EncoderFallbackBuffer" /> 对象关联的 <see cref="T:System.Text.Encoder" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a666-205">Gets the <see cref="T:System.Text.EncoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Encoder" /> object.</span></span></summary>
        <value><span data-ttu-id="4a666-206">一个 <see cref="T:System.Text.EncoderFallbackBuffer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4a666-206">A <see cref="T:System.Text.EncoderFallbackBuffer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-207"><xref:System.Text.Encoder.FallbackBuffer%2A> 对象表示 <xref:System.Text.EncoderFallback> 对象使用的数据。</span><span class="sxs-lookup"><span data-stu-id="4a666-207">The <xref:System.Text.Encoder.FallbackBuffer%2A> object represents data used by the <xref:System.Text.EncoderFallback> object.</span></span> <span data-ttu-id="4a666-208"><xref:System.Text.EncoderFallback> 对象表示一个错误处理程序，当不能将字符转换为编码的字节序列时，将调用该处理程序。</span><span class="sxs-lookup"><span data-stu-id="4a666-208">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.Fallback" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a666-209">在派生类中重写时，计算对一组字符进行编码所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-209">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (ReadOnlySpan&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetByteCount(System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As ReadOnlySpan(Of Char), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(ReadOnlySpan&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : ReadOnlySpan&lt;char&gt; * bool -&gt; int&#xA;override this.GetByteCount : ReadOnlySpan&lt;char&gt; * bool -&gt; int" Usage="encoder.GetByteCount (chars, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char* chars, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char* chars, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(char* chars, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : nativeptr&lt;char&gt; * int * bool -&gt; int&#xA;override this.GetByteCount : nativeptr&lt;char&gt; * int * bool -&gt; int" Usage="encoder.GetByteCount (chars, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a666-210">指向第一个要编码的字符的指针。</span><span class="sxs-lookup"><span data-stu-id="4a666-210">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="4a666-211">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="4a666-211">The number of characters to encode.</span></span></param>
        <param name="flush"><span data-ttu-id="4a666-212">若要在计算后模拟清除解码器的内部状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-212"><see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4a666-213">在派生类中重写时，计算对一组字符（从指定的字符指针处开始）进行编码所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-213">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span> <span data-ttu-id="4a666-214">一个参数指示计算后是否要清除编码器的内部状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-214">A parameter indicates whether to clear the internal state of the encoder after the calculation.</span></span></summary>
        <returns><span data-ttu-id="4a666-215">通过对指定字符和内部缓冲区中的所有字符进行编码而产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-215">The number of bytes produced by encoding the specified characters and any characters in the internal buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-216">此方法不会影响编码器的状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-216">This method does not affect the state of the encoder.</span></span>  
  
 <span data-ttu-id="4a666-217">若要计算 <xref:System.Text.Encoder.GetBytes%2A> 存储生成的字节所需的确切数组大小，应用程序应使用 <xref:System.Text.Encoder.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a666-217">To calculate the exact array size that <xref:System.Text.Encoder.GetBytes%2A> requires to store the resulting bytes, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>  
  
 <span data-ttu-id="4a666-218">如果在将 `flush` 设置为 `false`的情况下调用 `GetBytes`，编码器会将结尾字符存储在内部缓冲区中的数据块的末尾，并在下一个编码操作中使用这些字符。</span><span class="sxs-lookup"><span data-stu-id="4a666-218">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing characters at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="4a666-219">应用程序应在调用同一块上的 `GetBytes` 之前立即对数据块调用 `GetByteCount`，以便在计算中包含前一块中的任何尾随字符。</span><span class="sxs-lookup"><span data-stu-id="4a666-219">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a666-220"><paramref name="chars" /> 为 <see langword="null" />（在 Visual Basic .NET 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="4a666-220"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a666-221"><paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="4a666-221"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a666-222">发生了回退（有关更完整的说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="4a666-222">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="4a666-223">－和－</span><span class="sxs-lookup"><span data-stu-id="4a666-223">-and-</span></span> 
 <span data-ttu-id="4a666-224">将 <see cref="P:System.Text.Encoder.Fallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-224"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="4a666-225">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4a666-225">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="4a666-226">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4a666-226">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetByteCount (char[] chars, int index, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteCount (chars As Char(), index As Integer, count As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : char[] * int * int * bool -&gt; int" Usage="encoder.GetByteCount (chars, index, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a666-227">包含要编码的字符集的字符数组。</span><span class="sxs-lookup"><span data-stu-id="4a666-227">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="4a666-228">第一个要编码的字符的索引。</span><span class="sxs-lookup"><span data-stu-id="4a666-228">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="4a666-229">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="4a666-229">The number of characters to encode.</span></span></param>
        <param name="flush"><span data-ttu-id="4a666-230">若要在计算后模拟清除解码器的内部状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-230"><see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4a666-231">在派生类中重写时，计算对指定字符数组中的一组字符进行编码所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-231">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span> <span data-ttu-id="4a666-232">一个参数指示计算后是否要清除编码器的内部状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-232">A parameter indicates whether to clear the internal state of the encoder after the calculation.</span></span></summary>
        <returns><span data-ttu-id="4a666-233">通过对指定字符和内部缓冲区中的所有字符进行编码而产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-233">The number of bytes produced by encoding the specified characters and any characters in the internal buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-234">此方法不会影响编码器的状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-234">This method does not affect the state of the encoder.</span></span>  
  
 <span data-ttu-id="4a666-235">若要计算 <xref:System.Text.Encoder.GetBytes%2A> 存储生成的字节所需的确切数组大小，应用程序应使用 <xref:System.Text.Encoder.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a666-235">To calculate the exact array size that <xref:System.Text.Encoder.GetBytes%2A> requires to store the resulting bytes, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>  
  
 <span data-ttu-id="4a666-236">如果在将 `flush` 设置为 `false`的情况下调用 `GetBytes`，编码器会将结尾字符存储在内部缓冲区中的数据块的末尾，并在下一个编码操作中使用这些字符。</span><span class="sxs-lookup"><span data-stu-id="4a666-236">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing characters at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="4a666-237">应用程序应在调用同一块上的 `GetBytes` 之前立即对数据块调用 `GetByteCount`，以便在计算中包含前一块中的任何尾随字符。</span><span class="sxs-lookup"><span data-stu-id="4a666-237">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a666-238">下面的代码示例演示如何使用 <xref:System.Text.Encoder.GetByteCount%2A> 方法返回使用 Unicode <xref:System.Text.Encoder>对一组字符进行编码所需的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-238">The following code example demonstrates how to use the <xref:System.Text.Encoder.GetByteCount%2A> method to return the number of bytes required to encode an array of characters using a Unicode <xref:System.Text.Encoder>.</span></span>  
  
 [!code-cpp[System.Text.Encoder.GetByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder.GetByteCount Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.Encoder.GetByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder.GetByteCount Example/CS/getbytecount-char[]-int32-int32.cs#1)]
 [!code-vb[System.Text.Encoder.GetByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder.GetByteCount Example/VB/getbytecount-char[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a666-239"><paramref name="chars" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-239"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a666-240"><paramref name="index" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="4a666-240"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a666-241">或</span><span class="sxs-lookup"><span data-stu-id="4a666-241">-or-</span></span> 
 <span data-ttu-id="4a666-242"><paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="chars" /> 中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="4a666-242"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a666-243">发生了回退（有关更完整的说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="4a666-243">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="4a666-244">－和－</span><span class="sxs-lookup"><span data-stu-id="4a666-244">-and-</span></span> 
 <span data-ttu-id="4a666-245">将 <see cref="P:System.Text.Encoder.Fallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-245"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a666-246">在派生类中重写时，将一组字符编码为一个字节序列。</span><span class="sxs-lookup"><span data-stu-id="4a666-246">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; * bool -&gt; int&#xA;override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; * bool -&gt; int" Usage="encoder.GetBytes (chars, bytes, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <param name="flush">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int * bool -&gt; int&#xA;override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int * bool -&gt; int" Usage="encoder.GetBytes (chars, charCount, bytes, byteCount, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a666-247">指向第一个要编码的字符的指针。</span><span class="sxs-lookup"><span data-stu-id="4a666-247">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="4a666-248">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="4a666-248">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="4a666-249">一个指针，指向开始写入所产生的字节序列的位置。</span><span class="sxs-lookup"><span data-stu-id="4a666-249">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="4a666-250">最多写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-250">The maximum number of bytes to write.</span></span></param>
        <param name="flush"><span data-ttu-id="4a666-251">如果要在转换后清除编码器的内部状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-251"><see langword="true" /> to clear the internal state of the encoder after the conversion; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4a666-252">在派生类中重写时，将一组字符（从指定的字符指针处开始）和内部缓冲区中的任何字符编码为从指定字节指针开始存储的字节序列。</span><span class="sxs-lookup"><span data-stu-id="4a666-252">When overridden in a derived class, encodes a set of characters starting at the specified character pointer and any characters in the internal buffer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span> <span data-ttu-id="4a666-253">一个参数指示转换后是否清除编码器的内部状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-253">A parameter indicates whether to clear the internal state of the encoder after the conversion.</span></span></summary>
        <returns><span data-ttu-id="4a666-254">在由 <paramref name="bytes" /> 参数指示的位置处写入的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-254">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-255">请记住，<xref:System.Text.Encoder> 对象在对 <xref:System.Text.Encoder.GetBytes%2A>的调用之间保存状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-255">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.GetBytes%2A>.</span></span> <span data-ttu-id="4a666-256">当应用程序使用数据流完成时，它应将 `flush` 参数设置为在上一次调用 `GetBytes` `true`，以确保刷新状态信息并正确终止编码的字节。</span><span class="sxs-lookup"><span data-stu-id="4a666-256">When the application is done with a stream of data, it should set the `flush` parameter to `true` in the last call to `GetBytes` to make sure that the state information is flushed and that the encoded bytes are properly terminated.</span></span> <span data-ttu-id="4a666-257">通过此设置，编码器将忽略数据块末尾的无效字节，如不匹配的代理项或不完整的组合序列，并清除内部缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4a666-257">With this setting, the encoder ignores invalid bytes at the end of the data block, such as unmatched surrogates or incomplete combining sequences, and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="4a666-258">若要计算 `GetBytes` 存储所生成的字符所需的确切缓冲区大小，应用程序应使用 <xref:System.Text.Encoder.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a666-258">To calculate the exact buffer size that `GetBytes` requires to store the resulting characters, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>  
  
 <span data-ttu-id="4a666-259">如果在将 `flush` 设置为 `false`的情况下调用 `GetBytes`，编码器会将结尾字节存储在内部缓冲区中的数据块的末尾，并在下一编码操作中使用它们。</span><span class="sxs-lookup"><span data-stu-id="4a666-259">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="4a666-260">应用程序应在调用同一块上的 `GetBytes` 之前立即对数据块调用 `GetByteCount`，以便在计算中包含前一块中的任何尾随字符。</span><span class="sxs-lookup"><span data-stu-id="4a666-260">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="4a666-261">如果你的应用程序要转换输入流的多个段，请考虑使用 <xref:System.Text.Encoder.Convert%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4a666-261">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Encoder.Convert%2A> method.</span></span> <span data-ttu-id="4a666-262">如果输出缓冲区不够大，<xref:System.Text.Encoder.GetBytes%2A> 会引发异常，但 <xref:System.Text.Encoder.Convert%2A> 会填充尽可能多的空间，并返回读取的字符和写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-262"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="4a666-263">有关更多注释，另请参阅 <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> 主题。</span><span class="sxs-lookup"><span data-stu-id="4a666-263">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a666-264"><paramref name="chars" /> 为 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="4a666-264"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="4a666-265">或</span><span class="sxs-lookup"><span data-stu-id="4a666-265">-or-</span></span> 
 <span data-ttu-id="4a666-266"><paramref name="bytes" /> 为 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="4a666-266"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a666-267"><paramref name="charCount" /> 或 <paramref name="byteCount" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="4a666-267"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a666-268"><paramref name="byteCount" /> 少于所产生的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-268"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a666-269">发生了回退（有关更完整的说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="4a666-269">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="4a666-270">－和－</span><span class="sxs-lookup"><span data-stu-id="4a666-270">-and-</span></span> 
 <span data-ttu-id="4a666-271">将 <see cref="P:System.Text.Encoder.Fallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-271"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="4a666-272">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="4a666-272">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="4a666-273">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="4a666-273">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] * int * int * byte[] * int * bool -&gt; int" Usage="encoder.GetBytes (chars, charIndex, charCount, bytes, byteIndex, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="4a666-274">包含要编码的字符集的字符数组。</span><span class="sxs-lookup"><span data-stu-id="4a666-274">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="4a666-275">第一个要编码的字符的索引。</span><span class="sxs-lookup"><span data-stu-id="4a666-275">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="4a666-276">要编码的字符的数目。</span><span class="sxs-lookup"><span data-stu-id="4a666-276">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="4a666-277">要包含所产生的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="4a666-277">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="4a666-278">要开始写入所产生的字节序列的索引位置。</span><span class="sxs-lookup"><span data-stu-id="4a666-278">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="flush"><span data-ttu-id="4a666-279">如果要在转换后清除编码器的内部状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-279"><see langword="true" /> to clear the internal state of the encoder after the conversion; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4a666-280">在派生类中重写时，将指定字符数组中的一组字符和内部缓冲区中的任何字符编码到指定的字节数组中。</span><span class="sxs-lookup"><span data-stu-id="4a666-280">When overridden in a derived class, encodes a set of characters from the specified character array and any characters in the internal buffer into the specified byte array.</span></span> <span data-ttu-id="4a666-281">一个参数指示转换后是否清除编码器的内部状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-281">A parameter indicates whether to clear the internal state of the encoder after the conversion.</span></span></summary>
        <returns><span data-ttu-id="4a666-282">写入 <paramref name="bytes" /> 的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-282">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-283">请记住，<xref:System.Text.Encoder> 对象在对 <xref:System.Text.Encoder.GetBytes%2A>的调用之间保存状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-283">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.GetBytes%2A>.</span></span> <span data-ttu-id="4a666-284">当应用程序使用数据流完成时，它应将 `flush` 参数设置为在上一次调用 `GetBytes` `true`，以确保刷新状态信息并正确终止编码的字节。</span><span class="sxs-lookup"><span data-stu-id="4a666-284">When the application is done with a stream of data, it should set the `flush` parameter to `true` in the last call to `GetBytes` to make sure that the state information is flushed and that the encoded bytes are properly terminated.</span></span> <span data-ttu-id="4a666-285">通过此设置，编码器将忽略数据块末尾的无效字节，如不匹配的代理项或不完整的组合序列，并清除内部缓冲区。</span><span class="sxs-lookup"><span data-stu-id="4a666-285">With this setting, the encoder ignores invalid bytes at the end of the data block, such as unmatched surrogates or incomplete combining sequences, and clears the internal buffer.</span></span>  
  
 <span data-ttu-id="4a666-286">若要计算 `GetBytes` 存储所生成的字符所需的确切缓冲区大小，应用程序应使用 <xref:System.Text.Encoder.GetByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="4a666-286">To calculate the exact buffer size that `GetBytes` requires to store the resulting characters, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>  
  
 <span data-ttu-id="4a666-287">如果在将 `flush` 设置为 `false`的情况下调用 `GetBytes`，编码器会将结尾字节存储在内部缓冲区中的数据块的末尾，并在下一编码操作中使用它们。</span><span class="sxs-lookup"><span data-stu-id="4a666-287">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="4a666-288">应用程序应在调用同一块上的 `GetBytes` 之前立即对数据块调用 `GetByteCount`，以便在计算中包含前一块中的任何尾随字符。</span><span class="sxs-lookup"><span data-stu-id="4a666-288">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>  
  
 <span data-ttu-id="4a666-289">如果你的应用程序要转换输入流的多个段，请考虑使用 <xref:System.Text.Encoder.Convert%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4a666-289">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Encoder.Convert%2A> method.</span></span> <span data-ttu-id="4a666-290">如果输出缓冲区不够大，<xref:System.Text.Encoder.GetBytes%2A> 会引发异常，但 <xref:System.Text.Encoder.Convert%2A> 会填充尽可能多的空间，并返回读取的字符和写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="4a666-290"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="4a666-291">有关更多注释，另请参阅 <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> 主题。</span><span class="sxs-lookup"><span data-stu-id="4a666-291">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a666-292">下面的示例演示如何对字符数组中的一系列元素进行编码，并将已编码的字节存储在字节数组中的一系列元素中。</span><span class="sxs-lookup"><span data-stu-id="4a666-292">The following example demonstrates how to encode a range of elements from a character array and store the encoded bytes in a range of elements in a byte array.</span></span> <span data-ttu-id="4a666-293"><xref:System.Text.Encoder.GetByteCount%2A> 方法用于确定 <xref:System.Text.Encoder.GetBytes%2A>所需的数组大小。</span><span class="sxs-lookup"><span data-stu-id="4a666-293">The <xref:System.Text.Encoder.GetByteCount%2A> method is used to determine the size of the array required by <xref:System.Text.Encoder.GetBytes%2A>.</span></span>  
  
 [!code-cpp[System.Text.Encoder.GetBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder.GetBytes Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.Encoder.GetBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder.GetBytes Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.Encoder.GetBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder.GetBytes Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4a666-294"><paramref name="chars" /> 为 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="4a666-294"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="4a666-295">或</span><span class="sxs-lookup"><span data-stu-id="4a666-295">-or-</span></span> 
 <span data-ttu-id="4a666-296"><paramref name="bytes" /> 为 <see langword="null" /> (<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="4a666-296"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4a666-297"><paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="4a666-297"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="4a666-298">或</span><span class="sxs-lookup"><span data-stu-id="4a666-298">-or-</span></span> 
 <span data-ttu-id="4a666-299"><paramref name="charIndex" /> 和 <paramref name="charCount" /> 不表示 <paramref name="chars" />中的有效范围。</span><span class="sxs-lookup"><span data-stu-id="4a666-299"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="4a666-300">或</span><span class="sxs-lookup"><span data-stu-id="4a666-300">-or-</span></span> 
 <span data-ttu-id="4a666-301"><paramref name="byteIndex" /> 不是 <paramref name="bytes" /> 中的有效索引。</span><span class="sxs-lookup"><span data-stu-id="4a666-301"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4a666-302"><paramref name="bytes" /> 中从 <paramref name="byteIndex" /> 到数组结尾没有足够的容量来容纳所产生的字节。</span><span class="sxs-lookup"><span data-stu-id="4a666-302"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="4a666-303">发生了回退（有关更完整的说明，请参阅 [.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)）</span><span class="sxs-lookup"><span data-stu-id="4a666-303">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="4a666-304">－和－</span><span class="sxs-lookup"><span data-stu-id="4a666-304">-and-</span></span> 
 <span data-ttu-id="4a666-305">将 <see cref="P:System.Text.Encoder.Fallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</span><span class="sxs-lookup"><span data-stu-id="4a666-305"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoder.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a666-306">在派生类中重写时，将编码器设置回它的初始状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-306">When overridden in a derived class, sets the encoder back to its initial state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a666-307">此方法清除 <xref:System.Text.Encoder> 对象的内部状态。</span><span class="sxs-lookup"><span data-stu-id="4a666-307">This method clears the internal state of the <xref:System.Text.Encoder> object.</span></span> <span data-ttu-id="4a666-308">方法会清除以前对 <xref:System.Text.Encoder.GetBytes%2A> 或 <xref:System.Text.Decoder.Convert%2A>所保留的任何状态信息，其中包括上一个数据块结尾处的尾随字符，如不匹配的高代理项。</span><span class="sxs-lookup"><span data-stu-id="4a666-308">The method clears any state information preserved from a previous call to <xref:System.Text.Encoder.GetBytes%2A> or <xref:System.Text.Decoder.Convert%2A>, including trailing characters at the end of the previous data block, such as an unmatched high surrogate.</span></span>  
  
 <span data-ttu-id="4a666-309">如果你的应用程序想要重用同一编码器（即使 <xref:System.Text.Encoder.GetBytes%2A> 或 <xref:System.Text.Encoder.GetByteCount%2A>引发了异常，或者应用程序切换了流），则应调用 `Reset` 方法。</span><span class="sxs-lookup"><span data-stu-id="4a666-309">Your application should call the `Reset` method if it wants to reuse the same encoder even after an exception is thrown by <xref:System.Text.Encoder.GetBytes%2A> or <xref:System.Text.Encoder.GetByteCount%2A>, or if the application switches streams.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
