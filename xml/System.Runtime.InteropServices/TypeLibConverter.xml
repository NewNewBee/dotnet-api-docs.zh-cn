<Type Name="TypeLibConverter" FullName="System.Runtime.InteropServices.TypeLibConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8598c3b2b21e2cd43414b4a15fe95abaec473ac1" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73389917" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeLibConverter : System.Runtime.InteropServices.ITypeLibConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeLibConverter extends System.Object implements class System.Runtime.InteropServices.ITypeLibConverter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.TypeLibConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeLibConverter&#xA;Implements ITypeLibConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeLibConverter sealed : System::Runtime::InteropServices::ITypeLibConverter" />
  <TypeSignature Language="F#" Value="type TypeLibConverter = class&#xA;    interface ITypeLibConverter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ITypeLibConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("f1c3bf79-c3e4-11d3-88e7-00902754c43a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("F1C3BF79-C3E4-11d3-88E7-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="80cdb-101">提供一组服务，这些服务将托管程序集转换为 COM 类型库或进行反向转换。</span><span class="sxs-lookup"><span data-stu-id="80cdb-101">Provides a set of services that convert a managed assembly to a COM type library and vice versa.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLibConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLibConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80cdb-102">初始化 <see cref="T:System.Runtime.InteropServices.TypeLibConverter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="80cdb-102">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.TypeLibConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertAssemblyToTypeLib">
      <MemberSignature Language="C#" Value="public object ConvertAssemblyToTypeLib (System.Reflection.Assembly assembly, string strTypeLibName, System.Runtime.InteropServices.TypeLibExporterFlags flags, System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertAssemblyToTypeLib(class System.Reflection.Assembly assembly, string strTypeLibName, valuetype System.Runtime.InteropServices.TypeLibExporterFlags flags, class System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertAssemblyToTypeLib(System::Reflection::Assembly ^ assembly, System::String ^ strTypeLibName, System::Runtime::InteropServices::TypeLibExporterFlags flags, System::Runtime::InteropServices::ITypeLibExporterNotifySink ^ notifySink);" />
      <MemberSignature Language="F#" Value="abstract member ConvertAssemblyToTypeLib : System.Reflection.Assembly * string * System.Runtime.InteropServices.TypeLibExporterFlags * System.Runtime.InteropServices.ITypeLibExporterNotifySink -&gt; obj&#xA;override this.ConvertAssemblyToTypeLib : System.Reflection.Assembly * string * System.Runtime.InteropServices.TypeLibExporterFlags * System.Runtime.InteropServices.ITypeLibExporterNotifySink -&gt; obj" Usage="typeLibConverter.ConvertAssemblyToTypeLib (assembly, strTypeLibName, flags, notifySink)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="strTypeLibName" Type="System.String" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibExporterFlags" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibExporterNotifySink" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="80cdb-103">要转换的程序集。</span><span class="sxs-lookup"><span data-stu-id="80cdb-103">The assembly to convert.</span></span></param>
        <param name="strTypeLibName"><span data-ttu-id="80cdb-104">产生的类型库的文件名。</span><span class="sxs-lookup"><span data-stu-id="80cdb-104">The file name of the resulting type library.</span></span></param>
        <param name="flags"><span data-ttu-id="80cdb-105">指示任何特殊设置的 <see cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" /> 值。</span><span class="sxs-lookup"><span data-stu-id="80cdb-105">A <see cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" /> value indicating any special settings.</span></span></param>
        <param name="notifySink"><span data-ttu-id="80cdb-106">由调用方实现的 <see cref="T:System.Runtime.InteropServices.ITypeLibExporterNotifySink" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="80cdb-106">The <see cref="T:System.Runtime.InteropServices.ITypeLibExporterNotifySink" /> interface implemented by the caller.</span></span></param>
        <summary><span data-ttu-id="80cdb-107">将程序集转换为 COM 类型库。</span><span class="sxs-lookup"><span data-stu-id="80cdb-107">Converts an assembly to a COM type library.</span></span></summary>
        <returns><span data-ttu-id="80cdb-108">一个实现 <see langword="ITypeLib" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="80cdb-108">An object that implements the <see langword="ITypeLib" /> interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cdb-109">有关 `ITypeLib`的详细信息，请参阅 MSDN library 中的现有文档。</span><span class="sxs-lookup"><span data-stu-id="80cdb-109">For more information on `ITypeLib`, please see its existing documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/CPP/convert2.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/CS/convert2.cs#1)]
 [!code-vb[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1/VB/convert2.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="80cdb-110">用于调用非托管代码的权限。</span><span class="sxs-lookup"><span data-stu-id="80cdb-110">for permission to call unmanaged code.</span></span>  
  
<span data-ttu-id="80cdb-111">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="80cdb-111">Security Action: Demand.</span></span>  
  
<span data-ttu-id="80cdb-112">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="80cdb-112">Associated Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypeLibToAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="80cdb-113">将 COM 类型库转换为程序集。</span><span class="sxs-lookup"><span data-stu-id="80cdb-113">Converts a COM type library to an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypeLibToAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, int32 flags, class System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, unsigned int8[] publicKey, class System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTypeLibToAssembly (typeLib As Object, asmFileName As String, flags As Integer, notifySink As ITypeLibImporterNotifySink, publicKey As Byte(), keyPair As StrongNameKeyPair, unsafeInterfaces As Boolean) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ ConvertTypeLibToAssembly(System::Object ^ typeLib, System::String ^ asmFileName, int flags, System::Runtime::InteropServices::ITypeLibImporterNotifySink ^ notifySink, cli::array &lt;System::Byte&gt; ^ publicKey, System::Reflection::StrongNameKeyPair ^ keyPair, bool unsafeInterfaces);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTypeLibToAssembly : obj * string * int * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * bool -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.ConvertTypeLibToAssembly : obj * string * int * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * bool -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="typeLibConverter.ConvertTypeLibToAssembly (typeLib, asmFileName, flags, notifySink, publicKey, keyPair, unsafeInterfaces)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
        <Parameter Name="asmFileName" Type="System.String" />
        <Parameter Name="flags" Type="System.Int32" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
        <Parameter Name="publicKey" Type="System.Byte[]" />
        <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
        <Parameter Name="unsafeInterfaces" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeLib"><span data-ttu-id="80cdb-114">实现 <see langword="ITypeLib" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="80cdb-114">The object that implements the <see langword="ITypeLib" /> interface.</span></span></param>
        <param name="asmFileName"><span data-ttu-id="80cdb-115">产生的程序集的文件名。</span><span class="sxs-lookup"><span data-stu-id="80cdb-115">The file name of the resulting assembly.</span></span></param>
        <param name="flags"><span data-ttu-id="80cdb-116">指示任何特殊设置的 <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> 值。</span><span class="sxs-lookup"><span data-stu-id="80cdb-116">A <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> value indicating any special settings.</span></span></param>
        <param name="notifySink"><span data-ttu-id="80cdb-117">由调用方实现的 <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="80cdb-117"><see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> interface implemented by the caller.</span></span></param>
        <param name="publicKey"><span data-ttu-id="80cdb-118">包含公钥的 <see langword="byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="80cdb-118">A <see langword="byte" /> array containing the public key.</span></span></param>
        <param name="keyPair"><span data-ttu-id="80cdb-119">包含公钥和私钥对的 <see cref="T:System.Reflection.StrongNameKeyPair" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="80cdb-119">A <see cref="T:System.Reflection.StrongNameKeyPair" /> object containing the public and private cryptographic key pair.</span></span></param>
        <param name="unsafeInterfaces"><span data-ttu-id="80cdb-120">如果为 <see langword="true" />，则接口要求在链接时检查 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="80cdb-120">If <see langword="true" />, the interfaces require link time checks for <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> permission.</span></span> <span data-ttu-id="80cdb-121">如果为 <see langword="false" />，则接口要求在运行时检查，运行时检查需要堆栈审核且更加昂贵，但有助于提供更好的保护。</span><span class="sxs-lookup"><span data-stu-id="80cdb-121">If <see langword="false" />, the interfaces require run time checks that require a stack walk and are more expensive, but help provide greater protection.</span></span></param>
        <summary><span data-ttu-id="80cdb-122">将 COM 类型库转换为程序集。</span><span class="sxs-lookup"><span data-stu-id="80cdb-122">Converts a COM type library to an assembly.</span></span></summary>
        <returns><span data-ttu-id="80cdb-123">包含已转换的类型库的 <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="80cdb-123">An <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object containing the converted type library.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cdb-124">如果你不想为程序集生成强名称，则只要 `flags` 不等于 <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>，就 `publicKey` 和 `null``keyPair` 有效。</span><span class="sxs-lookup"><span data-stu-id="80cdb-124">If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>.</span></span> <span data-ttu-id="80cdb-125">否则，必须至少指定其中一个参数。</span><span class="sxs-lookup"><span data-stu-id="80cdb-125">Otherwise, at least one of these parameters must be specified.</span></span> <span data-ttu-id="80cdb-126">如果 `null``publicKey`，则将在目标程序集的清单元数据中设置 `keyPair` 中的公钥，并将根据程序集的内容生成签名。</span><span class="sxs-lookup"><span data-stu-id="80cdb-126">If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly.</span></span> <span data-ttu-id="80cdb-127">如果 `null``keyPair`，`publicKey` 将在目标程序集的清单元数据中进行设置，并且不会生成签名。</span><span class="sxs-lookup"><span data-stu-id="80cdb-127">If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated.</span></span> <span data-ttu-id="80cdb-128">指定这两个参数通常并不有用，并可能导致签名无效。</span><span class="sxs-lookup"><span data-stu-id="80cdb-128">Specifying both parameters is not generally useful, and can result in an invalid signature.</span></span>  
  
 <span data-ttu-id="80cdb-129">有关 `ITypeLib`的详细信息，请参阅 MSDN library 中的现有文档。</span><span class="sxs-lookup"><span data-stu-id="80cdb-129">For more information on `ITypeLib`, please see its existing documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80cdb-130"><paramref name="typeLib" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-130"><paramref name="typeLib" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="80cdb-131">或</span><span class="sxs-lookup"><span data-stu-id="80cdb-131">-or-</span></span> 
 <span data-ttu-id="80cdb-132"><paramref name="asmFileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-132"><paramref name="asmFileName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="80cdb-133">或</span><span class="sxs-lookup"><span data-stu-id="80cdb-133">-or-</span></span> 
 <span data-ttu-id="80cdb-134"><paramref name="notifySink" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-134"><paramref name="notifySink" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80cdb-135"><paramref name="asmFileName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="80cdb-135"><paramref name="asmFileName" /> is an empty string.</span></span>  
  
<span data-ttu-id="80cdb-136">或</span><span class="sxs-lookup"><span data-stu-id="80cdb-136">-or-</span></span> 
 <span data-ttu-id="80cdb-137"><paramref name="asmFileName" /> 超过系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="80cdb-137"><paramref name="asmFileName" /> is longer than the system-defined maximum length.</span></span> <span data-ttu-id="80cdb-138">有关详细信息，请参阅 <see cref="T:System.IO.PathTooLongException" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-138">For more information, see <see cref="T:System.IO.PathTooLongException" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="80cdb-139"><paramref name="flags" /> 不是 <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-139"><paramref name="flags" /> is not <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />.</span></span>  
  
<span data-ttu-id="80cdb-140">或</span><span class="sxs-lookup"><span data-stu-id="80cdb-140">-or-</span></span> 
 <span data-ttu-id="80cdb-141"><paramref name="publicKey" /> 和 <paramref name="keyPair" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-141"><paramref name="publicKey" /> and <paramref name="keyPair" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="80cdb-142">产生的元数据存在错误，阻止加载任何类型。</span><span class="sxs-lookup"><span data-stu-id="80cdb-142">The metadata produced has errors preventing any types from loading.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="80cdb-143">用于调用非托管代码的权限。</span><span class="sxs-lookup"><span data-stu-id="80cdb-143">for permission to call unmanaged code.</span></span>  
  
<span data-ttu-id="80cdb-144">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="80cdb-144">Security Action: Demand.</span></span>  
  
<span data-ttu-id="80cdb-145">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="80cdb-145">Associated Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeLibToAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, System.Runtime.InteropServices.TypeLibImporterFlags flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, valuetype System.Runtime.InteropServices.TypeLibImporterFlags flags, class System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, unsigned int8[] publicKey, class System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, class System.Version asmVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTypeLibToAssembly (typeLib As Object, asmFileName As String, flags As TypeLibImporterFlags, notifySink As ITypeLibImporterNotifySink, publicKey As Byte(), keyPair As StrongNameKeyPair, asmNamespace As String, asmVersion As Version) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Emit::AssemblyBuilder ^ ConvertTypeLibToAssembly(System::Object ^ typeLib, System::String ^ asmFileName, System::Runtime::InteropServices::TypeLibImporterFlags flags, System::Runtime::InteropServices::ITypeLibImporterNotifySink ^ notifySink, cli::array &lt;System::Byte&gt; ^ publicKey, System::Reflection::StrongNameKeyPair ^ keyPair, System::String ^ asmNamespace, Version ^ asmVersion);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTypeLibToAssembly : obj * string * System.Runtime.InteropServices.TypeLibImporterFlags * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * string * Version -&gt; System.Reflection.Emit.AssemblyBuilder&#xA;override this.ConvertTypeLibToAssembly : obj * string * System.Runtime.InteropServices.TypeLibImporterFlags * System.Runtime.InteropServices.ITypeLibImporterNotifySink * byte[] * System.Reflection.StrongNameKeyPair * string * Version -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="typeLibConverter.ConvertTypeLibToAssembly (typeLib, asmFileName, flags, notifySink, publicKey, keyPair, asmNamespace, asmVersion)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
        <Parameter Name="asmFileName" Type="System.String" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibImporterFlags" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
        <Parameter Name="publicKey" Type="System.Byte[]" />
        <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
        <Parameter Name="asmNamespace" Type="System.String" />
        <Parameter Name="asmVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="typeLib"><span data-ttu-id="80cdb-146">实现 <see langword="ITypeLib" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="80cdb-146">The object that implements the <see langword="ITypeLib" /> interface.</span></span></param>
        <param name="asmFileName"><span data-ttu-id="80cdb-147">产生的程序集的文件名。</span><span class="sxs-lookup"><span data-stu-id="80cdb-147">The file name of the resulting assembly.</span></span></param>
        <param name="flags"><span data-ttu-id="80cdb-148">指示任何特殊设置的 <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> 值。</span><span class="sxs-lookup"><span data-stu-id="80cdb-148">A <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> value indicating any special settings.</span></span></param>
        <param name="notifySink"><span data-ttu-id="80cdb-149">由调用方实现的 <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="80cdb-149"><see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> interface implemented by the caller.</span></span></param>
        <param name="publicKey"><span data-ttu-id="80cdb-150">包含公钥的 <see langword="byte" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="80cdb-150">A <see langword="byte" /> array containing the public key.</span></span></param>
        <param name="keyPair"><span data-ttu-id="80cdb-151">包含公钥和私钥对的 <see cref="T:System.Reflection.StrongNameKeyPair" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="80cdb-151">A <see cref="T:System.Reflection.StrongNameKeyPair" /> object containing the public and private cryptographic key pair.</span></span></param>
        <param name="asmNamespace"><span data-ttu-id="80cdb-152">产生的程序集的命名空间。</span><span class="sxs-lookup"><span data-stu-id="80cdb-152">The namespace for the resulting assembly.</span></span></param>
        <param name="asmVersion"><span data-ttu-id="80cdb-153">产生的程序集的版本。</span><span class="sxs-lookup"><span data-stu-id="80cdb-153">The version of the resulting assembly.</span></span> <span data-ttu-id="80cdb-154">如果为 <see langword="null" />，则使用该版本的类型库。</span><span class="sxs-lookup"><span data-stu-id="80cdb-154">If <see langword="null" />, the version of the type library is used.</span></span></param>
        <summary><span data-ttu-id="80cdb-155">将 COM 类型库转换为程序集。</span><span class="sxs-lookup"><span data-stu-id="80cdb-155">Converts a COM type library to an assembly.</span></span></summary>
        <returns><span data-ttu-id="80cdb-156">包含已转换的类型库的 <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="80cdb-156">An <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object containing the converted type library.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80cdb-157">如果你不想为程序集生成强名称，则只要 `flags` 不等于 <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>，就 `publicKey` 和 `null``keyPair` 有效。</span><span class="sxs-lookup"><span data-stu-id="80cdb-157">If you do not want to generate a strong name for your assembly, it is valid for `publicKey` and `keyPair` to be `null`, as long as `flags` does not equal <xref:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly?displayProperty=nameWithType>.</span></span> <span data-ttu-id="80cdb-158">否则，必须至少指定其中一个参数。</span><span class="sxs-lookup"><span data-stu-id="80cdb-158">Otherwise, atleast one of these parameters must be specified.</span></span> <span data-ttu-id="80cdb-159">如果 `null``publicKey`，则将在目标程序集的清单元数据中设置 `keyPair` 中的公钥，并将根据程序集的内容生成签名。</span><span class="sxs-lookup"><span data-stu-id="80cdb-159">If `publicKey` is `null`, the public key in `keyPair` will be set in the target assembly's manifest metadata and a signature will be generated based on the contents of the assembly.</span></span> <span data-ttu-id="80cdb-160">如果 `null``keyPair`，`publicKey` 将在目标程序集的清单元数据中进行设置，并且不会生成签名。</span><span class="sxs-lookup"><span data-stu-id="80cdb-160">If `keyPair` is `null`, `publicKey` will be set in the target assembly's manifest metadata and no signature will be generated.</span></span> <span data-ttu-id="80cdb-161">指定这两个参数通常并不有用，并可能导致签名无效。</span><span class="sxs-lookup"><span data-stu-id="80cdb-161">Specifying both parameters is not generally useful, and can result in an invalid signature.</span></span>  
  
 <span data-ttu-id="80cdb-162">有关 `ITypeLib`的详细信息，请参阅 MSDN library 中的现有文档。</span><span class="sxs-lookup"><span data-stu-id="80cdb-162">For more information on `ITypeLib`, please see its existing documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/CPP/convert1.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/CS/convert1.cs#1)]
 [!code-vb[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.ConvertTypelibToASSembly/VB/convert1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="80cdb-163"><paramref name="typeLib" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-163"><paramref name="typeLib" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="80cdb-164">或</span><span class="sxs-lookup"><span data-stu-id="80cdb-164">-or-</span></span> 
 <span data-ttu-id="80cdb-165"><paramref name="asmFileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-165"><paramref name="asmFileName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="80cdb-166">或</span><span class="sxs-lookup"><span data-stu-id="80cdb-166">-or-</span></span> 
 <span data-ttu-id="80cdb-167"><paramref name="notifySink" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-167"><paramref name="notifySink" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="80cdb-168"><paramref name="asmFileName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="80cdb-168"><paramref name="asmFileName" /> is an empty string.</span></span>  
  
<span data-ttu-id="80cdb-169">或</span><span class="sxs-lookup"><span data-stu-id="80cdb-169">-or-</span></span> 
 <span data-ttu-id="80cdb-170"><paramref name="asmFileName" /> 超过系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="80cdb-170"><paramref name="asmFileName" /> is longer than the system-defined maximum length.</span></span> <span data-ttu-id="80cdb-171">有关详细信息，请参阅 <see cref="T:System.IO.PathTooLongException" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-171">For more information, see <see cref="T:System.IO.PathTooLongException" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="80cdb-172"><paramref name="flags" /> 不是 <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-172"><paramref name="flags" /> is not <see cref="F:System.Runtime.InteropServices.TypeLibImporterFlags.PrimaryInteropAssembly" />.</span></span>  
  
<span data-ttu-id="80cdb-173">或</span><span class="sxs-lookup"><span data-stu-id="80cdb-173">-or-</span></span> 
 <span data-ttu-id="80cdb-174"><paramref name="publicKey" /> 和 <paramref name="keyPair" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-174"><paramref name="publicKey" /> and <paramref name="keyPair" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="80cdb-175">产生的元数据存在错误，阻止加载任何类型。</span><span class="sxs-lookup"><span data-stu-id="80cdb-175">The metadata produced has errors preventing any types from loading.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="80cdb-176">用于调用非托管代码的权限。</span><span class="sxs-lookup"><span data-stu-id="80cdb-176">for permission to call unmanaged code.</span></span>  
  
<span data-ttu-id="80cdb-177">安全操作：需求。</span><span class="sxs-lookup"><span data-stu-id="80cdb-177">Security Action: Demand.</span></span>  
  
<span data-ttu-id="80cdb-178">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="80cdb-178">Associated Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryInteropAssembly">
      <MemberSignature Language="C#" Value="public bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPrimaryInteropAssembly(valuetype System.Guid g, int32 major, int32 minor, int32 lcid, [out] string&amp; asmName, [out] string&amp; asmCodeBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryInteropAssembly (g As Guid, major As Integer, minor As Integer, lcid As Integer, ByRef asmName As String, ByRef asmCodeBase As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPrimaryInteropAssembly(Guid g, int major, int minor, int lcid, [Runtime::InteropServices::Out] System::String ^ % asmName, [Runtime::InteropServices::Out] System::String ^ % asmCodeBase);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryInteropAssembly : Guid * int * int * int * string * string -&gt; bool&#xA;override this.GetPrimaryInteropAssembly : Guid * int * int * int * string * string -&gt; bool" Usage="typeLibConverter.GetPrimaryInteropAssembly (g, major, minor, lcid, asmName, asmCodeBase)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ITypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Guid" />
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="lcid" Type="System.Int32" />
        <Parameter Name="asmName" Type="System.String" RefType="out" />
        <Parameter Name="asmCodeBase" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="80cdb-179">类型库的 GUID。</span><span class="sxs-lookup"><span data-stu-id="80cdb-179">The GUID of the type library.</span></span></param>
        <param name="major"><span data-ttu-id="80cdb-180">类型库的主版本号。</span><span class="sxs-lookup"><span data-stu-id="80cdb-180">The major version number of the type library.</span></span></param>
        <param name="minor"><span data-ttu-id="80cdb-181">类型库的次版本号。</span><span class="sxs-lookup"><span data-stu-id="80cdb-181">The minor version number of the type library.</span></span></param>
        <param name="lcid"><span data-ttu-id="80cdb-182">类型库的 LCID。</span><span class="sxs-lookup"><span data-stu-id="80cdb-182">The LCID of the type library.</span></span></param>
        <param name="asmName"><span data-ttu-id="80cdb-183">成功返回时，为与 <paramref name="g" /> 关联的主 interop 程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="80cdb-183">On successful return, the name of the primary interop assembly associated with <paramref name="g" />.</span></span></param>
        <param name="asmCodeBase"><span data-ttu-id="80cdb-184">成功返回时，为与 <paramref name="g" /> 关联的主 interop 程序集的基本代码。</span><span class="sxs-lookup"><span data-stu-id="80cdb-184">On successful return, the code base of the primary interop assembly associated with <paramref name="g" />.</span></span></param>
        <summary><span data-ttu-id="80cdb-185">获取指定类型库的主互操作程序集的名称和基本代码。</span><span class="sxs-lookup"><span data-stu-id="80cdb-185">Gets the name and code base of a primary interop assembly for a specified type library.</span></span></summary>
        <returns><span data-ttu-id="80cdb-186">如果在注册表找到主互操作程序集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="80cdb-186"><see langword="true" /> if the primary interop assembly was found in the registry; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
